cset: moving following pidspec: 11565
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306216275 seconds)
loading group "string"... done (took 0.593140639 seconds)
loading group "linalg"... done (took 7.227263451 seconds)
loading group "parallel"... done (took 0.169202242 seconds)
loading group "find"... done (took 1.146946407 seconds)
loading group "tuple"... done (took 2.008524996 seconds)
loading group "dates"... done (took 1.294773425 seconds)
loading group "micro"... done (took 0.240268188 seconds)
loading group "io"... done (took 0.978923881 seconds)
loading group "scalar"... done (took 39.825052865 seconds)
loading group "sparse"... done (took 12.776568017 seconds)
loading group "broadcast"... done (took 0.994641428 seconds)
loading group "union"... done (took 13.761992899 seconds)
loading group "simd"... done (took 4.643813091 seconds)
loading group "random"... done (took 9.045807231 seconds)
loading group "problem"... done (took 1.956672155 seconds)
loading group "array"... done (took 21.28491999 seconds)
loading group "misc"... done (took 1.961350394 seconds)
loading group "sort"... done (took 3.221715217 seconds)
loading group "collection"... done (took 18.01409481 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5292162 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14073791 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116506182 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138188779 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182669806 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13163652 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143390354 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08428503 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.020832002 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167889346 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140724919 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477435876 seconds)
done (took 5.031348343 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199190277 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086557045 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095088631 seconds)
  done (took 0.885053682 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06539182 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125661192 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07996539 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067333173 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066454559 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080682325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066571492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065574073 seconds)
  done (took 1.26319742 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073508217 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067883757 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084041083 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066931936 seconds)
  done (took 1.001007654 seconds)
done (took 4.134170162 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.896529495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232541321 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189287463 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453145961 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147117511 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187756538 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661758485 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336911179 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209326937 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099907233 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10384065 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377925099 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106979168 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659950503 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077816343 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106066281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156651624 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440969106 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081272623 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082353506 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103492892 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141053119 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10219218 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076776931 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168008215 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069326302 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146205246 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094919496 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068257802 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241842276 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189928018 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682716223 seconds)
  done (took 10.436586802 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099804065 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11549656 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068718669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139358038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100037834 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085861775 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070567403 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082410138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090982513 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156728654 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113716739 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104636404 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080528425 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069166767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100228442 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211036278 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10700791 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084496272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085768716 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075416927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12149392 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082334607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09331789 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077192667 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151151008 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194131061 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110430689 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111301208 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068192708 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079316844 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130752722 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142436332 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065471353 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08104273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1381941 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109868006 seconds)
  done (took 4.522574456 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.031617253 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160561079 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090693084 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15217885 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085026834 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109378643 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082416414 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098407011 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244838344 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.078409708 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086247128 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.473341726 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12819342 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08606455 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084883451 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067519969 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083231448 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517001117 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142690603 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101839409 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102004187 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072631257 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085097715 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356663583 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067926309 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065730677 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084182192 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058805275 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063580107 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143151419 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084336516 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.201941445 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110115238 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069958463 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120128101 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177727692 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096220975 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.170846863 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066349186 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065272093 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168209683 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089706471 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065231714 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10485916 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091397642 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11858362 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119199621 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068334013 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082042728 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178344832 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066566117 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082170665 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.890895036 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165822793 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079190533 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067704676 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287393254 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083450476 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083988616 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063715549 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268240881 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153770371 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068081418 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08384863 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067398568 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068879682 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385381856 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069597926 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732475389 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070534933 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077797106 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086755659 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068638836 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090640729 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074503639 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101875939 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068467062 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068381736 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085385118 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06692287 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085986848 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086758527 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205644163 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085660606 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068376715 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06537931 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105105833 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11313583 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071615472 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06623514 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118933704 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07129607 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08563104 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103080785 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08646401 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102718398 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071660547 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130393079 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06911862 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166467533 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067347976 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066346831 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115984362 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092064525 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099476638 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095801552 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067905722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153126323 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065707948 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083461307 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067605782 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082376304 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069656655 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069468033 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100688035 seconds)
  done (took 20.97639548 seconds)
done (took 37.674710163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294923958 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093267484 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09168546 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07428082 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090991527 seconds)
  done (took 1.433946501 seconds)
done (took 2.195842791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119590112 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115613877 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06293294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111114861 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063438432 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115799236 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112444391 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080864213 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11509179 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066827074 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111346957 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063771099 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063454556 seconds)
  done (took 1.989713889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082861256 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085437285 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086487915 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083420101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080018443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083710653 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08091541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106507137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081205994 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089184581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065257601 seconds)
  done (took 1.682461118 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081509093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082896182 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086569111 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082451873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08000069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083180751 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081910002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104337581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081887136 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090320373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064514275 seconds)
  done (took 1.679890167 seconds)
done (took 6.103067189 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076791388 seconds)
  done (took 0.829877546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693817233 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.645436054 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082997224 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132979254 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220899822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154178025 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440639438 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108700102 seconds)
  done (took 10.404241349 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090093339 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100941724 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070062385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088595725 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071958014 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086813364 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069117441 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070781179 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087762614 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069318248 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089588914 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072780624 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085021824 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074172138 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072139439 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086526744 seconds)
  done (took 2.106880015 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095002029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094118162 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092569575 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077426265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091623365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074094473 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093876271 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075567099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088958193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073909995 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092461386 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076033049 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089788374 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067096722 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092488131 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077233736 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086346496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074547143 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091082631 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075104029 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090826738 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064231112 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086971189 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074107887 seconds)
  done (took 2.864161808 seconds)
done (took 16.964029435 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130808761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075446443 seconds)
  done (took 0.966983734 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081030561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096899737 seconds)
  done (took 0.945182921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082478942 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079983202 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089531932 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092126044 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066007522 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080801742 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101547214 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065616663 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080431582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066283948 seconds)
  done (took 1.571925372 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068818479 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091911564 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069679212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095610538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072727693 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07974093 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072531836 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082785922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077816075 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077425002 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071322504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098233397 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071440929 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099472868 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072635188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084517543 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085862843 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067486856 seconds)
  done (took 2.210010293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065254702 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066654817 seconds)
  done (took 0.901975815 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066757786 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063539824 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081151177 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065752863 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078644624 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062276427 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079004546 seconds)
  done (took 1.267520315 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398596953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10847493 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243643993 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087648791 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10155866 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263489961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083011665 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070831279 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087521317 seconds)
  done (took 2.251733632 seconds)
done (took 10.882484768 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079088617 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084292329 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109903693 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41884339 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105877655 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066038366 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.141787988 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.20722431 seconds)
done (took 1.984383994 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124368853 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602420646 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39732483 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210739008 seconds)
  done (took 1.985447858 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369575767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090432124 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07449256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068794475 seconds)
  done (took 1.382413358 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065767565 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069135565 seconds)
  done (took 0.914029932 seconds)
done (took 5.182254012 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066435793 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100809074 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065689256 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065856469 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081324132 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065740191 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063686333 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082754178 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065715698 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065709851 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081488052 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067860905 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080668434 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063520136 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063941102 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078456551 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065801128 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063379749 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079324533 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063162383 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06578545 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081145284 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063985442 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063374269 seconds)
  done (took 2.518005625 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084727254 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082868819 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071415957 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087496419 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070450903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086444654 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071635893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06588456 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087452438 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070745853 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085184546 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069995889 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083032569 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070477549 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083394276 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070471323 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087037505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067164023 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067547782 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085594116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070917008 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082389262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069872915 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086814133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070030126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085687755 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068277042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081921259 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07107342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085659482 seconds)
  done (took 3.103381395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070049137 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063103414 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079738489 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069697668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063840912 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08122891 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063232228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079579855 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06497327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.0637508 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080672973 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063664035 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063154978 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080003839 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064359706 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082544701 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079504723 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063865196 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079409018 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063827396 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066239627 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079049328 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063480247 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079297949 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063510349 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063380195 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079171845 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063929946 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06547905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081411897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068589317 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067925021 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081641754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069754201 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083426532 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063736883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067605997 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078637787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064188267 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06276365 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079173063 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063140583 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063022727 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086008827 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064741114 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082621173 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064033978 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064612481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080276958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066458203 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079480369 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063817991 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065193899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080644083 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067898534 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063018602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080183042 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063013649 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080347276 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063738776 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063137078 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079115833 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065735208 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064715243 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094738804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070518481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079185638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065178267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064717751 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081995067 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065423906 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076891264 seconds)
  done (took 5.908599184 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115659382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090267262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082347122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065921753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078571345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06417402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067146894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080012471 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066033649 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085927003 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064445806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065052102 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081336776 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076789348 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079974719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065721037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084870817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062648225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063832389 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083291391 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064756094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083729846 seconds)
  done (took 2.459463685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183996839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087156062 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107553052 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089834424 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084257129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073793829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068908325 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085685491 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070451881 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0846098 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068137233 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086269422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06753036 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084241716 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068158041 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08421301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070184928 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083550731 seconds)
  done (took 2.334035165 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077459181 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065675423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104764966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066266504 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082857379 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068374332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087108865 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075095799 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083965042 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06650117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090752989 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06802152 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083991306 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06588964 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068057519 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082288231 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069055679 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081927991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074897092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086426419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070877285 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089856327 seconds)
  done (took 2.497502819 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081118188 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067134917 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100229271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084357274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062066913 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064335066 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088383898 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066351204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088228529 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068003777 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066224957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08084616 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070571756 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082257518 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071262445 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0821396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068131778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066108821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084549102 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062139173 seconds)
  done (took 2.292767458 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086451185 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082769891 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067562274 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091502937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066923232 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083167488 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076904602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082596852 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06765735 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107170545 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066941838 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08492181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076289274 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088831238 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067340455 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091655377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075273893 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091807643 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06724185 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084268163 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217539443 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067647307 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091593524 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067129788 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08300438 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067731628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067306759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088672284 seconds)
  done (took 3.15072005 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066581381 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066234366 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080104388 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063727191 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063138019 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079793421 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063946122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063985349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082997056 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064410981 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065250464 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082789333 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065891104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081792542 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065825327 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065604167 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082168822 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063602876 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063269198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079907916 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06623031 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065548472 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081571835 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063805223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079284203 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06581203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064634493 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079519212 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066072353 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063910853 seconds)
  done (took 2.901518615 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076758383 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089726214 seconds)
  done (took 0.962105999 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064324093 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080517475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080426845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069242822 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086849982 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066713639 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089612534 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070314612 seconds)
  done (took 1.401781417 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081360081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076397047 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084278835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077413983 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09352339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082833335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153501092 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083865056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072641518 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080943652 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079377492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065398708 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089667775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066788554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087885447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072272026 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063929856 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088223599 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06859223 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081683357 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06803548 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091089017 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068879222 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063207772 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084674155 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074613203 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093425641 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067378995 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085957858 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074355845 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071765568 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077307551 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066780965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083659152 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065013126 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092137842 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082037655 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08525419 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075551539 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067351414 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092411713 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061656223 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088323853 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072249446 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092545284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067456999 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066301211 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078146013 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06447466 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084678489 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061411379 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066578168 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077610833 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0732165 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086576529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077211892 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083828959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068606465 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069609457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086372878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073367471 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084770323 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069517789 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066529845 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092593198 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070784506 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091811114 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062358046 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060535698 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081205553 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076509608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1056432 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073508543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083905669 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067316053 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081299504 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069736325 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068586871 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08806044 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071879734 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083721703 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072653542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090167472 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067447092 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068818447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090796018 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064879305 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085157422 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064593175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098809278 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065507082 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081060641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064846857 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076782467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086502188 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066940283 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080782125 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073101998 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060658728 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083354782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066874277 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083463557 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076670935 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087679901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072260493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091438445 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074636229 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066768551 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08686304 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063602906 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084107354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06538012 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072765695 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077688709 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069322536 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083032172 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066969441 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090595098 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064502249 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066897465 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090799484 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071989628 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081696234 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063483396 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069616984 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082885827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070096473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090999717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065398487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061586719 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07837197 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070052064 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082530324 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070554254 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087969556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069568632 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061129737 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081708978 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070924795 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091682295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067221532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083458432 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073333483 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067586392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083139837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073235319 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085305788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066220215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072343683 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083993927 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061995633 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086022971 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068963199 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064666254 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086738883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070104622 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085188537 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0669132 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081185454 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071763534 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066463063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082368202 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066414328 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081252809 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077044766 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068263782 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079055913 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06420613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090462551 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065105169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066109204 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082366046 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068895734 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084259126 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065196507 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065259751 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085124428 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077218606 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087130901 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067592868 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088659071 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076903562 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082611154 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069078611 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065749464 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083878141 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067532743 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091672181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071908333 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088793271 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069061058 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063463792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088325455 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073652063 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082540704 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064859429 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06482475 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087257898 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072302395 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087052886 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067364364 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081349813 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067066422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068749503 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086082005 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066674452 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082002202 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071783093 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081849652 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073669656 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066657837 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093451863 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069755337 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079065484 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06998068 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081413223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072800386 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061274246 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081640333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066005303 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083919251 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065298557 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069457297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07774269 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073312461 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090062997 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067153278 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066578027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083475241 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073039772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084653807 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070526511 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069723485 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089145142 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0765431 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083123255 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06947089 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092726578 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066904005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06031811 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088413848 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065789646 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082530734 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065720972 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064447067 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086471549 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074491502 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090258519 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060483048 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085245781 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064971755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066320855 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079095585 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071269273 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085893061 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067546554 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072656234 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084541945 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066500549 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086946238 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066145596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066919025 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085703286 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069069212 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083995623 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068514989 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082930559 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069619915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065818073 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081663048 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068654317 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083409006 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06738402 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071857649 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083838095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066676242 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086074915 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068046992 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067065729 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084644097 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065874191 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086435771 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067653847 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066893536 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086325529 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062576218 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090566213 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06692936 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073977134 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083792459 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064159498 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088119851 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069168963 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088037704 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068205984 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067857815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085341304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0670603 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086145477 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07294553 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064651498 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094166004 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074086122 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084659637 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069303793 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083490227 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067982768 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065649061 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084411978 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067725106 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06688749 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083055649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071007928 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085561321 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067892136 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084632118 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068121271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067012744 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0843006 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061606784 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065470674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083705657 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066613711 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092817901 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067421249 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083131801 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065939547 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067004847 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083594816 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063850694 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090737316 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07512456 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084369361 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07402496 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082854286 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068168221 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077137349 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0783205 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065166742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081404131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064652239 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073199421 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085005224 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075056245 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083292386 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066953025 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064580238 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085433423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06519083 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078353913 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06534491 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070374369 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083350749 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066633184 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066957213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087420366 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067643072 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093137087 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066432118 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084660357 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067446204 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06387139 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08319564 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066090968 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08647844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068299545 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064648798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081428432 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066768683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083769371 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068759144 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066460913 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085324745 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073772568 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08328883 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069645348 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068902431 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081188815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069755011 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082900057 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066657431 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065469721 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087122036 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069894491 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084854557 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075480521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083534142 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067500868 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067117582 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082397156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066196755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083155837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067133412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065601744 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084587388 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074120541 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081499068 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070724079 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065960255 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084488905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072590946 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084277741 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069743245 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090186351 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067487383 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068476955 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091281257 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069800442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087118021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067989347 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084713157 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072121372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066018825 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089728844 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067536183 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084065927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068254391 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064581148 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083942095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067475984 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064628738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09058836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067525489 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083398348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065919889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081349913 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067620589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070431119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09146812 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06913403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086952523 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062418829 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063509624 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085598498 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064627063 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085129284 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070062884 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071540379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087048867 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067047029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08264518 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075737652 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089240636 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070179926 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06498723 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087593109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06741124 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085979756 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068422012 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066254091 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085007869 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070770355 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085334163 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06628566 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072780499 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087433249 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067598827 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085845529 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067492128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066574586 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079125234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068153906 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085554465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071992178 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067885566 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084126867 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076684365 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081971555 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067017483 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087362572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0662354 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070269209 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079672288 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068322153 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084688495 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067877219 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061413109 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083737736 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064687634 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086026801 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065883428 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06203665 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094353624 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075783631 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086539817 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06562212 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081628646 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061979646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062038094 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083439936 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068662663 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068173035 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093234735 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066070853 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082874509 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062384473 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066521818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087331977 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06888142 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08166815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062146884 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065169218 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087376291 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071589168 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082964352 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067260844 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070093201 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08714049 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06477446 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086835678 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063764519 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087521682 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079643464 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066998354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085331994 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072717122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091944221 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067600362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079873057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067695899 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069083173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085307884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067114118 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08489639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080579877 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087055536 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066130804 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064799548 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086961083 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065975241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092381135 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068121074 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084436055 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072070213 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068067235 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092645646 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069160708 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09168265 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069299863 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086638924 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066033105 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066926638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082517259 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065671327 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085117185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067587067 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071028359 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092017478 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065623344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094705592 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075321151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086313335 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063935202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065772267 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084240089 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062296217 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085313635 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064870607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064628721 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082780447 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0659624 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084828432 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072929661 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067641322 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085170122 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066903854 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078118845 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069723247 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069426124 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085540403 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063702673 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066199251 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086181028 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069731163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088232956 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064734239 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086073081 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06865128 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067141129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079577947 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073164179 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082314355 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06931425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065703146 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084502587 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06785491 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087169415 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071733551 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067064871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087142023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075160341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086731031 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06398145 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063274675 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090468391 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064125071 seconds)
  done (took 45.893909733 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106887728 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081427867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06209618 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079875774 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074142631 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081319729 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062041647 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062931765 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080610688 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065777643 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079154567 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062667232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088409912 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08578766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092935978 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066215427 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08035633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06286135 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079990483 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064016562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088495494 seconds)
  done (took 2.450790979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074937737 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088658349 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073309156 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094677931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068377118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088536627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07203896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088870773 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093214264 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067543425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093578887 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071012876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084916223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067281951 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084626399 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071064326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093840444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067772712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088101841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073250886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089056102 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072837321 seconds)
  done (took 2.605870965 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066925055 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0653968 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085308864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061649868 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065086627 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079323393 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069258446 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081255883 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069227257 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06549263 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083171483 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073145675 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085336446 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061486283 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066827897 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081522344 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130992996 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069987778 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064867623 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086059954 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061722599 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086667515 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062033559 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061064276 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083140125 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070237601 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085376452 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064329107 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065473254 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083118357 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066110525 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081055019 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068087364 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065794812 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082342634 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065451847 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065377759 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083773906 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061931672 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081753207 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066941749 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061608927 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084476738 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067740077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063162481 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08192135 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067387681 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083324994 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061568155 seconds)
  done (took 4.440357707 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084556847 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12868157 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086798556 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089159829 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100322995 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092327544 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069798737 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110350028 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063103805 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083998788 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082358104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103036061 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086016671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070528427 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090716757 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066849716 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066428246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084144702 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070508986 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084188942 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069838087 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091797598 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098945418 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079841862 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088401285 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06530936 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083527125 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070756982 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097483015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071617805 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088361034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071525962 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099641233 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067483438 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083973426 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068570384 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101021102 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065802812 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087454701 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063211624 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086141396 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070757751 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090599348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081838098 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084646888 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071225937 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084350435 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062715956 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097443369 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068338219 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09297917 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0984954 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070728775 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084699979 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071111212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098423342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06688972 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082378524 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069466452 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09655778 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064378763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088365381 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080161616 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085629181 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074067289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098661826 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070978195 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088250203 seconds)
  done (took 6.579151468 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075853763 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090473158 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080827833 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099464546 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090994799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072928484 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090341261 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072924776 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091434878 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077904748 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091431628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111623057 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068676878 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093319082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073097207 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091521083 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072279469 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091710596 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071681913 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0913816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090608574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081031237 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090043611 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098385026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103143629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086241177 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073237538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090406572 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080827892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091912781 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102609983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072458521 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090968401 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098924095 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084781005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090879933 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065742855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090791228 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07374701 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091546067 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068121892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098895574 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072389523 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086124336 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072002848 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090844012 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098787751 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083286093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094059203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096334972 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073324944 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099799068 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072318372 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091301277 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099702898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105243145 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098893309 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099486595 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07216309 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098923562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098740118 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106585812 seconds)
  done (took 6.279141552 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086818359 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093602848 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095962827 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062002582 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06462232 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089587988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064151382 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082080866 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075051545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094139227 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078064463 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088469969 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07316412 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096510275 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087993687 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073730952 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088492404 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070024486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093403093 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070029272 seconds)
  done (took 2.48338324 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075780017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101297847 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06757882 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072157756 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088589897 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071155071 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08736611 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069815793 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085337008 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069271057 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094826634 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076324639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085754897 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072460152 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09463506 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07257862 seconds)
  done (took 2.143233834 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078868854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095706444 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080865523 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085932048 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065208427 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082328428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066562925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062070955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081786001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081194586 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086213292 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06825119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085606638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065213777 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063062022 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087871153 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0623769 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083265639 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066259406 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099122857 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07769054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083736623 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068332604 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067303066 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086364462 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071014163 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086011857 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063361907 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083971329 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066737373 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084805514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0742893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082136059 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065582205 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063880358 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082132818 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066128897 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084836317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069548798 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065155692 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083370755 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06606113 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085110117 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067040226 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081163996 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06748099 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062100529 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09134847 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064983517 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085543824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066234604 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086242274 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068057 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075812323 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089511857 seconds)
  done (took 5.042202225 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080091971 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068587587 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080995886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064687895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088159521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067982696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068832928 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087435516 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068143928 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0834152 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067792088 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087266413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068329822 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068984854 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086356228 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07006936 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080055428 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068243499 seconds)
  done (took 2.21886819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072229244 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066356287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092232224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065822159 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084639589 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069137033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062236818 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084092976 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064640587 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08449666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066415031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06797284 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083719082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068925112 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083988843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0666742 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067781307 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083797254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06599914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081039371 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069474716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064550845 seconds)
  done (took 2.480966913 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072627033 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091957853 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160402617 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106095202 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082544218 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098315107 seconds)
  done (took 1.477403871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090305783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097568138 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067033137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106368182 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074928723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086844607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068173388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086480344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0773936 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099332812 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068188333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095736979 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095107333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076220779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093214614 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073529107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087079253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067643593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085784729 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104238897 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069331368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094563537 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06880332 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086031159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068074588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095075058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076887696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100574222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086710978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076852447 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092697107 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06803944 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095623752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100284227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070387793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095825069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068943935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10609825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073130518 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095234897 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069090096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093844458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095675784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073303099 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096415542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068846263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092410643 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068074456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08876802 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110325257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074149237 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096503191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093143507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077377567 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095701982 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111915462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082354488 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09560351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09229486 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082484796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09674036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073208097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096870571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100474732 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07461586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095444536 seconds)
  done (took 6.549709798 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085463449 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105483671 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069321568 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101431085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095232295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068542246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087237959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069474858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086541093 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068753027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128275303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068823524 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095920606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095070905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069815539 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087079205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069158621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095406833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06829948 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112179665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087074163 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076673806 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096129338 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093874118 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082195283 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093687679 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06789511 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087540591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068490189 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087482782 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072965192 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088284863 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095369843 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067992349 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095831672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068990803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087261652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074303559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087749471 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073334946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096400934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105162576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068652035 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086961176 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082197773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08810126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068853646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088023313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068475874 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086946895 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081544081 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100494445 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10006125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095075271 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07004032 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087475772 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069509312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087950537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069856354 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093023902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076826929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087697734 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112323678 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06925285 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087431319 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076541775 seconds)
  done (took 6.45261197 seconds)
done (took 127.406322697 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200767447 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183679534 seconds)
  done (took 1.247709128 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069287176 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095122694 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097477287 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127156374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086280627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099874003 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118285763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078993259 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065672872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08576607 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066598602 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086979787 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131493689 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067002707 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085533855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068367802 seconds)
  done (took 2.300581151 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102553383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194358551 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10809794 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065413731 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098897226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077815918 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084581844 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077713996 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093251564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065729958 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077592705 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095717525 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064822941 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095596835 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074994757 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097883713 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065186653 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097535736 seconds)
  done (took 2.512669626 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103712497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141171238 seconds)
  done (took 1.115710678 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198741461 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123185152 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201090458 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409638171 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204199511 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277287785 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173017764 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170825633 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.150054121 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169075681 seconds)
  done (took 2.945124511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099312135 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169717264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309658912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.135668559 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085956036 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114751347 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137674611 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088775299 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101055284 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099568787 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080161539 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096964562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097266358 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09506245 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073979421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096901313 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120708839 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073802093 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095431843 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076404892 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117122083 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06733067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074042117 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094673762 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076313482 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097563057 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066176982 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085639353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076248531 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094235682 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078863407 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113361675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096679369 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13007825 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081152917 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130324636 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097353905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072377837 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094649874 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071378485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097185878 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077116267 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102591536 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076260033 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085462558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077155625 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085835575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066698106 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098558132 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076833749 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098706127 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078203966 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128832346 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097075684 seconds)
  done (took 6.181037152 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743912103 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10987497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093265456 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.799937814 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089695308 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104844392 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.70814683 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116930312 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207795437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761263503 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089365696 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097676942 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178271657 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233206156 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878066584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280578966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631058439 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104439315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107745059 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130666009 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137774294 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174803616 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149400249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43114853 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074316028 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092341629 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135804244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074120336 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158220595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084282889 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092717267 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15578799 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223149158 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153930144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096132361 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069920174 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090367652 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147169138 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219499728 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189301093 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158400717 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067525118 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090606803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138679579 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130992247 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067641787 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138221005 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170352444 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147981285 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072929194 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094499417 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141012946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13711462 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141206922 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099950732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.259571035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287977714 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089931612 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098401478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104315758 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214627505 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102965373 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197183312 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138840219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165035832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09043203 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729935096 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144819902 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091189807 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073158879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117498925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093736609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137771411 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146452675 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.347116069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159792614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073247857 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089687067 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202579805 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08229055 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092053489 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141443569 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074387517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120773758 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162256145 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141547722 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146168651 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203345199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140040566 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156548067 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074435241 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121407921 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074843043 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190308572 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191348873 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138674573 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18694136 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158925474 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140576222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146485163 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074917169 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170509369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097480834 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100704797 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136560466 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189869449 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121852625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082062643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093897221 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138709924 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124167941 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085178286 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137780998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168240578 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.451649437 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145188388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066781559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107070766 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137172616 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139175725 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095856637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211157918 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12179092 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.144720809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118758733 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088899987 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11815916 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140674366 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077342334 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120619783 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136892112 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096952535 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213393542 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189033453 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076676659 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191150107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160684698 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095422417 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147790856 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118919821 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144365474 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0765684 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15646539 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076381741 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75841759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143526073 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11940542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072905753 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171980663 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06951176 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103571224 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10248909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068148444 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751481176 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08501889 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100260982 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082677466 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094858394 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120253331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1358888 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073011723 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136681882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201080479 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095420545 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096420566 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103559344 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139018862 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095513285 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083021367 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103522402 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083346873 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121199707 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093027606 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082594136 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143843622 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159707899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.169206189 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568192762 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071396542 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103198744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177671845 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090855367 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238480664 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156277611 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.175240386 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138691904 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101083474 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290042205 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142283164 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174048714 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086125596 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148745073 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089650684 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136442073 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142790203 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069775933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096514615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138699698 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142467785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161458791 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.876636158 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090928832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204041923 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067773827 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148149974 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095930413 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076220044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259156012 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069550391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165987224 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142498425 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072543511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10858088 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701595947 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103622032 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138158197 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07324255 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192659837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140156796 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134577587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.156894411 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075530638 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137200351 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186512292 seconds)
  done (took 40.049395545 seconds)
done (took 57.222724802 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256488867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176652803 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241458268 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144621794 seconds)
  done (took 1.788903112 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142287919 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103770772 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116669223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084927265 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102558199 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085848752 seconds)
  done (took 1.53265601 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399223883 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265089657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230924892 seconds)
  done (took 1.792326118 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.25984111 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211218791 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445121464 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295859598 seconds)
  done (took 2.236884347 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174040228 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111434057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067441034 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104539341 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157174554 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248738823 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125279384 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185037727 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078965063 seconds)
  done (took 2.194796037 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194933388 seconds)
done (took 10.641963683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.220873993 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.133248307 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.147683086 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.236656506 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09869426 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.196286633 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08358069 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221328493 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077080492 seconds)
    (10/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095536895 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062669197 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.2297861 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093764851 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233464525 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078030655 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095416225 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.208711221 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134290115 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205258582 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110752573 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178003579 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.208292179 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104048587 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102503658 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097958346 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168642566 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.158467337 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10590413 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.122108347 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.168284664 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101635095 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.152729632 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114802424 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11070536 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168690831 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15480477 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162282624 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094030033 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190449392 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072903744 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106382328 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119780747 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.185287896 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198272409 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.160972698 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07078987 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090495986 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.250554481 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108471754 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093870042 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073667895 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113100907 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077260681 seconds)
    (54/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108508748 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097531169 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212002694 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.145677692 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201989939 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067138948 seconds)
    (60/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093524278 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072982566 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092842852 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067127188 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192691167 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076239071 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097949969 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153208018 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163504707 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193494038 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095284825 seconds)
    (71/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.084904264 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052272585 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180226282 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095674301 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093323736 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113966794 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08695386 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108736414 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194965844 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051641395 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185600418 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095725207 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.067935292 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118679996 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053309908 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07378348 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099039557 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092723291 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103982061 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.142654212 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191942373 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071897661 seconds)
    (93/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.130846165 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070040513 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086636956 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089953741 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086225855 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09069144 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07363228 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.200600989 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099948709 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101064219 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095211958 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077916577 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074083467 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122920681 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108175299 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076363496 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06645878 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088653318 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174093823 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145050633 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191415448 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073189515 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113090394 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119076937 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089312591 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053080325 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097176285 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147267274 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157421797 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.167304888 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07523813 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095186957 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067526747 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113647401 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06943389 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063402411 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070339579 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094919763 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091964316 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100969533 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.136286758 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090943802 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051508572 seconds)
    (136/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075270252 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074936951 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157153449 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137084912 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0946155 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072338202 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190672302 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118858371 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087835389 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074090114 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170686031 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05206499 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051257649 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075273363 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163174187 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052304662 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072646154 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086661683 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073844413 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077234017 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102900327 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112315659 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114887107 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071517006 seconds)
    (160/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101880567 seconds)
    (161/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073337904 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113349748 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074449345 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053456212 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088111257 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06809353 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051966548 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088242148 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098490585 seconds)
    (170/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069360977 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072933821 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.160719102 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074188083 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066444123 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088054136 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113665774 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066777461 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159366959 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067370741 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104845561 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091283046 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161717855 seconds)
    (183/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079792081 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099879616 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051772098 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 0.152131181 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074267336 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097344143 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068315582 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05166615 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068993791 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097134444 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052060703 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062912193 seconds)
    (195/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074766121 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074026047 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112216379 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096182054 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087773115 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065834414 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053196067 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051258858 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087039616 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.270173842 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051327631 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073193258 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063088972 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072289615 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112845738 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124598937 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098244883 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073942971 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097783355 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079550933 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066570628 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089118669 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06642614 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091949595 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073523727 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208742252 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069043677 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172333342 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090019329 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051930561 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065288685 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130471679 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076343241 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158745863 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051141525 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052578596 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162157721 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050799361 seconds)
    (233/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073203691 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065491201 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141410276 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06715697 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.127100526 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051344154 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065481291 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168094228 seconds)
    (241/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052940103 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087673317 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111240636 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074368545 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066515149 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051348221 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.089508968 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065579741 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071414085 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112639367 seconds)
    (251/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054229056 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08782135 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052969056 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133448154 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133907 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051391248 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07599248 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072256747 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052359608 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124572213 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089523427 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089913525 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075107619 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125800093 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13374001 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088727508 seconds)
    (267/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074093871 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065731587 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089560941 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052616641 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072249732 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162800376 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088877113 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054157805 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061551207 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051999604 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.120549388 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073259816 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087946136 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065351035 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 0.164046507 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073529615 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.07415512 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065179696 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073991878 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086737397 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054252325 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073150396 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088583617 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07860721 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.107628476 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062028361 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 0.147331872 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052131006 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051351042 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070048645 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087323931 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095508636 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090070734 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053136986 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066096609 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072572164 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07098235 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061315684 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093513162 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051321318 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053406758 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060866759 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07418917 seconds)
  done (took 32.943529018 seconds)
done (took 33.849936826 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080278103 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113235089 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075230427 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114063381 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080652997 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099581719 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072844755 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077569736 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103385421 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081501158 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100736706 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054463256 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09691128 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075767406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096280872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091856592 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100618195 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072394287 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074008338 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087356125 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074331719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086885703 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06796646 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055188894 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099288169 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07297648 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072238231 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09676365 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065919049 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087720925 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069334705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072446493 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087552992 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079103342 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093309724 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073697672 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075981033 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098094327 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068082383 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087385944 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074092382 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065628532 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094581887 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072973705 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07040375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092822506 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074447368 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100904647 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091168514 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0896711 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073753473 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098035804 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077324854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071638131 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09182895 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074377382 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09159069 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091920269 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096221462 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068532945 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074040241 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09629945 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071169834 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095163843 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074503678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075263459 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097793795 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070593698 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096699273 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071269854 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065269285 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095045469 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06890772 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064950712 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097421661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076149252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086130467 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07203326 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072705824 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094148778 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065405838 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089099402 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067345728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071894758 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088866555 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05512353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069237699 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093382345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065618644 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0739509 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094092995 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072913011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088483358 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077216195 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065557962 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092289672 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066066909 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065942669 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089715394 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069931635 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064949971 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090222268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074450636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0882299 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072423261 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079358862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087967807 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071877457 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086834592 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065174152 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081816852 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098036327 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06620639 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089701787 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065134196 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073809597 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086650024 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065928141 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06612136 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087857209 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071936006 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06564239 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090177569 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073523511 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100518494 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065763393 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069571531 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090089284 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066424486 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071152503 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087686983 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066038021 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088657129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063206555 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068817623 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087735923 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073657313 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067845457 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096182942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068041275 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095664066 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070601753 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072176284 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092884315 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065078897 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05930041 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09029814 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068141969 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067870554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088061419 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06760115 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065230092 seconds)
done (took 13.091991247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066997601 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167545912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124633319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095763917 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109333991 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066671031 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099885185 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102915712 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090074162 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125925541 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087538089 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106762444 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113987005 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088273812 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066877107 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069856515 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09057357 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088444947 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123696212 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08627013 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1391981 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087554775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119817314 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09022701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111578633 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094138185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088999079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070208659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069671417 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124312173 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10747771 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071107845 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066672867 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121554911 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116664599 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08604322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087929921 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085043653 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088316579 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067118778 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113211628 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099769647 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103618104 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082336436 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09422449 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06884898 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089122691 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086362269 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113423343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080017698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110872238 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132476218 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069304321 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104393256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06510258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109697788 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081246858 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091178673 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066959167 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09095602 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066346207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06953292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111005978 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.113844398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070656667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104517404 seconds)
  done (took 7.212773962 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084792079 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115617886 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084308131 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106557208 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066435077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066686624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08983775 seconds)
  done (took 1.582690443 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067348644 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088538816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111601442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089249393 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108837146 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086920104 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098737612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067091837 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106406502 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068791349 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086746652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128076208 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067776425 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096348008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090749384 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08969318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090528957 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089538089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07015399 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113207536 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069429626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109143914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069059335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067903583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103340038 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06718713 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137636347 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071809908 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089971588 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070955681 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065321616 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139740559 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104043883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078060887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067087159 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104658825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08226746 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087676172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083441063 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094271449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081572387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067925609 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091283236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065776075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071709129 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100783041 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068916285 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090105298 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07062478 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086630464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090738477 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081292354 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089606423 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07105871 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068326698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096329623 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07752948 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090068443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087068501 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069105143 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106178228 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083789053 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104398873 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083859968 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092828237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081811605 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103605782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070048942 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068901984 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093382626 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084019747 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086979715 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068785101 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077688544 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091962872 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090271129 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113516212 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068931695 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100080204 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067893469 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068050396 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090492215 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090712937 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093239997 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067709198 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071977113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093362837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065140065 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066185336 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093321735 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066401164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090564713 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070395835 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068012635 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092223809 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085011338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067626867 seconds)
  done (took 9.247682263 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069294003 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068682263 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092060358 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068111894 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06872523 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091150906 seconds)
  done (took 1.446907018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098552328 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091864048 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082120386 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095495532 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107057779 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104750275 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083092281 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105136608 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085362346 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102322179 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082184597 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105021395 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088427839 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096388672 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082840497 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094657376 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083293013 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098829897 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079651203 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096426772 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088099018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095988643 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073808299 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083230428 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09419247 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073134834 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100530159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079265903 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101935998 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083497698 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095667621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071026534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094049002 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082663105 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104827953 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072350969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095042961 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072173708 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099227969 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070761128 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105215021 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073802779 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078896038 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094867611 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104846873 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072567229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072010017 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099988158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081906842 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094716878 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072054073 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095615515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071200177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094502259 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072232816 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105241187 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071580794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105549527 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073554768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072161092 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092726654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071290534 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104991461 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07074646 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10261177 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072403912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094722124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074039126 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096662249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073460604 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071831194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092558306 seconds)
  done (took 7.31057995 seconds)
done (took 27.766291299 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.647357946 seconds)
  done (took 1.630869004 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.762343417 seconds)
  done (took 1.748248215 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.524969432 seconds)
  done (took 15.514696323 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608602759 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.75788921 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.794001904 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1528916 seconds)
  done (took 3.298112973 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.877423673 seconds)
  done (took 1.887448187 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234668118 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223587624 seconds)
  done (took 1.448209403 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728563107 seconds)
  done (took 1.7239199 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.279514369 seconds)
  done (took 2.269130421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317603421 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181317979 seconds)
  done (took 1.497234445 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.516165683 seconds)
  done (took 1.514811145 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.544338508 seconds)
  done (took 7.549207224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228280904 seconds)
  done (took 1.23869722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270232788 seconds)
  done (took 1.270830168 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.124300569 seconds)
  done (took 4.127282723 seconds)
done (took 47.709615898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077804067 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082179425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104618094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079265311 seconds)
  done (took 1.341373837 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077363098 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073975115 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099858593 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073051935 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100923455 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073519945 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098260469 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078308873 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072556897 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097282641 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073873497 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094891068 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076064782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09786234 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070886286 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076154623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098947655 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073270618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099006624 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074144594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071177068 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097959396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076229013 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094956572 seconds)
  done (took 3.030141658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077261695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072804475 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097262097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072421934 seconds)
  done (took 1.326586193 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077205506 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115605495 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089343335 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077155673 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.116162056 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110104291 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068953044 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06979904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094551178 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077134738 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091180624 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098488999 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111381102 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077817862 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102146299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066308411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068674778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110203884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078056264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101292867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070503453 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079928228 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090878099 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089925602 seconds)
  done (took 3.143639461 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077260046 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127357192 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078733388 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114186065 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091628654 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089008285 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07582576 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114226642 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124951707 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089455481 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070721927 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06614035 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096156359 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065676775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076824643 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132814509 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135402416 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068711696 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120450321 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065801918 seconds)
  done (took 2.896262887 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07486659 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070189186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089089967 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068873713 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076918361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096363296 seconds)
  done (took 1.4914541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068148081 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067653621 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09044835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067180945 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071759754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089926724 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066053634 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067311822 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091150417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067763695 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067217189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08922081 seconds)
  done (took 1.913786019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421699089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069108623 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092767489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066118104 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071931799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09001263 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080417929 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068389794 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114238652 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067293512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090884764 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069028266 seconds)
  done (took 2.316731667 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260283271 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077399847 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321479428 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166974063 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139621003 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154144645 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104557828 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139761857 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197053296 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138169214 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199294331 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221505006 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133553046 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167055079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115172962 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131234746 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185200789 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220561196 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10544041 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222786113 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205726337 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15641045 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179474096 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128478502 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134726502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14950941 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0723812 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104876873 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233356363 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160513853 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200676822 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137922869 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0976022 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229814101 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224905586 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194962699 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1622583 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085003229 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156503592 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16442838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25562563 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115810841 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192784216 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133961677 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105564908 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172124557 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146400742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146422037 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136475896 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115561101 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174112197 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240022149 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164948136 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112726911 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136383857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141384069 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143107646 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104284614 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267095933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193668522 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1593357 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096325888 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099531284 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211057244 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15953941 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141739239 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153624971 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118366543 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16731531 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210996581 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146783471 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172614837 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180071259 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08905521 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147104316 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194607338 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15541772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227700599 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15517857 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073117491 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151838628 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129621166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10621038 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143957221 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100896354 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207626513 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124512937 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138645097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139875654 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135229226 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135911369 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194347198 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201369575 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129643367 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066306529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130250098 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148983026 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175950487 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113204438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134455858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146513046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079105584 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191512289 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075648768 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153652502 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103712186 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151607399 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162338106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076621414 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178948261 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102931576 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127875534 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163340507 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219981349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115744925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083239914 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226119055 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155222985 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131675534 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175552591 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214903767 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10227924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129447641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204863073 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24218644 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09049062 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222814639 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134281821 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084093216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112957165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155012245 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139509603 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148968796 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108336817 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152635976 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227464934 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075718049 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122259444 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1668661 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082842818 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107247115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140521471 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127955015 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096076609 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126645904 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132925895 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169602814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180370686 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109113605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177207497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099612549 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224700343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115803599 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131194409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104754149 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095289664 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164878846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217834784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080123175 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224867495 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155278696 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132225752 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147542165 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083756633 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19350639 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079273569 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071514615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198594471 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137779715 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136676276 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183866865 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131327385 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154278792 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152592245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163866003 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184690336 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161796394 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133659127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089134975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139734275 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153140242 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099010614 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119659297 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083366156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13083657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122958237 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083848694 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197893792 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155254101 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126715196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114458077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122202222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203896522 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078151547 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158005671 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146246035 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120965336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210996889 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18813917 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16445133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126208787 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200875347 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071382533 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074665404 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116542258 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154492981 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109073073 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083315832 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169578699 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179370441 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156339176 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165195525 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137463505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14872585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212017734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07129481 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143610687 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178403296 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152847018 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154721023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112783482 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099371118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199779913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133810508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244999055 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142853172 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152308489 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181958367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129450663 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105776405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105984522 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192576594 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133108016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181233812 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127012309 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114154122 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13649468 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082028907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130783 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155287067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147921402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188231583 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143895114 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160100495 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078365591 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144865238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173610234 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149960953 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065523065 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148934092 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219962073 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120777021 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150913511 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184701548 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104948491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153133865 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209064479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200081572 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109846768 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13653325 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147723419 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157133573 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146805136 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168923266 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138895587 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163494093 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137307035 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085633223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114155585 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124810937 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133406166 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0962048 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138079925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144510623 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120447779 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159366522 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138157227 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138779205 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146083911 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124928281 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091602785 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124372424 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233883279 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150049625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232494388 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102652707 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203396501 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224714343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075989692 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105391438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081586012 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193412039 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084397852 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161431158 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124801291 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132065394 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155512466 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172316947 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121898077 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068630419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137733773 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162915711 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138637326 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124769426 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133659319 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221030252 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104515251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106073231 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153153654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105613284 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128829651 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231662697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087365717 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099453401 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101485135 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081898705 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157740027 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214270391 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108841702 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.12968279 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145243924 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1478307 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157868182 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127758705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126555669 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142252266 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17905374 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181762084 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090845832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139885425 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157836342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213430891 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133056578 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121220303 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20399314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211628754 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22020344 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091085089 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142871702 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142335948 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137080614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197943293 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084420793 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224241776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107911368 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167721279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131952225 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118875733 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158696901 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124906287 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090383282 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205678186 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14849349 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099884905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106159099 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146559059 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150612967 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134586323 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076165011 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193199969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072844102 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192887199 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202742168 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107531546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132790496 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09699707 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109331688 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136029294 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130834231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088419478 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143428151 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229499373 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091131018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207297839 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170434627 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141109245 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193407214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127283863 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663643594 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079583935 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211599284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147862094 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236047783 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124829351 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147146655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11181438 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151699706 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200264544 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132538778 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205362658 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162078447 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150168459 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079449862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130030817 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137564951 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116838358 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134093531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142879312 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144452672 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127393415 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149440308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155303107 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107868282 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096174238 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215285638 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144750551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172466696 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168773718 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112013847 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1469923 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194247759 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081579111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150204683 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214589571 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135383202 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124655424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082033877 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133203228 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231329323 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073784428 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220878895 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151396267 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137950675 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140961171 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145288563 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185616117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108571531 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179457323 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096896197 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139745334 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143777986 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111811736 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103529498 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106938013 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13954036 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1264844 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12910932 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122911946 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206649882 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071748253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12299438 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130524114 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174229616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237019909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116175999 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083701346 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146065662 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139906143 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143860066 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152706668 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106804769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108577612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083425973 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13699008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112588398 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141371357 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132765182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138592711 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224976883 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08513296 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251595491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122149842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132662385 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07074767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105487737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096650215 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124418881 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135658353 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127028892 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204607767 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12393234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116105778 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118848704 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074064775 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083687817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183413806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139008199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149902758 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099069595 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088966956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136898963 seconds)
  done (took 71.074873007 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132489399 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103386158 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116906997 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173032496 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145680884 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237282316 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18020733 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22223658 seconds)
  done (took 2.405283337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069450445 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116412326 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101973503 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116874155 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089180136 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068553661 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29305717 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109181615 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066744117 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114673365 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118367026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091186408 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468902944 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066740623 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093344233 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084353649 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067090339 seconds)
  done (took 3.220160693 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427076579 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630080854 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.44960408 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074495151 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.864753092 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105559941 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.378888587 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162739386 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090360504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430576691 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733364288 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149984199 seconds)
  done (took 17.592743362 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074270834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069425307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110255447 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083425803 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098247344 seconds)
  done (took 1.530578916 seconds)
done (took 114.280450961 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07978821 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342233083 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05305941 seconds)
  done (took 1.524306798 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0837339 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084343072 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110409802 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082782291 seconds)
  done (took 1.464041361 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074378639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076128475 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110424401 seconds)
  done (took 1.360918308 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278477003 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164898802 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088034681 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082642298 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07728268 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103566327 seconds)
  done (took 1.367592575 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072285479 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074633602 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098525796 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076904695 seconds)
  done (took 1.420994327 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076619651 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052272553 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055222107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081232179 seconds)
  done (took 1.369711501 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089342474 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105036214 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079808042 seconds)
  done (took 1.373655562 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107354875 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112689736 seconds)
  done (took 1.323794128 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081213152 seconds)
  done (took 1.17992983 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094714261 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139455452 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154832666 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136909455 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166254106 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136086572 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113347353 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088191405 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103623419 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115099931 seconds)
  done (took 2.351889818 seconds)
done (took 16.440734236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077529642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388204995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360598031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116684923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669456251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356111577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039886412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118784191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120342262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094355909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083496842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676225009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.965932982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350958109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953253528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410011268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677418506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068025095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092597996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067865498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.998817856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093999364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067754144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068443094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676287943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371225351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094186339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.410480874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068404167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095779478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35450867 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093978572 seconds)
  done (took 16.175399726 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07028716 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143449563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073399495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083354297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096955631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069555051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097656754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06915888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152716745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067718629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111218537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067696293 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097921905 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068782314 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086485424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094153976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068943631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068592081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094186643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067922973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112551647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06771898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068559494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094073882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067608575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106268536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069074318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068235215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093817739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070560409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09752787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068357092 seconds)
  done (took 3.839679194 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114360202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152233417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074145582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128801967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111851584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096094533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169567436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092861112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153862704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067445749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11049417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067682829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127864284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068858752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11368953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067952694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069086952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094476886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068022727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094454464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086959696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093285562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068086087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06890484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094103962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080846221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094149697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069575409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068084051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096674528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071020622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094498857 seconds)
  done (took 4.142521006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072011385 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074928217 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1084223 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082973005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095660748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071969337 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072275619 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096201225 seconds)
  done (took 1.78362751 seconds)
done (took 27.039194906 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077662358 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069650632 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098856495 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080398962 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098844795 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079248352 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067512646 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100710896 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076076021 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072418795 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101674633 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067785046 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097444344 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067545713 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074153789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093833757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078991404 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098240381 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078972026 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079320566 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096200164 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076514984 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100413491 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079639206 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105491597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079076626 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082143607 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099607104 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069511967 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096676339 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07652231 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083095112 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095546935 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079643396 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095094916 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068099024 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067927821 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0937679 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079387377 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100086883 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070755669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100072613 seconds)
  done (took 4.659413177 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08853876 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090696044 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111207162 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065046193 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097330028 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065407548 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11542054 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063138323 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058841036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114703777 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055528604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058970928 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08912355 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054174173 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058647135 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056275721 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08817222 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055836502 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05910837 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086129191 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057749067 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053551859 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086822425 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062509877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056285083 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087765682 seconds)
  done (took 3.05213717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075349939 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083122503 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114142787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127871778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131838484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077097586 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104329759 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087253068 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112452454 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067393316 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071483769 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122366614 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087693689 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101178599 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067988497 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113785027 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081915731 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068873258 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100908296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090525834 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111667813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078131172 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119253509 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080889532 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067328914 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09731183 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071832579 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107628941 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072368247 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076918822 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099171572 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070720435 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096838723 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079159591 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071776524 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096739777 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089843313 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104711742 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078132171 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06848065 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097798875 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06831452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114984082 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111780642 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094770729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075111629 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07489894 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103600189 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067407648 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112637701 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076280108 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06716385 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097318457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066486475 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094619006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081115338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069749793 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096885714 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076299153 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097254057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079664572 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071110976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109962612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067043652 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101225634 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066975145 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068485432 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093461788 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090834983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069009529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135909554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068775683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096003498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076570735 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102082428 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073714639 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067462214 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109634555 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077479801 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097153087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076839443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071450249 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097158776 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087568598 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09638931 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069383367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068600221 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100480379 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070662825 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096351991 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080658873 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068064681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097247009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084396097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09371035 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070009957 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07362553 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100272713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067823673 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106576172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073209207 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068785249 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103167273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06784947 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097744079 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076967411 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071899574 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093340057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072509189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100172367 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068205437 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069491861 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097038154 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069371346 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103741382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074302205 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072453554 seconds)
  done (took 11.271707774 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19032453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184390097 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070567844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17737974 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076367392 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107337836 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178460557 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105062524 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096263645 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06890828 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069166798 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.12943455 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124321366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105152919 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106315762 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067674431 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113195057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104674418 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180544079 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174617865 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114462324 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07608043 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070031331 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096907444 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070208881 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104692481 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084658603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102572575 seconds)
  done (took 4.284641905 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081315365 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128248731 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073460295 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088752528 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.117719915 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068539275 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101185585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069743643 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107843529 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079635669 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094799737 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072881309 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074071086 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105076201 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068048413 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105038843 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076988172 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069661993 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098547052 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072732521 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103843281 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080305025 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071221283 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094433105 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073634292 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09400537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065258725 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11245047 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067880252 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116961431 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066065578 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073341713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109279949 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068847048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095588297 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072335052 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070891608 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098127876 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069069606 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065992399 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094191268 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057773685 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066845379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107478969 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074382756 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08677262 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073722303 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07295314 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09974852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065297087 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097704796 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071142953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070732815 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104470776 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073060419 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072930075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100198716 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065777151 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102609783 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071273322 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064188392 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09401155 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073384886 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066254488 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103434702 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072047866 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094262227 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071536095 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073114778 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101334327 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071521926 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07083208 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09293209 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069903194 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099589419 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072560491 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071618139 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093820297 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067679152 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068218277 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082780956 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0678973 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053794802 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097857852 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066171962 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066560491 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098063099 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073339889 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109062096 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069871333 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101130047 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068741657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066302392 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099114965 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063245967 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070450526 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110432406 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110582568 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06818059 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065384205 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109444413 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072113026 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066635685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083484262 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074742427 seconds)
  done (took 9.795478259 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095416797 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092100811 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097018768 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082121458 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123127662 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09251935 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103259579 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07381543 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069449421 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111507764 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068368828 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103654138 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067931417 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076255338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123929556 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075339808 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097211966 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076573101 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0720606 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134663093 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083253665 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109964946 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080602441 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096120358 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073093562 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08019701 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12351074 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079612812 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105928539 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084620569 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079318547 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122859404 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085687163 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099416558 seconds)
  done (took 4.286195858 seconds)
done (took 38.458581249 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194980007 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.41345428 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188384136 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074954269 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.19651071 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205056863 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199847019 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193154611 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.254435127 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.187235554 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455630411 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.795300545 seconds)
done (took 58.494044589 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.188691607 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326879972 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459341042 seconds)
  done (took 3.917617181 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.532695616 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.063784766 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445427956 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186726227 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20789999 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490810553 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.776786578 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.002287828 seconds)
  done (took 27.304575395 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.190817441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.549267574 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.609177527 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.600019719 seconds)
  done (took 18.083149115 seconds)
done (took 59.161690068 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195558645 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.227112618 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.196486538 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.191986995 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294157145 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.206737958 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.461260461 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.426275485 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.189592512 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.176100677 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.199239976 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.195366051 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191757248 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488287487 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201657269 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188462761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.211069952 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679844287 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.56596667 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214715172 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212165257 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.265697855 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191157014 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192549047 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.220757595 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198585476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189476682 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.188404175 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.376330633 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189517612 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.28143867 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.640719371 seconds)
  done (took 190.982129977 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.189598922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.158952467 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.235130546 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229931251 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.622447255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392288995 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.317198978 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.687478098 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.206121381 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217238514 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.483321304 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.189980335 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.535183816 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.154197951 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199786964 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296372558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.43590444 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516148608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.205829493 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.427444099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212670775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.515210464 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.454055515 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.415084149 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234844278 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.195103977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.20301436 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220343072 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382908519 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.370385399 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207681471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229566273 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.76326498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048911608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215148422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.194320595 seconds)
  done (took 149.696208102 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.452101455 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191384178 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191772433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192198597 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220560156 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191086309 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.721407787 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705604688 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69148892 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.513781433 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194465066 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249739375 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.39799171 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192467165 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283185298 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2043387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193332572 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206277526 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217330472 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196586497 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193014912 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71554512 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206580262 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.266748447 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199337245 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192428057 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223210854 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588158964 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19265933 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192972895 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221691662 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509073782 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236698898 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192441449 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.4929269 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.171268995 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30063143 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194405543 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222017257 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194931418 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.460888046 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193124192 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194004321 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196690808 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192605867 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77510219 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194179719 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719745576 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195661808 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096118071 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198989741 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193637163 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.47503214 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.684440453 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195666566 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19374692 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195927107 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193866609 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195973838 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223902177 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.452084929 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292865967 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195315541 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197803282 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224137819 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194291236 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.247553449 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194983126 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.424584683 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251639044 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311036124 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716131102 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197372379 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287811841 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312950204 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194422738 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195248068 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195971084 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194778538 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300577385 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194764923 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.590218347 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201960857 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196325526 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254245017 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289064003 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194758156 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513221194 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197834752 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195671031 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881969887 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28659298 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197453124 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196322233 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195685354 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.586430736 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713141285 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.361254689 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199418145 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.454947125 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201315872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196663965 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.598342815 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70178758 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801374307 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198394316 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302884344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200681369 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198546388 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196624073 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22548371 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198834926 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254404279 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196488267 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592169336 seconds)
  done (took 343.320700167 seconds)
done (took 686.585944869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.856529827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.84370152 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.946452085 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.838223043 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.820919034 seconds)
  done (took 10.446389655 seconds)
done (took 11.587442096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37476371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372508375 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251726929 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.375071308 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224572746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391488531 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.353737658 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216535218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296525863 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269117498 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294894885 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244498233 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223738514 seconds)
  done (took 18.029670869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504483225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.507958439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264035664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504188348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23947085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499572119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390452841 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39968669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388042463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216670038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211784915 seconds)
  done (took 16.268907835 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509680446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502316321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267638997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513296798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243829046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506673163 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391818129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401876287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388147077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216171782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210928281 seconds)
  done (took 16.293514476 seconds)
done (took 51.732689021 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.206830055 seconds)
  done (took 2.34875462 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241679632 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401571345 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220185556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212030293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208148126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210046819 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212041449 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208842004 seconds)
  done (took 11.057527778 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204517832 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206925499 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204704101 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206921372 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206182746 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205385979 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206258397 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204149235 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207104521 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205694715 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207337251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207256658 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205470797 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209652725 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207589739 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204422596 seconds)
  done (took 20.442427065 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206601144 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205078855 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204720261 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205829216 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206516361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206087551 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207545061 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204468164 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204849779 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205124034 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206129729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20483831 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206677473 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205277521 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206627122 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207114572 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206116886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205934955 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21045186 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205529556 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207755369 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207460061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207291629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20715906 seconds)
  done (took 30.097488871 seconds)
done (took 65.088146367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.167977104 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.817787501 seconds)
  done (took 9.130565938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209435234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209000498 seconds)
  done (took 3.567069043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208755521 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209398355 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.208099765 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210210366 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210192805 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210386367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.20989939 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209731559 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209279042 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210532268 seconds)
  done (took 13.241068552 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209742629 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210559112 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20756467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209648392 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209676227 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207899223 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211193438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209468397 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209714147 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208609242 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210018155 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207329381 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.209962022 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206623262 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210891629 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.207791383 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208187838 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207802128 seconds)
  done (took 22.909583106 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211261387 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210163483 seconds)
  done (took 3.567347474 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207858905 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208444373 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208190063 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208865855 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207690318 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208459374 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.208871909 seconds)
  done (took 9.604401465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212159518 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.391643222 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.460743058 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.763771493 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212263444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214950549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.046390231 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214699443 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217173354 seconds)
  done (took 13.881035979 seconds)
done (took 77.047144774 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.186044229 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.20426364 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.03118459 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220280387 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221795934 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.504493631 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.210965234 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328617457 seconds)
done (took 37.05594711 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.215711366 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.902021648 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.943859674 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.205123201 seconds)
  done (took 11.199671694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194267811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.103378339 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202387946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.215930871 seconds)
  done (took 17.865179416 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.808254291 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537932511 seconds)
  done (took 4.495631601 seconds)
done (took 40.925090408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212661744 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208625799 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211462817 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211388653 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.209395032 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213585771 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.209088794 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20980631 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212714261 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213004519 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21347436 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.213257391 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213024345 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21033364 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209553933 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211603156 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213062091 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209992728 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210738099 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210180198 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213272725 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213665177 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210075757 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210721919 seconds)
  done (took 30.223981362 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21308291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211908036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213901124 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213395043 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210664975 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213563893 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214424964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211272531 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214099773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213493407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211179328 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211508382 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214444392 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210907628 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213998269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213181243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215148303 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211522344 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214427314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211907786 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215308858 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212498899 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212301597 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214695315 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212260575 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212678652 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215897475 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213373798 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215468994 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213563957 seconds)
  done (took 37.54674962 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219457361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222529876 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215300129 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215717501 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215434904 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21498063 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21444252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215525752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21615446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216063459 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214991342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215267837 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216150809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215362263 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215099231 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21567846 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216301191 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217658634 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215983872 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216763992 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216598651 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216343584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216209217 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216101486 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21575706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218362313 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215422301 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216479321 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215876388 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215405375 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216283014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216160547 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216272609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216682414 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217173174 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215774655 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221309499 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224100725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217864689 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217271407 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217103468 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215790683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217808934 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217385441 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216834942 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216737248 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217606559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216054791 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217103027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216236152 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217356288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217281526 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217399351 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217502241 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217757597 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217845483 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218973169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.21829314 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217669316 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216547655 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218385427 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217764421 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217890968 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218225013 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220143665 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219091546 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218330611 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218418267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218675626 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219031278 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219245744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219664116 seconds)
  done (took 88.790364296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218441738 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216608337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216338448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216552741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216268747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218944138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216563019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219294715 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217322759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219632501 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219809278 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217572437 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216999417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21938198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219576007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21734335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219152557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217452969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21962203 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220320686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21918153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217167273 seconds)
  done (took 27.954404194 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220406735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219438086 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216929251 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220357754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216975231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220001294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219960194 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220179486 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220357005 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217827311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216841539 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220634071 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21798318 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217524329 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217416401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218031955 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220169324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217357834 seconds)
  done (took 23.09414622 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217227773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218234935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220648986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21708293 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21906643 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220867153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218636731 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221878097 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221374964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.21920244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220866094 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221313646 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221270204 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218291324 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221401663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218618305 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221804648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218132147 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221954628 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218827958 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219400378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221974509 seconds)
  done (took 27.993822198 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221185596 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221749293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218826264 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219900717 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219246765 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222794205 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221972328 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220281556 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222277861 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223198052 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218892436 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221721136 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220952735 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22036521 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220254431 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220137065 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222855791 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221456022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222974116 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220058622 seconds)
  done (took 25.579381341 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223669596 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224464166 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225157406 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224171935 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225243077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22481557 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22385997 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225359216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224318742 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224897095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225132256 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226793022 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225066488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22590642 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224617261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224323016 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224524068 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2249938 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224688673 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225103498 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225865542 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224951639 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225391105 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225254667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225608658 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225020623 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224925106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224957542 seconds)
  done (took 35.458637224 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224853474 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225357809 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222073146 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22185376 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221244018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221424399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221751153 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222637075 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224022293 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222530535 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223878989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225045481 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224837719 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224410921 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224772879 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224620796 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225059286 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222716113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222199577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222595977 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225215496 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22481314 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225075838 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222481822 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222271056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226234405 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223151946 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222006801 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225574845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222773065 seconds)
  done (took 37.867579135 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244423341 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244176252 seconds)
  done (took 3.649424346 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223545935 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226350306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225649979 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223666542 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224112188 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226005743 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22680917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224298552 seconds)
  done (took 10.962006641 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.22681666 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.22701333 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226853758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225655381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227311787 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228874514 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23697512 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243373343 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230347064 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228398643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233876643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235340924 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232347619 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227738929 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229224834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230778455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228211051 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22873574 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229902445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227034701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229017606 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230340119 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23131788 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224427648 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229254137 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242110703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235280833 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228416154 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22820607 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234826987 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229614342 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225281195 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229224491 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228920282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228271905 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230521215 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240255379 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246009324 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238081944 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230511737 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229990356 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226867683 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.230737186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233066802 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230869583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230259467 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229809693 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226911197 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229039857 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233877225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233618825 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228202724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226223513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23821912 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232421387 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2398608 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246243989 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23154001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238579661 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243725366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245611776 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238267471 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232302978 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231208714 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239947201 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255006013 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239395258 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243246965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227057007 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.22828677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240636393 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245351111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24008448 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233216784 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229746357 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228968739 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231231282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229131453 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239416178 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250092535 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230246397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231528496 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237558017 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249313967 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226933202 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228347306 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229141301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228413486 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230080091 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241244016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24584521 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228225366 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228975592 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229059823 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231851178 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228635119 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227139413 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232680301 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.225863981 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.227678452 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229030022 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231986391 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237411777 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229261058 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228016906 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238078249 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229535727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227911774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240378064 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.229651677 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230339548 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229726375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23790655 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225720515 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232150737 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237336322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.22978579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.231520038 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228818875 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229602618 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239606345 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256471861 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229420574 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229596588 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23481942 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239649106 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230373917 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234216421 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229251968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227462388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.227684766 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231735844 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230262661 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231089193 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230753584 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232356288 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229996945 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230243113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23058975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231499226 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.23392214 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232385961 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232469029 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23479378 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231671837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232817498 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240116758 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232671862 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231950537 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233267147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.22917199 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231555523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234054989 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232095269 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235772197 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231741349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23000704 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231044573 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231219224 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230827473 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231095885 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232759504 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235557429 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.231807555 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.23847238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.230171348 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228867591 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231765664 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230445586 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232131603 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231393855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230396673 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234606775 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23910813 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.231703569 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231899756 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237321536 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232977778 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230758595 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232270253 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234503902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24037834 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.232681912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.241725003 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.233505501 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231551017 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232314692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.233710848 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.232893744 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233406187 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235771784 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239195324 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247142102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241389184 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233288553 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23705504 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234537155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236804072 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.239143974 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232745644 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233157955 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233410511 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232696251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232835311 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236660558 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23348263 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23220742 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.233063064 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.233216594 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.232395769 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23274728 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234368325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235647166 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231177579 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234305901 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233689931 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233366147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.231438056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232248383 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235841204 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232769968 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23292578 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244860352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23129761 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234431465 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234856267 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234330839 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.234963356 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233213777 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236673397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234600218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243067088 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.252235599 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23506934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242862856 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250865828 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234939597 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238166885 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23451646 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231149685 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237472199 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.241149934 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23379662 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236079951 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234562436 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235246178 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23365408 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242882332 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232824531 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234577223 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.234539391 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239421206 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232040445 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23656796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236008147 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236766989 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23796584 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235289078 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.234978147 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23879516 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235771689 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235249346 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235155918 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238593319 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.242094615 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242792823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.237122324 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.240040769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.23739004 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.239019055 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238311817 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235543011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235160758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250827111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.24421655 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246190463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.239201185 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235973765 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244390045 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.237244248 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.240384816 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236791685 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237982804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23660069 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235784004 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.233040595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238640784 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236746368 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239220196 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.238494994 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240684268 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237350453 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.236203664 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23704766 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236417124 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23798221 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237278632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23739716 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241646792 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240721201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236837391 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23767116 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246316018 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254382158 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.240289048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237718397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.238074859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236956104 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.239261191 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237674802 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24000635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.244794386 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239929719 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.248144978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239842095 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249804887 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.238549342 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.241052778 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245599591 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234703834 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.237664718 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.239155266 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.237687559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247758527 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.256353082 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240025649 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241997222 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238208967 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.238825259 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.239366727 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.239072594 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238298878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23893056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250829351 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.256821781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.24421558 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242608476 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.23660508 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.239136721 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238300648 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23843519 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246408811 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239685021 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240665891 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240116806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.241545961 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239725834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.239842052 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23840495 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.236308421 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.239072083 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249756634 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257316883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243706462 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.239134885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253071371 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24103536 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249820963 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25698013 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241835647 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.240787746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238800426 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.243432954 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.240063913 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.242928042 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240251575 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.24172767 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244048271 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240341141 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244888702 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241089074 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241248523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24073739 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251391936 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263409344 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242080368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244358531 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.238753283 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242748744 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.245789612 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241365337 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24048794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243899575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251477216 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248493858 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242411929 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.241956514 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242667642 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242349664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.241558586 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.242146097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241558111 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.242190103 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.244295158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.241480658 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249605303 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242294 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242421643 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244803275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243997655 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255008148 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.243044652 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244203875 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242661947 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242787016 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244746398 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243305253 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244336887 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245038618 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243011192 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243873879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248812549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249919238 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247077305 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243083704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.243650798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.245793366 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245448296 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242999656 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.243329496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243579475 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.245153126 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.244024469 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246998582 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24288873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.244439356 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245792188 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245159468 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247724725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.25000288 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245411963 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240602202 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243230793 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243428141 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243744107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245642078 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256398763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248218486 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255314119 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.253178712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.249030734 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246442739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247042596 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25286758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244289966 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245511819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.245175851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.248064034 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246093944 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24921571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246008477 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255338394 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246157813 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245522175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257258868 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26389797 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245237483 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246702588 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25102789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244950293 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.242430134 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.246582835 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.244236924 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255504171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265824242 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244927323 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2489153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245348586 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250820503 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249138617 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246501939 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247590329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.243499068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246931759 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246261206 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244573354 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243721999 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246406154 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246761558 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.249843374 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.254271586 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244602411 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249610373 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2477773 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248122094 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246774071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247053571 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.245108754 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244580304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247882444 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246846305 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247872429 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.251435679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.248460468 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.248179017 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248949485 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24725252 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250627707 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258230475 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.253641457 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.244903217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247930533 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.248868793 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251431605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248154362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.248246212 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247924563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.251082986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24754163 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247525331 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.247025806 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252100245 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267187856 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264549898 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249671578 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250037406 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254973629 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248934722 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245517572 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248087474 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252199557 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251842832 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.256132833 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249014599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257339024 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266117055 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250285689 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.25359918 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.251966841 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25835785 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.25334565 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248630528 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.249270235 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.255255613 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.266402757 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249611389 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26047011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281537586 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266764567 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.251903708 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249378515 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249137842 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.24992841 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253066463 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250016866 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.249959066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249822394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249386456 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251549534 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257577808 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252975309 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.250373175 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.251053245 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251168625 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.253342642 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248151639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250803443 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250094964 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249949857 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.250753553 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.24989246 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.252232194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267134854 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262611769 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.250395579 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.251936236 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.248263616 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.256193843 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25440406 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261427389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.258471347 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252746703 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251936273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.253792482 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251201468 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.250292519 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.252955585 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.252996246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252237704 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24935664 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.267092675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260754863 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259687238 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253600282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251840683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.251234954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254848172 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252385459 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251382784 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.256003599 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254298652 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25594803 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.252375694 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251395367 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255572661 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258987108 seconds)
  done (took 740.841173241 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251035482 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249423027 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250075077 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249730468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249665094 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249764159 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249776784 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250733025 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250910212 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250038488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249875736 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250325273 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250282266 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250418835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251037125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250035376 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251513774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250214215 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250800223 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25107265 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250486798 seconds)
  done (took 27.445129806 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.253810632 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251661791 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25063678 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253011462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251537453 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25381 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.249896123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253458964 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253963321 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251634916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253694567 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253500298 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25111481 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252161517 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251038765 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253898207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255560836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251284474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254215816 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251863454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254198751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.251260942 seconds)
  done (took 28.746236905 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.255691813 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254896258 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.258867557 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.250920094 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.254722571 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252456525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255315263 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254675574 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.253883204 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.257546198 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254759909 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.257816993 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.26289368 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.25986751 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.258977016 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.255186249 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400569712 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.256314492 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256362738 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256457798 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.252098051 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264160881 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.254243071 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.25325637 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254610885 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256411414 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255816872 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255685656 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256425624 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.25729457 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259668186 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256502936 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.255678877 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.259525159 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.256415956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.257706957 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259276491 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257083427 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253303931 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.256382402 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267117913 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.276315239 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.258039669 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264675698 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.256769676 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.255802016 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259381633 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264210491 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.254323238 seconds)
  done (took 62.947209776 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257207997 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257661112 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255554153 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256486245 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257235153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256537131 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.256314934 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257536247 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255257925 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25530373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.258244494 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.255177919 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254775136 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.2585465 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.257518927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254997665 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254919281 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255179739 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255636885 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255609388 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.255428413 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.258975268 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.258570845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.256369375 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.257957294 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255741333 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255450208 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.258079804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.25589553 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.255753095 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259253348 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259090999 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259179985 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.257094987 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256635356 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.258324169 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.259673029 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256167185 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258904838 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257632898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259656482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259369906 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.259169377 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.258316541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.256516714 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257380232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257508698 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.256942667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257480338 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.25948313 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.259871094 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.257360231 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260031945 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.257459568 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.259603165 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.260247524 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.257397874 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.256844718 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.259540863 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257645243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.257847962 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259650693 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.257983028 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261220389 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260320072 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258332936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.25714956 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260027286 seconds)
  done (took 86.711137719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260206895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260353341 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261690598 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260217197 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261901356 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.261589676 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261263654 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261107431 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261096693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260895361 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261340328 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261420983 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.261034285 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260030537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2624294 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262114983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261986312 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262595535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261359776 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260941278 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26071183 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261507517 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260976114 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260785676 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261711583 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261768162 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26229215 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261828946 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261982672 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262685811 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262754523 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262095241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261436544 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262772334 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.262736073 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263108362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263131702 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26216899 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263022713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262564805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262656429 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263601427 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262543757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262661127 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262039105 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262951206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263839155 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.263454251 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263640095 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263636256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.263504426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264003918 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263849346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264180574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264314923 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.264405456 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263284986 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263999524 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265034249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.264549749 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263022453 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.264377298 seconds)
  done (took 79.464541157 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263735623 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26394568 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262106805 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262657643 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264612855 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26115268 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264176212 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.263719322 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265703452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.264356986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263397052 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261719236 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26125899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264548531 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262533971 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261822359 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261344156 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26214191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264413655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26184033 seconds)
  done (took 26.460013294 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.262183642 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264718856 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.262939734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262651905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264804269 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262614316 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.265659498 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264616642 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263769944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265648252 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264618247 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.264921596 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263540589 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263648236 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265459209 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263143957 seconds)
  done (took 21.424138901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262662397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.265364567 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.266008325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26478188 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.262078229 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262739069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.265149695 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264058446 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.264231412 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.265886334 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.265834673 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265786509 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268281287 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.267375889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.263229292 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266013449 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.263819663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264085095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.265992052 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.266528041 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.265177883 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263540547 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267057803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267605467 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26408381 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.264679454 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264776519 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.264976213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265252935 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.266333109 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264573272 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.263623915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.264452525 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264203752 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.268186771 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264727615 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267130945 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.267674441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.267772327 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267335891 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268098678 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.265118444 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.268829272 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267596429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.265261542 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267045229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.264936697 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.265628117 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.264922147 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.265374791 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.267419814 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.26849585 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268090109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268321969 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268105267 seconds)
  done (took 70.818156016 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267905911 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268444631 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266128415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268805322 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26781035 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265567806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268287211 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266168472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265707113 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267971472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267226338 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268558954 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266860584 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268875099 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26624777 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26894694 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266097994 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265975843 seconds)
  done (took 24.014019314 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266929612 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267311631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268987489 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266821998 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266497291 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268767499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26676628 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.26923673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271031934 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266914965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266293339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.269914947 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268817112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269387428 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267980947 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267244247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.270361683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269560558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.267579964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267205462 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269944086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270447371 seconds)
  done (took 29.106997854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.268990939 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.269761117 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.288098265 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.313420311 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.300847097 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.269365662 seconds)
  done (took 8.913855711 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267646 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270938684 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268771982 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271659164 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271440009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268200574 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267432039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268415047 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271144463 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269437786 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268429907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272129029 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27023374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267914746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271832707 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271237114 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269418166 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269939267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269429391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272207383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268869567 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271168715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269206122 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268285572 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269984933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269009712 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271911941 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269240283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270478352 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272028138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272701222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267984959 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271736791 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270214474 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275166311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271046318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269281026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272751189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272698033 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270627384 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272355038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273272004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272171063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269974272 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271776873 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269297296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269123696 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270854828 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270248891 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272625493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272574576 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270478655 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272406641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273950193 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273289275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272990471 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269943248 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270476826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272867198 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270986394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270869939 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274295886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271998422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270976627 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273368784 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270981662 seconds)
  done (took 85.083140447 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271932221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270699062 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271043418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272764436 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270771389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27063633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271555191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271220031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270967167 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271826859 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274683062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271529895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272299574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271521835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271822638 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271482992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27176689 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271720118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27199943 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275210936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271799836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272727502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27253243 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272067055 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273286204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274841114 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274644788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271114598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27298421 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272367014 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27283 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271849309 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272487919 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272073042 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27289669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273054111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272284681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272540686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273695519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275198487 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272340079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27640566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272631067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272206302 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273489453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272983231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273282961 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273490623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272684474 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273295519 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272760703 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274578266 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273159264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273340438 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273941128 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273323059 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272055735 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273669964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272592403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276733499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273303255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273615829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276906688 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27306308 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274233371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275403341 seconds)
  done (took 85.219410262 seconds)
done (took 1727.46451329 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.337713015 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.305659642 seconds)
  done (took 13.853299471 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444443495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395897225 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.280487536 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310498032 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.278716292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.30319245 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.273826947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.278349815 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279692447 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28090054 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279005899 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.465146151 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.278802809 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.278906396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280052304 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373628969 seconds)
  done (took 42.295988055 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.308430389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286900616 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391236797 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30179732 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.308460546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.459062472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338507657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.287119683 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.447496181 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.324070255 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.750307276 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305455813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.281861452 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.323495915 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.297413352 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.457994668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.51886756 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.752600255 seconds)
  done (took 29.35452043 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.705627105 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.293178316 seconds)
  done (took 9.21241286 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.276078262 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.278660502 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.301294211 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313277875 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.313826725 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.312613166 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.313065902 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.303804553 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.311018163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.296710356 seconds)
  done (took 64.231316283 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.297748478 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281839254 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282292138 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278797371 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28144466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.27055335 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.276446813 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.273475791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.613416764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.397515253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294139806 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28583826 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27754615 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279960666 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.278323543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.316552863 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.42394548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.273436621 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.275947231 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28706594 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.277007973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389046556 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.313857831 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279152091 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.39401459 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.59661275 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.281938594 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.282125986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.397445769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.274290548 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.277127453 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.27811664 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277079372 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.84635244 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.776354153 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.286165589 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311612907 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.286919652 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274702304 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.422635033 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280190994 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.285555974 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.271221776 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.768139866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430454338 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.384976937 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.429318968 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281878304 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.279224434 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338015289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.279547296 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.280451292 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307558927 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.023146297 seconds)
  done (took 107.624050019 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.285757417 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.76117981 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440358384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297909074 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894857367 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949019494 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.274750921 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536670182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296719508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274236024 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544942677 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750510391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.270800863 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.29023497 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.958831666 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.269305176 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271974766 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.032505697 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270488848 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.278035771 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68102614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286978941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269736906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.529457406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.309878521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.702490334 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.577412996 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.711500076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.277516333 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.273331223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699899545 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.271526587 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.330540259 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267095787 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525988295 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594137739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.570722178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.272497596 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27331583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267586856 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.287749438 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.698104899 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584663037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.269171369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.27690793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700199725 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.269555778 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.277829777 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.274451801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465044624 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.199256831 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.270811071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.564305019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.270075545 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.5233394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354730756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353529086 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.724686592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267106064 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.308527217 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.268958519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.267583179 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.270907525 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270154156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.274078059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579746637 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.623288998 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271883605 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.59125938 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693907854 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.273182755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754603331 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.194086434 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.28329292 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.315199674 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273899088 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.821924813 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728104489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.271947138 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2717701 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.569603491 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271302514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.530897238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277978557 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269143125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674793879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.285351114 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.282852575 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.267345144 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.265812449 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.898192289 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269608471 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.512482958 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.310419519 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.266785684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.26498782 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.290690909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.275040608 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.264888067 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.27284894 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.748249517 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.277164862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.378520116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.285514341 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269671612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.279371711 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.271757851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.270474889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48745858 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.769348442 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275606407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273277043 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.270759893 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.281267288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.498008979 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.274750442 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538505556 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271980801 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274761851 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.275000719 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960257076 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314804852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270849152 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.271091174 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11079433 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.479664754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.289111077 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.269306473 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274553521 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277337807 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.456207561 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267946466 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.277849069 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269743276 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936416064 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305123051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.313120087 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.857489348 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279941638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.115724699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.286657204 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274567436 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56607275 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526604076 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.540503942 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269758855 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.281502808 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918505466 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.271528757 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409856062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283151407 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.250289718 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460552849 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.561259633 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.268910227 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.821098264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.264954518 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470438284 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265557148 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583303365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711305014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.263471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.265231925 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927750584 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909038928 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.071085077 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.263964055 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.526392407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.279249607 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.720688742 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.265220535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.266062257 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.696477411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.265502044 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.268832305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.266322852 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.265305496 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.403847801 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437617476 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.448403418 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.274637303 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686337299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271259205 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264319498 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270086418 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266510142 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.617425216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359713402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.268739991 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.313270524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274947074 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.277813786 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701435339 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.230058623 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.271107427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.424394347 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857283283 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.269580353 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.271272476 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.933283563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.43402797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776302827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.324312832 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.537552539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.277905074 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.307117591 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.81021977 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273566328 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704158703 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271574388 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.272119068 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82498434 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.287273994 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409473587 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.268094803 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267697259 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.753809514 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265656773 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.274089389 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.452528392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267788934 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510142549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.269636891 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304395646 seconds)
  done (took 1094.638904843 seconds)
done (took 1362.421111408 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.268904547 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.27068471 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.25793868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.269547136 seconds)
  done (took 26.273454409 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.280210081 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.27754094 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.276819106 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.275331826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.276834954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.275976082 seconds)
  done (took 8.867159077 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.434882769 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.27045787 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.273954234 seconds)
  done (took 19.185066005 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464728837 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466814298 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.596425999 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.197303399 seconds)
  done (took 9.934885575 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.279668424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.280378081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.276851448 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.276826147 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.279971635 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.282934358 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.279691246 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.27972946 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.282645078 seconds)
  done (took 12.727057817 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.762136185 seconds)
done (took 82.953901872 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.415550949 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.38202808 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.498353463 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.085482733 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.282594724 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.932527767 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.530753897 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852469508 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.312255573 seconds)
    (10/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.37944476 seconds)
    (11/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.827763986 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.724520473 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.298411911 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.257702779 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.382009929 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.35862745 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.273231233 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.289383522 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.794683402 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.302338349 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.578584471 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831638337 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.395123809 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.414638747 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.298730142 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.429504093 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.81559177 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.597622026 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.827988705 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.863749988 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.277543126 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.261990693 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.372945907 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.275035637 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.968442593 seconds)
    (36/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.4206433 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.039391529 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.377636888 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.332663103 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.474369956 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.611597323 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.778955613 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.259733648 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.296366961 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.088824763 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.361348648 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.515726472 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.679412119 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.413708572 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.492171277 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.388969918 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553970899 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.669548233 seconds)
    (54/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.962656586 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.276775721 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.304978126 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.594883187 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.27762245 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.33206783 seconds)
    (60/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357843722 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.561134754 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.693182058 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.29917937 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.28172787 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.334656808 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.300834065 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.298465321 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.394089465 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.277449912 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.635991824 seconds)
    (71/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.615719157 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.643833057 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.396840215 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.661411047 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.352770614 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.918651285 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.610627756 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.913319422 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.278943335 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.055560695 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.777965429 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.291306225 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.406960561 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.107953174 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.271029161 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.94745723 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.279108548 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.388942693 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.386104053 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.798900701 seconds)
    (91/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.691612148 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.076821058 seconds)
    (93/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.408985714 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.345536254 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.537956752 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.614563005 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.071798858 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.973130059 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.304940181 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.290047287 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.29592037 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.332611411 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.309276342 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.366872936 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.479877102 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.283410107 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.508757556 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322858054 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.28378575 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.96932931 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024073813 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.278827048 seconds)
    (113/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.266484901 seconds)
    (114/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.316953322 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.295057293 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.283803949 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.297125961 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.301416411 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.285588598 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.483431964 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.784761692 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.789800085 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.308150173 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.311167629 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.381525319 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563584457 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.71874843 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.297877787 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.969844896 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.545010595 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.31131161 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.300328281 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.95275463 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.343413129 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.433194989 seconds)
    (136/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.367955884 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.70624698 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.280043995 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.282295501 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.398395833 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.959244618 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.04482671 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.387409173 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.872050373 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.366639903 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.270254163 seconds)
    (147/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.446143421 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.999222648 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.350017627 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.899336694 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.054683417 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.414757829 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965623494 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311255309 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.132817665 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.549205195 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.272316602 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.390139226 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.304393201 seconds)
    (160/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.815895588 seconds)
    (161/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.310601745 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.331220984 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308433924 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.823672407 seconds)
    (165/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287456144 seconds)
    (166/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461899898 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.685803797 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.967546785 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.488167373 seconds)
    (170/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.250431657 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.511218519 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.493023483 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.254441032 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.725964851 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.509368382 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.400392365 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.294406475 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.79730458 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.383278172 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.45677988 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.268316532 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.392680216 seconds)
    (183/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.988047864 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.543482349 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.427419955 seconds)
    (186/309) benchmarking ("sort", Float32, false)...
    done (took 5.261264268 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311558223 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.314956462 seconds)
    (189/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.392327724 seconds)
    (190/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.57363216 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.751455245 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.326021755 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.27890236 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.602158118 seconds)
    (195/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.723549821 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.29502302 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.986973661 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.102080846 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.087231763 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.120488629 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.60127251 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.689539017 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.360473336 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.464906623 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.486441794 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.556231796 seconds)
    (207/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.285572336 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.316320552 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.28911138 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.405358964 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.83992386 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.520629603 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.297651505 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.317964852 seconds)
    (215/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331970202 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.68710674 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.643335868 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326060573 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.31435886 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 6.290746731 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.290397588 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.295533769 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.349586168 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.393420023 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.327786684 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.313878062 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.292036847 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.403076254 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.791844843 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.2868438 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.309188837 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.529286231 seconds)
    (233/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.550768328 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.425549046 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.31322447 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.309925639 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.627981682 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.531391271 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.554142198 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.290278448 seconds)
    (241/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.832609657 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.2925063 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.277462239 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.517811718 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297137844 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.821272438 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.287483534 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.481762233 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.387560706 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.115779217 seconds)
    (251/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.298758153 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.812201327 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.275260154 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.301492677 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.468171107 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.447664102 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.577319086 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.317738214 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.628002254 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.366898616 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.440074483 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.350313901 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.670674004 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.363979534 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.292848225 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.29748165 seconds)
    (267/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.304727545 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.061422804 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.291792282 seconds)
    (270/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.472948575 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.317411512 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.292599187 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.420178911 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.288314448 seconds)
    (275/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.602845847 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.488348336 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060565204 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.370966051 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.892425341 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.374782999 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 4.305490852 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.3197808 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.861173476 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.404102156 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.395967291 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.374993408 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.27800638 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.472784763 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.148494373 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.992438532 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.629453898 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.496939174 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 5.534763366 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.885032527 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.552573972 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.335822338 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.686343997 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.352825274 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.378758864 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.810585956 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.726959658 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.641514445 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.315704811 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.641165714 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.317757666 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.751582646 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.84624316 seconds)
    (308/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.643607912 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.289689705 seconds)
  done (took 894.368596815 seconds)
done (took 895.576630028 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.322516864 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314636794 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.299994024 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.321019445 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.412198477 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.328443785 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.311207454 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.302314963 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.34816197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.350254751 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.298573694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.327409172 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.300770172 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.300209835 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.300917298 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314380766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195881565 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.300272453 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.31699688 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.310572454 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.317080267 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.299227646 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350839863 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.329218003 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.304850161 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.304996938 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.303688143 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.320576033 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.412254778 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.303446049 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304004707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.312360139 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.194200263 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299415747 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.297155712 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.31958233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.311356871 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.31180268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.30548168 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.332749385 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.555217458 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301228604 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.303199699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.301931885 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.303315308 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306665673 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303127872 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.307541364 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315026281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316132569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.564372715 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318742483 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.304182025 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303770149 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314463499 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.302577795 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306675495 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317506783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.32182081 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316994499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.202179761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.310199231 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.305772265 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.318484981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.310269972 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.610758832 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.301159137 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.309447544 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.564782908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.3117291 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.609656872 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.312792109 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.304722763 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.316664813 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.334413276 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.213676144 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.301029065 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.302385563 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.309991515 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.301928129 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.314132601 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316811622 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309170223 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.304567276 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317334117 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.33162647 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.314718261 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.303939735 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313596022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.323795562 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.31002277 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.314559701 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.307766306 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300851118 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.314035293 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.308782682 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.306992666 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.307695725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309490083 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.316490893 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.563033881 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322285847 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.302252904 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.302485368 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304628339 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.317771008 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.564051403 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.307268612 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327178754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.354097999 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307522225 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.207970781 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.309787296 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320414425 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.315073152 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309961029 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.301069759 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210095773 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.576174042 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.321566964 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307073892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.304174358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320739783 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.307806612 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303684173 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.218960862 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.310067372 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318834529 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.426746099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317181308 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337300665 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.30431879 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.309126241 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.333709676 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321276417 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.336515639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.309381269 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322316751 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.321312837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.3030655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.316509143 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.317592349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.308252696 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.313756787 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302733822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.334982199 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319072507 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319164826 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.329473416 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.428016406 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305284388 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.211668812 seconds)
done (took 218.516332279 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.366199833 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.303694755 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.393264949 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304171232 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401496658 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.404278862 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303255068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302837563 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.301858259 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.683304357 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302575971 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.304124455 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.299862584 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30279878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.388041118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.305010888 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.302794378 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.64664538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306047628 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.375658208 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.30003943 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302786706 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.305470724 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.689739865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.30334725 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.303436331 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.376663734 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.306007419 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.653451833 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.305669258 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.299776708 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.653123223 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.394614873 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.322870907 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317386807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.31321596 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.404289499 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.319867614 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.387566875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387434698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.392263067 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345078836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.299927526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.303806227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.307733099 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.308334643 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.30413423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.333431158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.307641132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.305122564 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.648434658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.315981623 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.313715588 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.303953831 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.305248061 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.327037077 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.305363827 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308538095 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.396453225 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.308452785 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.369125427 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.691735536 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.685210812 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.306811998 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.306418996 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.304461286 seconds)
  done (took 146.584577143 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374471426 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.382012882 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.413361423 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309557588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.359299971 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418247145 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.308570632 seconds)
  done (took 10.804821361 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.314462753 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.308091584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358399963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358177793 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.308837867 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456416427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308660689 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.320151702 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.305814617 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.361439214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.309996024 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308812238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.315636704 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.301866684 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356602054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.319452643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423320809 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.310051947 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310952202 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466116435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307042068 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.314777387 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362465929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.321654736 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.311303411 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.317008229 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879600012 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309883289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306895899 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.308898663 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307353852 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348554383 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310090722 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.308662811 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306949113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426420537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.31155491 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307554573 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.311344402 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.307953552 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.309301682 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.309828282 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311023223 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.307356658 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.311098526 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334408941 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.310549804 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.309835035 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.310672751 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.311122368 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.360817725 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311305109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306555193 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.308182478 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.367379788 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318321721 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312469296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.307846568 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.311782068 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308867908 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468865687 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360171607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.310778244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359548672 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312116526 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312700652 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.31096427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.311261555 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364945626 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312630872 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360324579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.309381082 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.466006935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335123205 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313536518 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.314882703 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.314654537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312291788 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.306981049 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317837742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31085054 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314087153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318988185 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.309727266 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310439932 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415233812 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421993932 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.31009892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326555481 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.319694924 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310645418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.366551814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.312656838 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.310480923 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3668731 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428230346 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.367126097 seconds)
  done (took 150.985824849 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.31846095 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.322036365 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.315966107 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330271747 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314679166 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313838888 seconds)
  done (took 9.160776191 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.316338496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.312643726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.314548338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.313661238 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.314000232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.314962347 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.313865355 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314517568 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.317624001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.314434345 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31471148 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.315434896 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.315843943 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.31382862 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.315007995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.313468697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.315510179 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311990917 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.314615894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315889647 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.419608064 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.315296851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315503917 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315783397 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.318780798 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316870676 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3229541 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.314452724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.315032218 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322883003 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.317899385 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.315513009 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.317701137 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.320427914 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.318635144 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.318240803 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318830468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.317864061 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313029611 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.316823435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.318085589 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31595894 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.315333053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.317977967 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317837341 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320896294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.320866701 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324264965 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31605349 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.316917562 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318003344 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.31666682 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.316942267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320801429 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.324191839 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322377476 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321960937 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.317834077 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.316435179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.317898212 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317281841 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3167285 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319136048 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.320665849 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315121822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318385752 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.318722159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321227776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317722362 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.317097611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.318817521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314807414 seconds)
  done (took 97.186677074 seconds)
done (took 415.959508088 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.503804323 seconds)
  done (took 7.749908167 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.485066866 seconds)
  done (took 7.734791843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.219948565 seconds)
  done (took 19.478062707 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.386633234 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.392964751 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.304432734 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.304271769 seconds)
  done (took 26.634743221 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.391069517 seconds)
  done (took 7.622745228 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.290396407 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.29055899 seconds)
  done (took 13.814634537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.810698434 seconds)
  done (took 8.040229261 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.51432783 seconds)
  done (took 7.751572787 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.304467315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.303963734 seconds)
  done (took 14.10272087 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.273648598 seconds)
  done (took 7.505608417 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.221436168 seconds)
  done (took 8.45317862 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.292947011 seconds)
  done (took 7.525702807 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.355459433 seconds)
  done (took 7.586908306 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.427653251 seconds)
  done (took 8.658481057 seconds)
done (took 153.909450711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.287918137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.287796888 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.289411965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.287676691 seconds)
  done (took 26.38390204 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.329931809 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.329233005 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.329836275 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340631274 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.333326585 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.329139611 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.32129782 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.322171764 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.340296469 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.332495514 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.331682611 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.331871889 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.328706208 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.321821027 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.331419051 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.33252597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.340077354 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.331716386 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.321748789 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.332953466 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.297068153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.340096918 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.333185824 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.2968666 seconds)
  done (took 33.111276169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.493999106 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.366676122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.450169897 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347784007 seconds)
  done (took 6.890080999 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.347751124 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.349840882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.361440937 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.400031156 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.436067831 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.358272937 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321719557 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.318538284 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.304566948 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.350176164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.431032584 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.366180714 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433758382 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.297747774 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.480372152 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.297121247 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296966158 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.349720052 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.401100669 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.413812347 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297601999 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34914047 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.352714629 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.367642908 seconds)
  done (took 33.915454367 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.296105156 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.304684476 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.303076653 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.296623472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.295953165 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.297994387 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.302471589 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.298251064 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.318441874 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.297858986 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.29543872 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.296591693 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.295723989 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.297382436 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.296586514 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.310141505 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.31141158 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.297733357 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.300504695 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.303809388 seconds)
  done (took 27.249426765 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.290970337 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.146281599 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.643646259 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547205541 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.292077358 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.293735249 seconds)
  done (took 27.447380856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.35886985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.476359388 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.301309617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.61802502 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.693352492 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.298966185 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.299380949 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.505830496 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.777782622 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.789897692 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.34798938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.35958882 seconds)
  done (took 19.061745618 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.299727474 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.295336687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.303099579 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312268873 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.349323956 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.304460995 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.307645502 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.294999726 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35111403 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.352988591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.305051275 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349808295 seconds)
  done (took 37.061486519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380349637 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340314498 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.205570475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002403319 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.674496081 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50677252 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.020186416 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716459796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.301387578 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568656164 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958976531 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397300405 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.550350549 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308584568 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296960853 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.225513623 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523497565 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745394216 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297224746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.98072332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321716012 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305630556 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.047454465 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.32517352 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5061982 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425476695 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.578319242 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296463258 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554837811 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308895177 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307067339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298313297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571912681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945237414 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391026537 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306719666 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965355799 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013593606 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.285728588 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.993347061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.747399414 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299333334 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308394443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297628623 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231191176 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297850084 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720417439 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.306472285 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.009275779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297103642 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308156521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392422069 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.30138767 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.113591678 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299052136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299639887 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.295491939 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303363594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871647078 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.428331363 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306959544 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.235884164 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401784427 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989379071 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869533002 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400800297 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.302292277 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302328871 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233300806 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.025071149 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31916566 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446844103 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.320490468 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950038389 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948151438 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.981727825 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244778971 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812734444 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301920435 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.235438636 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526737601 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299461978 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235234162 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.238922062 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23277474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964870133 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311664101 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.653028655 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310848029 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721672225 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.313312695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317091307 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322811042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522421792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.183360207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2992865 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.740660502 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487173314 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321823434 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.714850472 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238153149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.302542889 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55374693 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.511879625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307595379 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.237994273 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488704525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303544467 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.320119729 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.300543455 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.312767487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.828025772 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312681266 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.434184944 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319848745 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300650899 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000030831 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30480912 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404453114 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.991284393 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54578283 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.032035962 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305718519 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383972899 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309948302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301407946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.088753267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.818917394 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301578379 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.30267028 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310170556 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.314587133 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.30369925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252409031 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.299712378 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00689591 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.306334302 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524505152 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301690544 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580329362 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235998213 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448730934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.393840983 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.525429376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.428506195 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.303704012 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559111871 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30367899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304709466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315363822 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321646757 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400892417 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324032576 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.31236939 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560979694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.306484826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.307104704 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.512802547 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307712323 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311820758 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.309320875 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.129307858 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831183984 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285426774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309663792 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193056989 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.31757882 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368452315 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309247084 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.313310334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.974828007 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080931734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.309531176 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.300597852 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529365212 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314703662 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.0669333 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385570226 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.481205727 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832823993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319513872 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.236176353 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.012748317 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.994674767 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301502435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236538887 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301415337 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309924643 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3121005 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524157582 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830555695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30572205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.990335291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.309859243 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312970562 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.30713435 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301597817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.93685209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.452445172 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306348698 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.315371266 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445965865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.315438358 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236210066 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.305336694 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306819708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302072651 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302107379 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335220369 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.99307589 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816518766 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563111134 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.014260154 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317431572 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.158755339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.334813102 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.299187822 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.766886458 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322743934 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.313494608 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315563406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.313634169 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.067281852 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970778776 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874937028 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970500892 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790946776 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196832847 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.30955204 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308149331 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.725128361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242135519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.860951058 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475890362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.730856548 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25107124 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487627372 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.427925241 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008772284 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315430386 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530553499 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188703856 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.780790546 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331213039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515684869 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339516164 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317467717 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234949036 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.828755843 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541007637 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.783781387 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384998566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733070721 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.777521527 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321969415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.303546407 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603799368 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465968225 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.017746215 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477640071 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313604615 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.017069396 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829606602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316896761 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.530228979 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88798876 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322172173 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.490944062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244247577 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.316518285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31529696 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.3064539 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.445508035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.305733269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.561527897 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316653216 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239439591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305600479 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806312206 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.160236754 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.311118514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306182714 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010216266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313998041 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56727389 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.310464863 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.918150721 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314470776 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240721213 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241023139 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.000614888 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312549754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281174302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762599598 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.394280386 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297454889 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32748393 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154485381 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559130218 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.320637057 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842866934 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53343518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.070686741 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331523647 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407244863 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.824424717 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.307153223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307034905 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542418707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131688326 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.532329869 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.235991103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.221754065 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.307175972 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523904875 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307663836 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.047294766 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545896327 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.020638292 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.312168883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967494639 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333984806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.056358174 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236066257 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4119132 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315735778 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388325231 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318888248 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.318408897 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.31953847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466325946 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060407856 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324120087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.322427492 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401926942 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.490264497 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.92879913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.31510931 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847382028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989061316 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84816323 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321734838 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309188018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314198351 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243028087 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457990874 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.535405606 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582817718 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437756297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.453497525 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331616988 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.829933044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336636567 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524554177 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584991755 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204210575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318603804 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324269378 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.310547029 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320592807 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.520690663 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773257905 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839871943 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42938045 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317065949 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.731275093 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587069025 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311198696 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309942827 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901515817 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.324664737 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616793839 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.318819871 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078338213 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46144279 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320869867 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955874373 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323544197 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.471522934 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.08592358 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025109651 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568421478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726940416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.323805981 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851166728 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955591671 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578214284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379337426 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323271126 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.423971575 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459577583 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.319783822 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315126005 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311654819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155722206 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.02217027 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.321423755 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853906985 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576604815 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.310707894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.319424607 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338098115 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.322764504 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535364003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987166678 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540526496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323006848 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318623471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.130221639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853640571 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325943387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247473594 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.317177788 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538545264 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552855255 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33411774 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.797585833 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.026263335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840217948 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.575615614 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336448701 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315304711 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95915182 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855101397 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.938440202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778416294 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.884520863 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323504507 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591109873 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.318767965 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322665196 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592372515 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.318307508 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323241349 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328830369 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.850493491 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.023385537 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.326003419 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0445918 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.255725943 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657613119 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923871729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254832094 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324661214 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.48474793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319337269 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443531243 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326049524 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.320888488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317855601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.078247119 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591453317 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.322097795 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.302041142 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.897224099 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322785746 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325060457 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556586383 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320527919 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.991310728 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.66589489 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571605666 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328299782 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.302194631 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.320821798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31798421 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303713689 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.513309986 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539708152 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846886101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.331080545 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.329675928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32038153 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.532728749 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528087154 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.105833123 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341892139 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317502992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334350175 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.228770228 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.820105113 seconds)
  done (took 1563.567674563 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.350615231 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.369036748 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.331064668 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.356972235 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346727615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.366409139 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.36287343 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39362416 seconds)
  done (took 52.133801454 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.31951576 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.53048535 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.347000441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.317613544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.329269975 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.319622994 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.724545954 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.319699417 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.326870522 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.328537518 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.329781371 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.320198769 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.899747674 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.329998945 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.321617742 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.310519561 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.327001948 seconds)
  done (took 64.967986161 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.323891519 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.552590712 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.394321601 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.336056797 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.031173595 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.320011487 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.587267865 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.388802662 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.327470457 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.361288116 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.977963385 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.325113107 seconds)
  done (took 83.185586982 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.325920124 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.326497586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.325551247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.325948631 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.325601564 seconds)
  done (took 7.88896841 seconds)
done (took 1984.096146726 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.572609091 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.955210024 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.946204941 seconds)
  done (took 5.159645649 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.467067655 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.515830779 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.637851831 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.657507517 seconds)
  done (took 7.53727414 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.593872893 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.689132649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.506467965 seconds)
  done (took 6.047808406 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.624312484 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.327358433 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.395331722 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.319924984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.321518136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.32347963 seconds)
  done (took 20.224195559 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.324505957 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.327787295 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.324308953 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.328196987 seconds)
  done (took 6.562909282 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.304217675 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.06825797 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.305790077 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.325387956 seconds)
  done (took 18.262851057 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.073123153 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084486684 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.067933869 seconds)
  done (took 7.483503329 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.330075455 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.165807829 seconds)
  done (took 9.755532591 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.633832651 seconds)
  done (took 2.893556734 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.456314188 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.589860767 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.271729872 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.224404863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.333272064 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.762484336 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.80081983 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.421265044 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.206518956 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.282353067 seconds)
  done (took 26.608692727 seconds)
done (took 123.715193837 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.849152349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.568532074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52813653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.863139519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.545388083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.530883141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.733955151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.830874555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.332712372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.322011103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.821445215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.55338642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.464235243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.325487284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.463573467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.706869586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.554320214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.906320273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.541784161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.702638474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.724530039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.465849605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.656738141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.546144811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.556352421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.484615159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.06057772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.709032727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.717132416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.137318878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.484373459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.879411002 seconds)
  done (took 186.827489417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.322111084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338046847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.335629952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.348121065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.328605202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.323930093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334025859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.335851437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.325675887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.324876429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.327028956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.324089661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.329868018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.322193321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.337794099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.33540827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.335545695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.331970932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.323630836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323635619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.323139628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.323134369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323109769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.322965217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.323612806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.339183262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.323207691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330151259 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.323772333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32521889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.323563967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.323447678 seconds)
  done (took 203.775496661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326157621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.324609652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.323771074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336624359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.324382427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338727157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.338251721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.326249661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.323830963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.32449501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.350327156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.331414182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.325379034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.330241372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.323789312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334145853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.328491515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.327050375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.324050875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.32446801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3262531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.32400034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.330660287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.336723207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.328858306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.326478179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.325538373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.338253477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.34180819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336595612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.325158373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325098648 seconds)
  done (took 203.816020902 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.525601682 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.331850607 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.332055853 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.289354797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.333249948 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.331020843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.325220683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.521330672 seconds)
  done (took 14.253912555 seconds)
done (took 609.933351683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.488750109 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.218187443 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.521980938 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.354083162 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.023182918 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.359558336 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.354440415 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.506719147 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.235970841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.512203821 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.510144485 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.350809226 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641288297 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.351401233 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.587026443 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.441792924 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.165197447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.269442742 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.652861097 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.777609319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.591470755 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.751308226 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.507227046 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.232421142 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.651912612 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.755194898 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.987290991 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.164209834 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.352003266 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.648177918 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.832242191 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.215417755 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.406513294 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.38591926 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.440614559 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.422948031 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.202498445 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.386129581 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.524367492 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.534750632 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.793680261 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.051541578 seconds)
  done (took 89.427339593 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.321345875 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.322291013 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.322181455 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.323157057 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.323698779 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.322243889 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.322936181 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.32144628 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.323010394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.321162541 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.320379424 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.32268813 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.321466748 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.324774322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.323300617 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.322433997 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.323049993 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.324923056 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.322941957 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.322759406 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.324437658 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.322803727 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.324202766 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.323538721 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.323147158 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.322908436 seconds)
  done (took 35.663064034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.33608898 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.558431468 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.722455375 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.343695555 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.337536455 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.341262068 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.407418976 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.337254228 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.339716007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.340031016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.481785935 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.339067163 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373774674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.735627655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.34367659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.338871567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.336670522 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340498848 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.568608811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350906791 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.410439248 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.338254887 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.411141055 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.351704611 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.342869176 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.341553575 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.345392306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.828134694 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.34111553 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.482880951 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.040406694 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.408152767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.796671123 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.734905555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038354813 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.341096549 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.338170073 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.488890603 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.340873834 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.338428085 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.408144594 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.339270176 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.732357258 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.957307568 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.353664957 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.339761989 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.844798647 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.488064531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.561714821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.348798929 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.756341007 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.343099964 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.342042199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.341698936 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.560697301 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.344769434 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.339135568 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.844865757 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.345394196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.410284471 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.341073594 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.341283217 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.574438352 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.341211907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.567530849 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.342093425 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.349578694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.341432293 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.734484912 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.343013766 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.96456673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.353757967 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.341612069 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.484722822 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.568442652 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876760537 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.345141499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.578294427 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.789497618 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.410910358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.34502832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.817361975 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.413828153 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345041665 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.344781797 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.342721793 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.342499842 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.385404983 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409543314 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.898987656 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964631958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.864533309 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.414067338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.353300026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34343789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.849831366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.357454667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.342222718 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.72880886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.974576794 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.35682987 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.351224676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.953892615 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.358159961 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.412944225 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.348041959 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.744246309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.346191282 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.387009913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.34442902 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.350080638 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.347047367 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.413973286 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.347466198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.343422968 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.94264155 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.50652323 seconds)
  done (took 175.290311449 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.350329327 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.336741059 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.337003174 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.349117817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.335889153 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.342856837 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.336742537 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.341889623 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.343133022 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.337144367 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.337447501 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.340110732 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.338450535 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.337694098 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.348519738 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.343596356 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.95531006 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.337894725 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.336871055 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.336143137 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.115697225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.340994973 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.337286242 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.338837983 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.339248405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.337449988 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.354893044 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.339210662 seconds)
  done (took 152.203871838 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.346314592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.85373551 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.346890814 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.462874009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.365037093 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.343433609 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.460616755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.396531085 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.346223808 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.342932234 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.343566518 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.615717412 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.346403193 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.812577438 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.516162147 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.465724304 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.81326225 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.350040478 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.343134693 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.343173231 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.46515134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.351292116 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.621820883 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.864593321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.350314368 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.862153436 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.337540784 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.345867969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.345073858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.857046157 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.34556852 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.619340344 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.414487571 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.39968559 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.858470577 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.81592351 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.814626238 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.477236123 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.345987218 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.345064835 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.344705016 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.3361787 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.860343358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.348324203 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.347782087 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.853887938 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.363757128 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.348372181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.355212519 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.34501629 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.400399648 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.399942107 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.623848861 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.865773661 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.416490034 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.36719033 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.465398736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.689873606 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.352787805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.810372529 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.334295422 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.863614369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.351550293 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.335248423 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.34946639 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.352658322 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.482146255 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.467082884 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.813069399 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.348315958 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.815233566 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.484174379 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.347416009 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.347348447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.348426348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.862821426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.814086311 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.482693438 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.470154947 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.519565888 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.338840473 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.34768108 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.33637588 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.417366556 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.346760414 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.863663969 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.819703691 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.351956571 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.349088067 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.349258463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.350122068 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.5059707 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.867076801 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.41873989 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.827082706 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.642064269 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.625378378 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.3505087 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.401996596 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.348729532 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.62671897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.350375546 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.400806441 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.747743849 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.629134502 seconds)
  done (took 159.0330642 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.57166916 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.463831692 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.435319431 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.453249014 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.843812971 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.900930635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.457319244 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.46893245 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.451838909 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.576211645 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.43565302 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.443303176 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.51809562 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.417765446 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.004139955 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.413030934 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.435929829 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.465184236 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.452934724 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.320930502 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.948586913 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.618004683 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.509385678 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.335589519 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.439154956 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.067893607 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.872863208 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.842287053 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.504679547 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.53648564 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.830750439 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.417024745 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.239287144 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.97788551 seconds)
  done (took 63.954430905 seconds)
done (took 676.837603802 seconds)
SAVING RESULT...
DONE!
