cset: moving following pidspec: 22787
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286043036 seconds)
loading group "string"... done (took 0.579854945 seconds)
loading group "linalg"... done (took 7.12743118 seconds)
loading group "parallel"... done (took 0.16428995 seconds)
loading group "find"... done (took 1.114312015 seconds)
loading group "tuple"... done (took 1.971201079 seconds)
loading group "dates"... done (took 1.266557492 seconds)
loading group "micro"... done (took 0.234823151 seconds)
loading group "io"... done (took 0.959935443 seconds)
loading group "scalar"... done (took 38.317728835 seconds)
loading group "sparse"... done (took 12.306748389 seconds)
loading group "broadcast"... done (took 0.969840448 seconds)
loading group "union"... done (took 13.077350589 seconds)
loading group "simd"... done (took 4.405129089 seconds)
loading group "random"... done (took 8.920862125 seconds)
loading group "problem"... done (took 1.959866787 seconds)
loading group "array"... done (took 21.095766587 seconds)
loading group "misc"... done (took 1.91504451 seconds)
loading group "sort"... done (took 3.197892775 seconds)
loading group "collection"... done (took 17.851750628 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528648204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139045695 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115648255 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137296266 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18201375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130211797 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14338682 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084126734 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009122265 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158761755 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138491272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.474814827 seconds)
done (took 4.995776082 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199355576 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0862584 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094858329 seconds)
  done (took 0.884544752 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064659295 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125126145 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079250792 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066731048 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066395746 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079821173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066682779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065502802 seconds)
  done (took 1.260446997 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073761665 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067808064 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083450774 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067611433 seconds)
  done (took 1.003866358 seconds)
done (took 4.13405185 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.892047026 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235241409 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187830049 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451214745 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147061048 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18803986 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666315209 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316501259 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209444051 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099282934 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103679513 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376910328 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105847223 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663927071 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077507623 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107028412 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158463306 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418961368 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080620308 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081750261 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102718412 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140661077 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099774444 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07668541 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167756864 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06878193 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146154597 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094342826 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067725061 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240501065 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188929666 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672472956 seconds)
  done (took 10.380704445 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098378529 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115660392 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068478381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138018882 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103296028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086816319 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070351785 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082730607 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090631626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156445082 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113791366 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104167993 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080781513 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068712091 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099576378 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210022639 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105339794 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084711089 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085707186 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075251861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120951476 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081955822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093092708 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0772862 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150460935 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195339433 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113316317 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11049807 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068210328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080281233 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130037299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141495429 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067243326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082656775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138585809 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111877959 seconds)
  done (took 4.524416875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.025059692 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160030468 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090523479 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151159345 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084247922 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108749706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082306993 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098689716 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244860125 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.169566679 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.453932524 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127427243 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086476445 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084180231 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084700419 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067888751 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083280011 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510909789 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14308435 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101576232 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101482169 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073004731 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08483664 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361235212 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068137884 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065419956 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083694144 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058784949 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143185107 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06755962 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.203946888 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087794323 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086478032 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101164767 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192545021 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093238484 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155031024 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081328878 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065919002 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168367524 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072155442 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081693845 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087247407 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118950624 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119200982 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067595013 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080921471 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179755808 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067021125 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098124643 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.860562049 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164971488 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078652293 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066219894 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284708528 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08331534 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083159833 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063628272 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249514999 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151220412 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06628996 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082675712 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06591932 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067197208 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385377818 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066686106 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.829752375 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071101081 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078256242 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085909317 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066204421 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087523213 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071920311 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100096336 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067196018 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066941022 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082344705 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065811456 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082385438 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085022632 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202484682 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082000583 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066845411 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063381947 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101806871 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109491423 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069586387 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06469464 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107121883 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11372664 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069136514 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06694071 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118366046 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065835423 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079940177 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08387724 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085304506 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126550787 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06926428 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119786651 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08044428 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098137298 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086452651 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117609479 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077642954 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082570713 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152603234 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064035293 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063394409 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081348725 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066292591 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0796342 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067886813 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067666629 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096454095 seconds)
  done (took 20.938680459 seconds)
done (took 37.578481068 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288640043 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09278615 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089778781 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074109877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090594293 seconds)
  done (took 1.420654855 seconds)
done (took 2.179727697 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119490854 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115289658 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062720095 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111453858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062884426 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115359968 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113131102 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080544133 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117047816 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063425976 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111302874 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063712359 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063453435 seconds)
  done (took 1.9856678 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082316634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083741692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084258182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081081525 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077104942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081566906 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079186911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1034071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079252469 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086889766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063207244 seconds)
  done (took 1.658071331 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081612752 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082905487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083871297 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081067572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07765335 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08042961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079064772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101053018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079371744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087739987 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06283943 seconds)
  done (took 1.655940545 seconds)
done (took 6.049074918 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077050955 seconds)
  done (took 0.829205247 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.6912258 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.624201477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083115843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132645865 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219642872 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15299986 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440028677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108132286 seconds)
  done (took 10.375598647 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101831395 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084886937 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07138933 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088170069 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071264456 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08437834 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070635464 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068097036 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082873931 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069173281 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086323725 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069332721 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085209974 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070300373 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06840876 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083694713 seconds)
  done (took 2.076182458 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092826876 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091056791 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.0898024 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075313913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088531887 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072019521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090764328 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073943587 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086353681 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071426765 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090078658 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074181173 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087164626 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065535126 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089857116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076103394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085812064 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075072759 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090699434 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074798151 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090319725 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0651747 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087291172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074220235 seconds)
  done (took 2.821630821 seconds)
done (took 16.861513883 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129966805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075468646 seconds)
  done (took 0.965537233 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081265437 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096845258 seconds)
  done (took 0.943585844 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081835904 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080254565 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090081371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092226868 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065730777 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080950951 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101484814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065649328 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080333753 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065851258 seconds)
  done (took 1.56938574 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06866883 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092219852 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069889951 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096165056 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072687992 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079790099 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071993069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083269922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0778076 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077738289 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071278478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.09924185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070436141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100705563 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072909576 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084091097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08710848 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068936263 seconds)
  done (took 2.211979853 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064996157 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066136703 seconds)
  done (took 0.899138497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066447969 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062828107 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081145017 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066590616 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079836245 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063911586 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080390775 seconds)
  done (took 1.269143453 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397620855 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107820551 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240309308 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087072841 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102240592 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260280134 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082375621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070135762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086635353 seconds)
  done (took 2.239424758 seconds)
done (took 10.864713011 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078869198 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084748896 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108461952 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415688224 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105965053 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064830078 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131274686 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223138065 seconds)
done (took 1.983166918 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125111839 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604263709 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.396912298 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211422785 seconds)
  done (took 1.988568871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370300283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091470012 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075062721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068788333 seconds)
  done (took 1.382613303 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06591264 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069014978 seconds)
  done (took 0.912375911 seconds)
done (took 5.18294857 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066462391 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065692461 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078965052 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065983443 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063632512 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078768373 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065492773 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101937361 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065150778 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065941443 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.084159994 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068506913 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080559765 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065078515 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067214045 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081848432 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065107039 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064506055 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081082971 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064865063 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067999693 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083392899 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065035135 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0648034 seconds)
  done (took 2.531958 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084696942 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082021785 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072326662 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088577737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072093165 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088851426 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072555115 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067536732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08897906 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072834914 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087313517 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07154775 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085817283 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071588032 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085224991 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072245504 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088529904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067981375 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069686367 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087687833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073594063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084862769 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072104539 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088707414 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071774954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087091833 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069617154 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083607219 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073683083 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087155877 seconds)
  done (took 3.15189216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070528562 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062587252 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079631399 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070679444 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064770559 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083545025 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064899924 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081733119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066217798 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065081581 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082911908 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064776759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06548633 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082814459 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065299792 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084138095 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081152867 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065471866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081924013 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066282327 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068065068 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081124612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065156738 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081149991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064563967 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064449212 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0813814 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064860519 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065808177 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081655755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067631612 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068736045 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081895006 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071525357 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085137122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065208846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069281246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081134194 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065721875 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064595781 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081353564 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064444721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06451214 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088389541 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065218935 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083425907 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064320344 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066381105 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082386195 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068522098 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081215965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065425582 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066574811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082549962 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069744107 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064444562 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082014166 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064219761 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081705617 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064795573 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065246156 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08103624 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068114385 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066078227 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096546767 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072091447 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080677333 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066517822 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066583389 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084365443 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066868315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07843816 seconds)
  done (took 6.014911994 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116111469 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090876729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082003898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065131552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07854988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064627448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06683422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079432557 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065429718 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08568441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063934515 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064761238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081425947 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07681923 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080060232 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065385288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084892182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062289742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0638289 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083213338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063969199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08308669 seconds)
  done (took 2.458317968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184742225 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087233665 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107897795 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089385374 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083930004 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075414501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070737383 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088317938 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071700607 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086632005 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069753593 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0879134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069818983 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086613909 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070234559 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086947131 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071967621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08667388 seconds)
  done (took 2.362669574 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077765064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065246535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104971846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065571056 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082735781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068633056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08766143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074907575 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084773021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066507865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092326391 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069934211 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086406329 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067892926 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070502448 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084508619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070287614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085212624 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076388354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089859212 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072622989 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093017392 seconds)
  done (took 2.5266162 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079962817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067498055 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100811585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084911635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062911676 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064414383 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088843425 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065903983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087967014 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067841691 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065289498 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081075784 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070492186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08197062 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071786443 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084274199 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069696377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067676151 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08548781 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061962427 seconds)
  done (took 2.301270599 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086750052 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082910451 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067543425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091110853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067235242 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083317432 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075525811 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083042996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067129942 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107344424 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067591418 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084928975 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075210528 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088408312 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068257222 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091061421 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075284559 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09152842 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066946427 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083547625 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.218292504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067736043 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091433961 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067128522 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083512054 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06746292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066356386 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088746967 seconds)
  done (took 3.149591116 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066245582 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065943847 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079609876 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063446906 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063413037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079650464 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06325113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063750696 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083242003 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064109847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065224065 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081669781 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066331823 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081608864 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066465747 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065561633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083516168 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065188712 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065738767 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08228589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067106364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067043656 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084616693 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065487675 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080738156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067648447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065291265 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081611192 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067570845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065521363 seconds)
  done (took 2.924350616 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075870122 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09001356 seconds)
  done (took 0.964995148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063556998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080323614 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080356859 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070095572 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08810128 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068540691 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092647092 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072686713 seconds)
  done (took 1.410530441 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082241422 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076959972 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085704989 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079950651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097030221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084384069 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15686112 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086127146 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07269874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081353715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08059846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065750982 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089807877 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066842669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088438135 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073216557 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064480471 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088517891 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069014189 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081657586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067748184 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090609215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068993304 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062237542 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084185109 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075506264 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093894778 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066800919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086068898 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073595953 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071171136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077441339 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066379394 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082788782 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064654569 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091967592 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081061025 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085292821 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074909074 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067216454 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092515895 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062161909 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087287785 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072486655 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092370755 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066980348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066945414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078891546 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06385514 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084600717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063099072 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068151278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080132717 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074367196 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088323816 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079496837 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069714372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086460487 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07151029 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088966379 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074932849 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086291384 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0705218 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067715223 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095554439 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072449432 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094537211 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063157001 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061641729 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082603344 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07785497 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107813762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074983709 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086360444 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06885249 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082424215 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071362428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069756826 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091201365 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074461063 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085451325 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074208924 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092079526 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068631621 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071197872 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093676075 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06674656 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087882139 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066277521 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102208103 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066832136 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082626204 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066348352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078564944 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089262586 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067866026 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082831395 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075764548 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062006179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08564492 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069374621 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085543902 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079251767 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09000272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074073254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093804535 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075706149 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067615559 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089855341 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064696779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085855467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067706842 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074812598 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08013645 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070613306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085400395 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068949398 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077065476 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084080654 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06833531 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092400357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073861872 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083558932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065401624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070487067 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0856134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071415306 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093261372 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066928183 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06271211 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080576442 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07148758 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084571568 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071610131 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090102177 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071325823 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062752031 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083267637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072145324 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094300683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068845651 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068481817 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091663121 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068867264 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085943172 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07493146 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087605859 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067869124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074032592 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086644383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06347912 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088831535 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071456948 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066097842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089160602 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071265638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087747093 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069028411 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083369615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07310687 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068875754 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084599176 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068902334 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08369751 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078642042 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069377908 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080873849 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06534841 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092963151 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065817525 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066974285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085508527 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070391727 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086557375 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066552485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067469014 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087277614 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0790023 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090379979 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068988303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090969846 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079597687 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084992646 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070551494 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067969444 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08685773 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069487805 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094285186 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074095719 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090035646 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071121569 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063962403 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091143955 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075837871 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085088111 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065884284 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06723795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089384016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073373862 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089294328 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068963843 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083583492 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068717152 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070909309 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088643696 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067726702 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084346833 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072808669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084479734 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075287002 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069194797 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096153326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071378964 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080734723 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071579109 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083873563 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074180293 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064203627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083638083 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067397036 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086504754 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067150126 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071011242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080689504 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075708005 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092989823 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06948121 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067279481 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085946834 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074709005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086546387 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072475506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071391847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091976929 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077945521 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085017576 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071638636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096830745 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068830826 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062502332 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090968665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066931032 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084638759 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067457009 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065313666 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08903863 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076905536 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093307454 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060788533 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08728804 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067164792 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066910747 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080979607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072556831 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088055504 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068833005 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074924779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087077658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069001737 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089496777 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067891986 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068498189 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087204953 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071755437 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087081118 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071513071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067252382 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088759009 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065704568 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082074117 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068519669 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066056726 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083948503 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0715932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083180069 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067553691 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085828432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06737836 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066858053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084048936 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066209593 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08694085 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069077153 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068491569 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088179949 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063994949 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09167177 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068455784 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074936951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086031241 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065110331 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091070395 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07078528 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072088394 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08731911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069561162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087777769 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068042599 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08815843 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075628922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065890471 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096955598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076289964 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087090907 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071438662 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085281336 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070103337 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06744666 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086786497 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069239281 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067473953 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086341269 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072946951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088508694 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068762573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069914456 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08727486 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067854378 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087238754 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06338899 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067225282 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085404112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068880941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096001995 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070225592 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085251387 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067226853 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069003965 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085056139 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065013801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094042003 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077228259 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086234504 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075819832 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066656758 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088374714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078616349 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0804483 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066765607 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083488206 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066736864 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075528415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086983418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077737492 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085626609 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068331758 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065599008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087214934 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067813316 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061637034 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084374258 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072471632 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08503335 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067693218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06855057 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08965066 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069615147 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096194027 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067924755 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087175666 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068607501 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064897982 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085689389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067579369 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0882083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068804617 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065945292 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08346262 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068242987 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068061242 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088802041 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068406423 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087634806 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075393481 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085036181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071526795 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071739931 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084108847 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071783481 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086110356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068332694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067097733 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089816837 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071553648 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087088881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077127691 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085631923 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069774629 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069096773 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084569676 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067949518 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066933288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08720003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067626007 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087088308 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076894694 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083351966 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071957861 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06773856 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086962457 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075804461 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086589151 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071650562 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093299415 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068754086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069778849 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094195872 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072027828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089411562 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069265729 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06974258 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093110636 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067776899 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092284789 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068748079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086705015 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07026391 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065742706 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084371084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065959685 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06481548 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089882835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067009998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083467455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065824872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064274565 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085247836 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069509583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091085526 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068721897 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08646421 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061662676 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063368919 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08480476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0642326 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085390021 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070022007 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071222059 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086296287 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066656188 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082450262 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075302875 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089294442 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070790004 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064590847 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087080017 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067439751 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085643834 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068125437 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06608341 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085244866 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070348133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084939814 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066683802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073120992 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087448274 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067490009 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085672589 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067712606 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066916043 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079448245 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067454133 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085780879 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072322309 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067904962 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083959785 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081723598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067244771 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086793618 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066655186 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071184427 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079869888 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068825157 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084795173 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068468775 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061950007 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084028854 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06515973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085799938 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066094094 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062161613 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094660332 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075985102 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087228306 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065758674 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065829238 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080482772 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062615272 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083382871 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068235679 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067465749 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094356944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065523446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083003662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062086017 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066525451 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087609904 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070751395 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081936215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062703035 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065320369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0882298 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072365181 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082544379 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066976669 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069929243 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086640654 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064470067 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087277133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063782996 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087299604 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079506334 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066180431 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085103193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072258896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091395519 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066981918 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07886974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068029877 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06913718 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084736454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067707243 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084188928 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081138973 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087246142 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066237237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064754111 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086653186 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06641866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091909629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068430009 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066436842 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089224684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06801944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092339823 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069594675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092194542 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069651036 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086950761 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065629772 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066606677 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082621635 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065892371 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084764937 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068066526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070838977 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09210466 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065598865 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095123326 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074719532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086103304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063198258 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065417445 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084248457 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062189457 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084969806 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065101458 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064420246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08292315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065764398 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084464518 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072831424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067651414 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085208905 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066564066 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078007925 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069602806 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068789748 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085233527 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06351822 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066311611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085775137 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070312734 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088348879 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064590636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086233153 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068357919 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067400034 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080109655 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073442851 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064776943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087655024 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066499274 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084607516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068076005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086834296 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07160942 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066519711 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086315719 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075147485 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086116062 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063937669 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063757926 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090170341 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064060476 seconds)
  done (took 46.600302025 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106420064 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081378229 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062485232 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079644882 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075036953 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080954965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062223706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062473272 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08143714 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065572999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07995204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062195588 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088906911 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086041622 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092443052 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06603555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080086836 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063555447 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079620747 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063666529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089558389 seconds)
  done (took 2.454109551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074907485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088459087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073207406 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094183926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067279721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089060695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072673672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089274571 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09363133 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067163681 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093728658 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071348532 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084781195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06771147 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084368586 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071552425 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093717734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067717836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088326989 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073011116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088459122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073209378 seconds)
  done (took 2.608519768 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066871171 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065499875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08581018 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061461754 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065083935 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079410278 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06936213 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082147545 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069458279 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064575022 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083181481 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073326143 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085122979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062256372 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066003497 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081518662 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129692676 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069828593 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064974081 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08607998 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06158876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086069105 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061853166 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06141401 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082714375 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070115748 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085097485 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064366455 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065492657 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08353356 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066218345 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081352369 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067537138 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066322443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083066077 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065071322 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064988617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083900259 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061701793 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081718729 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067370321 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061460678 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084706108 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067519065 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062922437 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082589855 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067512836 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083420773 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062188892 seconds)
  done (took 4.441932303 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084231561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128555105 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086298859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089329235 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100717519 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09174465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069975599 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110230308 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063171116 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083484639 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081521248 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10304592 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084771573 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071266549 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090008757 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066333458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067312376 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083530534 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069135333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083705923 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069613668 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091170538 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097814358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079699101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087660344 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065050413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083358878 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070810433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097245558 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071190653 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088715753 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071643387 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100442935 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07110164 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084153318 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067722551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100323953 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084113416 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068724728 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063978368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086689156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070322211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091943004 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083041949 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084945364 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071627329 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084983998 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063704291 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097538555 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067681755 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092446284 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.09934328 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070080014 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083676472 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070506129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098786684 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066731544 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0823465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06926762 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097443196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063640266 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088054265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080720424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08577709 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073628887 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099583287 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071167107 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088411652 seconds)
  done (took 6.574263168 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075107668 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090892231 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080230722 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099624601 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091307693 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073475842 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090477929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073136036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090993243 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077036818 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091525757 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111961108 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068028979 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093344917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073778394 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091228551 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072625374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091521491 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071855467 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092746855 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090604949 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081820249 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091144069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099107975 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102392585 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086280323 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072634133 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090884157 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080339076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090933476 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102039764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072817076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090446303 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099068364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084596734 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090761064 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065328794 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090162805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073249619 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090539317 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067681817 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098825863 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071222439 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086455327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071507642 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091081344 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098801061 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083790479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093932732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095316173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072824779 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099676626 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072264932 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09129405 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098545548 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104662567 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099209262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098501017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072811062 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099816171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098524238 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106135906 seconds)
  done (took 6.272378762 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086710812 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093405825 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095498311 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062005266 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063963984 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088933683 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064108119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082628637 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074675832 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092772756 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077491773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088537807 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072420818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095885783 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088155769 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073241417 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088355069 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070048324 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092888454 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069854551 seconds)
  done (took 2.475893731 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075737359 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101654386 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066701477 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071113306 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089134161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071096171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08723342 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069416043 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085709301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069333497 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094424663 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076277875 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085163057 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07149832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094280198 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071574187 seconds)
  done (took 2.138812762 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078380074 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095267322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080867547 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085717167 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064978244 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081542102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066047822 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062249904 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082008175 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079903643 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085451429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068882375 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084939772 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065293959 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062585633 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088385982 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062699407 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08298374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066048162 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099765407 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076837423 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083230475 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067142937 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066762334 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086584003 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071476047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085596261 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064198058 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083255391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066720878 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084942002 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073562154 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0816128 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065094986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063793892 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082345502 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06667873 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084892985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069708268 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06457783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083353807 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065740183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084493499 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067218866 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081084313 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066996765 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062691947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090791321 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06491891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084741155 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066583703 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086935692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067785496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076162274 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089196179 seconds)
  done (took 5.032842786 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080118837 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068828867 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080997379 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064237742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087432942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067710327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06880287 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087984908 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068717585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083202202 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068688486 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087556952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069095281 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069289228 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086861789 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069877706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080513586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067848458 seconds)
  done (took 2.222175877 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072580879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066073669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091899633 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066388586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084795848 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069320087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062277013 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084075781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064896998 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084943516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066260807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068326993 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083753387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068333452 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08437886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066705176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068358992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083159356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06627907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080651889 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069189124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064903907 seconds)
  done (took 2.482076472 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071942542 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091812873 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160424223 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10656937 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082042667 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098610634 seconds)
  done (took 1.477828292 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09031427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098282871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067054074 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105832548 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07459997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086609726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0683852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0865901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077098115 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099954785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067475365 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095783029 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094593014 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07747631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092741616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072906954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087520619 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067717702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086250588 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104785909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068973402 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095243184 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068500032 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086785324 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068856501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094309223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07656161 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100778012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086159761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076537966 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092219504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067897367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096480957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099689758 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070445829 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09493232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069233984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104988131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073616831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094964895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068415362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093708346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095103984 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073069421 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094863894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068136611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09158196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067937118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087916584 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111860668 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073848975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095523735 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092567033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077481475 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096274847 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110575606 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082336176 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096052031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092290616 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081966851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095177937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073337068 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095759604 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100090747 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073802888 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095436677 seconds)
  done (took 6.540885471 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083984077 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104532301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068735437 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101315789 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094629991 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068134438 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086057678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068279835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086552574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067927907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128499901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068042864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095963834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094469219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068300138 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086434951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068821768 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094808768 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067096512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110715797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08736787 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076391695 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094794236 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094774263 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081663957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092438952 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067242494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087287571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067449512 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087645715 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072244487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087766747 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095066219 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068311993 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095194523 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068832037 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087036149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073816062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087535963 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073897078 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095611736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103832471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068713195 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086881229 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082077679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088419965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067476506 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088058999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068354967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08684984 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081884709 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101559875 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10081041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095402956 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068983909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087565983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068815708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087491733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069247494 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092452973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077086947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086602828 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111637595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069153305 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086753105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076637398 seconds)
  done (took 6.430287195 seconds)
done (took 128.325392215 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200369947 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183536727 seconds)
  done (took 1.249645137 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068679912 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095202005 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097071381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12747938 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085962419 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100557679 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117890535 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078764998 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065747185 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085931942 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066560241 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086831462 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131772017 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065964612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085292847 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06863347 seconds)
  done (took 2.301146303 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102495647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195182564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10897182 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065750211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098227277 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078701777 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08495712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076615043 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094170348 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065533776 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077580633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095712872 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06517103 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095542244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074236744 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096693943 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065238442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097444875 seconds)
  done (took 2.515761935 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103080944 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140601746 seconds)
  done (took 1.119179272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197652677 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122471387 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202227101 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410392102 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204536997 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275478735 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172775757 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170355747 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158096114 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168813209 seconds)
  done (took 2.95443499 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098732345 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169541491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308913359 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136376644 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086284662 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11511549 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137063569 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089084688 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10065319 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099670752 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081033264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097074823 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096028556 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09485595 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074064792 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097450229 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12032505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074440868 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096056178 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075457749 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116712617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066749045 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074018418 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093703819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076643406 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09742538 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065490536 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085832089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075038668 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093897996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078221328 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113585732 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096743297 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129375735 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080237576 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.128354629 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096633013 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071817909 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094249083 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072263657 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096429428 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077284637 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102558408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075259479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085819815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077306071 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084981433 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066932781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097835969 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077259109 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098218072 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07884155 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128263156 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096180142 seconds)
  done (took 6.173894534 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745625465 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111045249 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093427543 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800014906 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087847154 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105184921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.70667553 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115995365 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207636638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759519661 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089640793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097387649 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178740553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233639136 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.876078957 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280631727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.624938271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103634759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107572811 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13053551 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137616647 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175737877 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148139336 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430224132 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074490854 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092117245 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13520369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074198619 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158609121 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083660183 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092251681 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154630287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223544485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153848572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095403832 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068514198 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090033461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148024062 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216194205 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189941195 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156839641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067392614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091339458 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138145485 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130231741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067350477 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137547688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172276885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148462983 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073215964 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094617543 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140159858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136853268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141513176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099934204 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.260637076 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286443038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089530065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098573432 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102866858 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212549065 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103771769 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196889138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138782605 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166539036 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090324949 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726371505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145224241 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091600853 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073501087 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11819612 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093946977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137709984 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146116265 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.348133324 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161293991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073132808 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089616218 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203180942 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082370076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090982116 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140093795 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074664327 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120683688 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162944956 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141351685 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145820904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.204120561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139855705 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156301954 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074194068 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122581424 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074098466 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18876985 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191290062 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139092028 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183353954 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158611069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140818499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147223368 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074364469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169971949 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097936902 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100119211 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136634604 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188525186 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121268305 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082941517 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093583461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140239785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124610367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085542238 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138446623 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168058956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45232973 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145392541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066504808 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106124205 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138179528 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138798728 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095789317 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210390151 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120552867 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145014566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119070726 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089062284 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118927541 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138672696 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077376867 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119945379 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135578972 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097482458 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21277761 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.18739714 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07646754 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191631083 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16043055 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094776018 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148041528 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118215918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144013794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076458636 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157445709 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075226272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756765319 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142941341 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119947165 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073615354 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170949489 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06906233 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103811901 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102119614 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06839529 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755629867 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084750429 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099652049 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083271462 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094442989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120648547 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135598877 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072750475 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136416584 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200447164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094974996 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096196325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103600784 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138579972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095198077 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08371418 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103529631 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081677707 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121368444 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092709381 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082907762 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144169438 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160597921 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17048951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568730234 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070546001 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102571407 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178439492 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091225242 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238457086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.155355589 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.174950314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138977015 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10077783 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288452253 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142644554 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171850232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086309523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149615471 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088796567 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137467956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141400144 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068512041 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096253635 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139536692 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142666709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162517987 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.916962725 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090657295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202954567 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068786182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148658468 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095365536 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075712945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260436563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069402465 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.164722312 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142499266 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072947306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103054146 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.720618173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103650725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138474916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073414383 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192622085 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140154068 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135087875 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135327708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096202178 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138685666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186329418 seconds)
  done (took 40.070201844 seconds)
done (took 57.258440755 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256405893 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177376861 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240663312 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144201666 seconds)
  done (took 1.791478277 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142269953 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103375247 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116148195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084966702 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102172695 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085490786 seconds)
  done (took 1.53542391 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400583858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263264053 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230866092 seconds)
  done (took 1.79499999 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258560027 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209478202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44491644 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295798761 seconds)
  done (took 2.2345514 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.173103909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112842765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066475003 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10488912 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162421104 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25019621 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126510914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186680877 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079117534 seconds)
  done (took 2.20847453 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195656587 seconds)
done (took 10.664099272 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.186443979 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.25888155 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147187148 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.147917396 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.214358706 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.169195679 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.2486849 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.166564385 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112612764 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.199946123 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066030293 seconds)
    (12/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090181096 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150427531 seconds)
    (14/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103423921 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.16865767 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099503235 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092476141 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.091103915 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.130433508 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.157538793 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078816353 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139930259 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075616182 seconds)
    (24/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.150753528 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113531241 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09646426 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155788203 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200546506 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198811322 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092701738 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157780418 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.184976875 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147324222 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.184969934 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092366965 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073802407 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231894591 seconds)
    (38/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.139549924 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118341382 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166474712 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072409064 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181513019 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11116828 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05150947 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078825845 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090248971 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101157497 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 0.14910698 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09439155 seconds)
    (50/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.196160188 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099751558 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090391528 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.242274706 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073025341 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076614984 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183845405 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113053827 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066476178 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115851393 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07693908 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129525925 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072593293 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10175379 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066158283 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 0.162382799 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.215507763 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.221622813 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158435848 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068118072 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212253197 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113039298 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.083664202 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07166665 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101642622 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066700214 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076974461 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.073619846 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113468861 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091970029 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.168370214 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096667585 seconds)
    (82/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075693744 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097621954 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072902133 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178076344 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133531521 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115708412 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054065661 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.139919602 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07513194 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066926102 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.165362638 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089539943 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120428176 seconds)
    (95/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104705749 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182749141 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135702512 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053417845 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096619888 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094959444 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070930777 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091830537 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076885262 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073693142 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12952243 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075341135 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074096598 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089157107 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188285235 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051485476 seconds)
    (111/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.12082033 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05166213 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066527193 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088049056 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077680138 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073401601 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078711218 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18977523 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051851267 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0944657 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067627918 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052159066 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.130342762 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092552837 seconds)
    (125/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074386335 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072758307 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066804412 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193790556 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113180425 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143851187 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098538087 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052808445 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132445034 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074252405 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.168458093 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067084349 seconds)
    (137/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099321772 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.135727457 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095773818 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079417513 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094478292 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054529105 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080009658 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169876772 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070959224 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120960656 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072369442 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090523452 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194722371 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168059589 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061194079 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074309852 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05342783 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072668496 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095095348 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19424317 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145793136 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11249395 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080161811 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061721539 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13195398 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066138548 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073357449 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073629064 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119686423 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074134246 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064717069 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097882963 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0813534 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065278916 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195204843 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.073026493 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074022719 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070003117 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096411481 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.13652484 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074961909 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147639421 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074152845 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077959417 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072485987 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184211163 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065430034 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116449811 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053360384 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095867623 seconds)
    (187/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.15492157 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090800768 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159150827 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201309494 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068221521 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051943428 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100970133 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069768011 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073786021 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07356369 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051881722 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088161208 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135521814 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066116114 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.30538546 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072822087 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05227025 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089157479 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208399827 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074691287 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158716649 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052184669 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097177738 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065886457 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051128807 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073206508 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066195271 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053189568 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119348249 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053562378 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06971215 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087181508 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095608381 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100023555 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08781481 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064078245 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092730373 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066595798 seconds)
    (225/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06002827 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.14935377 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113171038 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053298348 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06709692 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09740964 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073415227 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095785819 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065217856 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051591547 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059873409 seconds)
    (236/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087122978 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071363835 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08557656 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051880294 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06648989 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086773709 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073886235 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051541335 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159771958 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072444073 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088488038 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066211825 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076132831 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08816241 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098618094 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110079077 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134572972 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.07348212 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052694541 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068245019 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09373392 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147021161 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.074571688 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067671063 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053299864 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07222575 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052065157 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052485573 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199492303 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053154575 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071966592 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090002152 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069031077 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094052352 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06605096 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051193656 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161333666 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052989997 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093520576 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068314584 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072040894 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071682645 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074329653 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061972311 seconds)
    (280/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088248996 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110452329 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087156097 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065753677 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151928985 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052764466 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157581687 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052144843 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05076908 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.075646015 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066731126 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076545217 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096766532 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064535001 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05378641 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086512043 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090897186 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074463303 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073524213 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108388765 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051396699 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071216512 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087836245 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053264898 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061128747 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092679376 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065853435 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073247751 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0735507 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072187596 seconds)
  done (took 32.890191027 seconds)
done (took 33.800165943 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081044756 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112840239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074933497 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114214443 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081060915 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098776743 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073163957 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078124333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102441528 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081903028 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101489202 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054703752 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096283441 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075032919 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096530036 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09181595 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100703448 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072324524 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074014966 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086946266 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073818343 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087102103 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06718261 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054482783 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099116049 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072238363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071691089 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097190149 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065457938 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087350431 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069106515 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072331879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087010594 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078408322 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093197902 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073678604 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075091416 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097726449 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067107687 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086859601 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073643315 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065614709 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094322061 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07311077 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070680323 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092416904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073602918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101517516 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091724412 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089823761 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074573136 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098231921 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0771739 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072181885 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091658172 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074292414 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092853808 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091665477 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095608012 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068254115 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073336465 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096282968 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071431624 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095370488 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073958194 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075740408 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098994815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071033271 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096777906 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071359017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065767392 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095734989 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06885233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065035514 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098908552 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076242196 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086407395 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071681484 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072699711 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093084541 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065139108 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088395251 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067757145 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072262773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089535089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055576854 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069251099 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093200959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065010176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07458743 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093892537 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072660159 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088720407 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077400957 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06567661 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092686461 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065882215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066131484 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089183432 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070255479 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065460149 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090400976 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074879599 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088848656 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071620577 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079792925 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087783875 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072185172 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086623677 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06525163 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082211774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098073135 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065992215 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089850699 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065185096 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073343965 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08700409 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066282246 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065478075 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088591972 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071238394 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065304527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090240382 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073255787 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100859613 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066173698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069623428 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089927438 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066631697 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070483554 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088242365 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066649091 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088914734 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063333882 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067678108 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088043121 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072875038 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067676279 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096073044 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068253659 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095659074 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070906669 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07178079 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092775724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065009398 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058798769 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090357261 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067887759 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067382026 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08793936 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067418851 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065722792 seconds)
done (took 13.09390088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066435185 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16736511 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124669251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095265563 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109979338 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06656378 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099641512 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102705064 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090913907 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125740884 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087435465 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107045232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113663545 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08791655 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066194086 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070166838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090294499 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088736422 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12436271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108920904 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116612016 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088538894 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119230963 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089806484 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111630876 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102960285 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08949063 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070901969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.091078268 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093297268 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107782647 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069611351 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066684448 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121386398 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117724392 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085087299 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088343781 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083989875 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087801131 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066485854 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113640827 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099863147 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103954908 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08204266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095382311 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068771169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09020087 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085869527 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113717949 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080563587 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11001844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132861003 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068754285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104215378 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065343276 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109478287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103977833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068949055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067005591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090677159 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065904237 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06945055 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110209238 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114951101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070449589 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104764753 seconds)
  done (took 7.215177138 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08458796 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115646324 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084529134 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106307237 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066272605 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067103797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089255659 seconds)
  done (took 1.584595812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067664386 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08814461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111736655 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089371226 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108711091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086780385 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099303849 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066731705 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106886851 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06877534 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087147016 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127499506 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068067236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096880727 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090426073 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090346393 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090482036 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089981564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070406047 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11335082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070055712 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109220716 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069128498 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067367061 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103603275 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067754324 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137805577 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071264967 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090485416 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070947749 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065603469 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.13986021 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103320382 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077610332 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066733091 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104245351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081600455 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087534454 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084256209 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094234784 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081850822 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067930817 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091310329 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065849779 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071246875 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100561458 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068442953 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090569222 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070743417 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087048853 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091377611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080898225 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089569669 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071347669 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068647296 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095314556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077266856 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089780396 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08809528 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06855 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106822354 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083802896 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104402529 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083379124 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09253644 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081703841 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103897249 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070270782 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06903903 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093346603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08381968 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087696152 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069112818 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078146172 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091354241 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090219736 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112700514 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068941682 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100250054 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067888081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068043465 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090880736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09063624 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093581239 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068328982 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071304438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093143085 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0657313 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066034663 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094048812 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065379474 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090790479 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070627617 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067349921 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092123691 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084151258 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067663276 seconds)
  done (took 9.251589084 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068672655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069198467 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092164274 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068078946 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067969655 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0911555 seconds)
  done (took 1.443667583 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098323982 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092521193 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082021176 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095128656 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106661614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104758667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083295541 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105678484 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084975438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102434146 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081967154 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106185684 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088300676 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096550958 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081855874 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094805147 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083153502 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09976651 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078733623 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096260593 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08806935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095677667 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074133028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083120294 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093775904 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072871801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100262226 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079423082 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102053873 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083058014 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095625561 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070804402 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095131758 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08281477 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104380551 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072216253 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094673779 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071626318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099383875 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071151564 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105347497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073856286 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078029501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094552816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104885182 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072686202 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072032096 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100099962 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081792441 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094326307 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072264454 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095070453 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070404425 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094424601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071986941 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104984748 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072838298 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104177542 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073246769 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072790247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093191798 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071257055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10541228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070525192 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103199541 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071460254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094610776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074045928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096233269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073156631 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071535521 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092643484 seconds)
  done (took 7.304123141 seconds)
done (took 27.766005114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.64815077 seconds)
  done (took 1.629445127 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.758872227 seconds)
  done (took 1.744048819 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.651800198 seconds)
  done (took 15.638445927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608834004 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.756828142 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805092544 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134500377 seconds)
  done (took 3.288591566 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88441794 seconds)
  done (took 1.892486703 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233065873 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222659839 seconds)
  done (took 1.446172432 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72923283 seconds)
  done (took 1.726438184 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.277311063 seconds)
  done (took 2.2659207 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318174051 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179558682 seconds)
  done (took 1.495777522 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.513764328 seconds)
  done (took 1.51152114 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.548491715 seconds)
  done (took 7.549028707 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228868043 seconds)
  done (took 1.237721509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268170492 seconds)
  done (took 1.267194667 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.119996644 seconds)
  done (took 4.122346576 seconds)
done (took 47.803667841 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077999574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081026477 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104023071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078036881 seconds)
  done (took 1.338829941 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077183694 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073405583 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099546634 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07291505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100553273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07308824 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097880269 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077734803 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072130691 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096853553 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0729804 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095381562 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075631621 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097142832 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070569761 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076175143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098773058 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073239773 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099612621 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073845356 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07066606 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097494009 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076488819 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094570689 seconds)
  done (took 3.023895812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077645456 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073147841 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097135817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073049389 seconds)
  done (took 1.329125316 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077514806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115297773 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090271787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076618097 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115923743 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109677468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069312778 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069509161 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094268137 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077572472 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09085596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098269641 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111072924 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076896381 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101854043 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066301509 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06875023 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109835834 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077519848 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100721745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069877993 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079658722 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091225604 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090754216 seconds)
  done (took 3.144124008 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077428929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127655753 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078153591 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113692217 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091068784 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08919331 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075006855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114802812 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123992104 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089716903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070479135 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066620772 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096690482 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065469351 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076118201 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133251281 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135513047 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06914105 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120541423 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066233981 seconds)
  done (took 2.8975657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074442171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070173438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088634068 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068711641 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076776683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096345205 seconds)
  done (took 1.493841352 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068111874 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067364208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090407495 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067155914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072487666 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090961377 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066053845 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06723417 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090836173 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067738074 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066981504 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089846961 seconds)
  done (took 1.919293728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421112278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069143864 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093028943 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065518029 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071403146 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09050142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080337958 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067869456 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114262777 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067180307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090835819 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068265204 seconds)
  done (took 2.317082748 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257646261 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077032541 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321113971 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166624031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139709765 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154588247 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105466318 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139645585 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197208651 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137508444 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226229433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198184122 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132709473 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167501562 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115011003 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132203106 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185243763 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220602563 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129134976 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19979886 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204630241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155456915 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179598755 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12819603 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134016702 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150347846 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095396675 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081497404 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230651666 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161105755 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199576765 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137236278 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121145932 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20502911 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225328238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193407506 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163306298 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083994735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15720862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162289624 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255019554 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113894165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193694814 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133455985 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104773709 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171839696 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145513687 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1471287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137521815 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113780201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172240525 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238266218 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164727881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111071497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136917848 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140312093 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143773944 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129037116 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243186782 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191289797 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180639046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071157942 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124464913 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185118481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158872193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140603854 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152568628 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118994425 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192471547 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185319118 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144991598 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199302739 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.154061192 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11351056 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146841537 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17048786 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155435588 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226847412 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153728005 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072906951 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151616241 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129122122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106104668 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142781728 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100094517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232875175 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099410577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138207849 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140066057 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135595721 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135059296 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194052155 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200488546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128264058 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066277777 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130691226 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149410024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1745934 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112495424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134363423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146247047 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104402309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166272517 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075642772 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151711874 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103795883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151555855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161358971 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101640036 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155424242 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102249686 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127691123 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162502205 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217772153 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115652573 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082526256 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225238749 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155044333 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131914601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173766214 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213790254 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101664028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128063604 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204851592 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240524918 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08969253 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221464063 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134484073 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108782283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088018046 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153932449 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13890054 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148492279 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107455961 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1532933 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225090502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074811157 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120513108 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164318025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106480847 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081514633 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138523134 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126542651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120267385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101534437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133153142 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194018522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153763322 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134083178 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152690068 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124276868 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199287018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114224372 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12945432 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129721958 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070143787 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16466896 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215573101 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080154505 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223591623 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153674898 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130710924 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146640745 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107965323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169326663 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079199252 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095472965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172640278 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137364173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136197609 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183870254 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130488667 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153043432 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150552843 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185126039 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160058107 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161056008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131928985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088038388 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138594463 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152903749 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098023322 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119246057 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082921518 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130355937 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122059286 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08387101 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197542245 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15495488 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126980311 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139707993 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098269059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203815742 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077682273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158514204 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146125529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120184668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210359536 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186309485 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188765755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101468786 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200907657 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071531985 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099150532 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091293497 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180445776 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084163238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110063022 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145318409 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178411466 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156284562 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191998498 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113197651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14855317 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211874255 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071739558 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142114751 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177713873 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177948607 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.132854605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111702416 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100346008 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201024456 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135426332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244392065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143461123 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154044222 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180910328 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129199183 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106065444 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107185677 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191018512 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132755957 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18078942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125554177 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114475375 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136453871 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082203375 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130437348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155286549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147976271 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187542582 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143924963 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160705674 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076920602 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168466401 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15150411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149851815 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064991554 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14706641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219812485 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120935535 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150253966 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184259273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105549372 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153962545 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236385215 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174734937 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110993712 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136559994 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149326075 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157502471 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146695597 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16848088 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138682089 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163626604 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137036456 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111426437 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087962875 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124513877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133100446 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096348546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163339222 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144656232 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09516375 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158756969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138322133 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136956451 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146658473 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124070633 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091843043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123568662 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234835902 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150593799 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234087554 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127567216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178435293 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227549611 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075888203 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105150701 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08142414 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194498957 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084470532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162492716 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12382619 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13292303 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154495145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172458202 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121673569 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069386876 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135988584 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189578935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113088842 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12507849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132946156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222884534 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104390302 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106861024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153100657 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131957562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103864248 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234361022 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087574876 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099175271 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101285517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081440749 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157286531 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211855265 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108731724 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130978654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142381936 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147414073 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183553285 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103045419 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125826849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141725223 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20566555 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157734995 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091287104 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13945931 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183753007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18770071 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13305704 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122641729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230358337 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186826359 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222145505 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090114131 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142856742 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14226247 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135932854 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195695353 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084866496 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226501541 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110026487 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167817494 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134570978 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12097205 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159354768 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126058661 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090083661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204938596 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147862057 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099820618 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105578648 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146629535 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150999038 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135260098 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101466057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169316494 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073434904 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193097691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203355148 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108518555 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133482519 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097699246 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108413986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13704417 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130191779 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086846493 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142935382 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228881299 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11744596 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180577517 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196892294 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142982513 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169223752 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126623937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663082469 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078346864 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211905568 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147837606 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237620519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124534118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147406458 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13844069 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151437469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174509574 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132459669 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203260455 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162538337 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147666184 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105349847 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129285315 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112339258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117255068 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134089334 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142316633 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14462629 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127596399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149601 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15463137 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10880108 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096167505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216418168 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145348201 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173042954 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196338477 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085207441 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147159447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196927475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080758898 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150522957 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212684552 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136130512 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125364042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082798344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132999133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232486441 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073209086 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220730581 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151975246 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137985398 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141839389 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147080157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188261724 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135326254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154791941 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122388266 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139684218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143133456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085316722 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104678362 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132211753 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1388589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100873401 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129411029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142367073 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186015222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071110726 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122598146 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130901759 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173648542 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237403424 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115758414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082535995 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147067853 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139428356 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143256025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179348525 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082509295 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109739706 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082785022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13808159 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137138466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142563085 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105937521 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138289287 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225574471 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110775387 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225860369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122503282 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133350411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069767801 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106199046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122257141 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099017613 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135638273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128249694 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231580193 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097965767 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118164759 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119129406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07396297 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109232943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157891214 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138531594 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150348441 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124861782 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063562194 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136415931 seconds)
  done (took 71.017526935 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131224566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103587035 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11705163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171678181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145256938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236874739 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180041746 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222154139 seconds)
  done (took 2.399012401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069282083 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116100877 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101399192 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115294328 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089092829 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068621784 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292168423 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108929136 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066730177 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113185393 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118039906 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090847729 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468161265 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065282993 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093056527 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083565488 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067611971 seconds)
  done (took 3.21086733 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426921951 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.629468381 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448114338 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072730487 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.86704135 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105651671 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.32472311 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162144154 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090774645 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429732121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724284569 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.146984875 seconds)
  done (took 17.523308405 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074690601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068294101 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10863752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082776938 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.0975737 seconds)
  done (took 1.528226136 seconds)
done (took 114.139794284 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078770182 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341605251 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05337994 seconds)
  done (took 1.52270215 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082785121 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083915291 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109778206 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082783697 seconds)
  done (took 1.464536778 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074278038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075744779 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10981793 seconds)
  done (took 1.362790544 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275476378 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164575384 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086978825 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081920134 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077134269 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103966161 seconds)
  done (took 1.36787336 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072009356 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074287451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098464006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075790358 seconds)
  done (took 1.41972846 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076109743 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051990025 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054829854 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080800169 seconds)
  done (took 1.368479699 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089379894 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105157856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080367043 seconds)
  done (took 1.375689816 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10670149 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111743843 seconds)
  done (took 1.323462328 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081205516 seconds)
  done (took 1.181008622 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094144482 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137675115 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153893878 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136674373 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164515221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135915096 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112389857 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087277516 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103586146 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114850445 seconds)
  done (took 2.345458285 seconds)
done (took 16.43013662 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077205425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386870172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360376231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116118778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667309182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356406587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041369058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118508934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119834846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094002137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082987756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673642809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.966328197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344491176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954133022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321291391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673769497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067550937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092490371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067988362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.000360222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093073434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067544761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068130437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673845871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370654349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094314772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320776292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067854045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095697026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354210204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09398934 seconds)
  done (took 15.977215765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069727561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143059462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073644083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083253288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096276973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069833189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097899089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068727129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152426729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067480229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111259048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067909463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097912646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0689212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086495519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094562112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06865194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068544317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094234998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068889079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1116891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067399035 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0684612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094613975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067553669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105563995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068509776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067888625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093771028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070126334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096490212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06831537 seconds)
  done (took 3.834743303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113519676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151899322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073675869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128485226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112285934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096095637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1694474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093324941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153524879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067425132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110760032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067178885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126650791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068199404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112677746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068122153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06856564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093992582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06822243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094622227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086139923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092886754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068214295 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068544528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09436823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081455286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094075406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06844239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068361474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096487424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071306437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09422077 seconds)
  done (took 4.136084675 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072086812 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074799538 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107984685 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082937481 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095725276 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072028763 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07262635 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095334837 seconds)
  done (took 1.782118545 seconds)
done (took 26.829241778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078276433 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069072263 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099112665 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08010537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098729511 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078794385 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066771817 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100715254 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076677419 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072378616 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10212147 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067374123 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096593628 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0677458 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074350114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093606545 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0792898 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097842637 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079021765 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078687228 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09618962 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07700784 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100248842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07899519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105360783 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079091785 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081897696 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099228829 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069293849 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096134933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076514142 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082971929 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09507258 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079741701 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094277438 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067479554 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06724011 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094082571 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078845352 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099989054 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06968272 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099787484 seconds)
  done (took 4.651147115 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087912441 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090920496 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110762694 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065028112 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09627606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064768131 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114512344 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063486734 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058923162 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114207497 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055449227 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059247474 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089548487 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054142551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059061942 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056372287 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087622157 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056067492 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059534927 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085595161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057989302 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053841765 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086469576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062716322 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056162631 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087610345 seconds)
  done (took 3.048609749 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075398403 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083226209 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113424372 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127418177 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131096901 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077250203 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104742048 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08771316 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112227563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067278892 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07107525 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121605078 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087736045 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10083227 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067960183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113632668 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081576123 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069061578 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100502965 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08971768 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111211512 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077954309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118719396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081285921 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066695405 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096410948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071569575 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107989578 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073115368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076643598 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09829099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071050222 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096411049 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078894016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071811033 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095947963 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089844682 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103832742 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077994455 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068429755 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098078583 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068307023 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114954785 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111306263 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09392656 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074235623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07529046 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10291061 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067822556 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112128654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076739365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066847714 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096859577 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066431916 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093980692 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081395927 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068870498 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096165473 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076673425 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096990843 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080090822 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070644433 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109594813 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068145999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101297821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067201936 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067757492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093142645 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089892386 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067858766 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134336299 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068462846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095720716 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075696037 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102086013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07331879 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067887745 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109123016 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076527816 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098227697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077089538 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071129063 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096916479 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08773693 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095960875 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069629357 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06898204 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100712314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069928883 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095775407 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080934348 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067528884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097528272 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084386815 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094604836 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069038038 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074255553 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099467204 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076200007 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106283294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073094923 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095155051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077632523 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06717186 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098143469 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077947361 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099117042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066889982 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071992833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100661447 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067959016 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068136941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097855076 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069054342 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103397838 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073923536 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071833873 seconds)
  done (took 11.258488533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190033508 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183601233 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070385129 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176891609 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075922604 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10733926 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177956232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096176478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096016138 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067780302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069288834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129935663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12433612 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105867365 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106237372 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067265218 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113689657 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104077483 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180074561 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174389876 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114838494 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076364908 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070132964 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097359963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070325437 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077687469 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112525499 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102533382 seconds)
  done (took 4.272331678 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081180133 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128402905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073400525 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088587625 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118474236 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068209361 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100828258 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068956641 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107478263 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078868874 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095291093 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073409122 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073457908 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10560892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068746387 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104717951 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077943017 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069162913 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098822589 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072824652 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10411744 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080295832 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071772446 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094756151 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073446357 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094485974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064589251 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112392702 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067894632 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116920221 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065943498 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072849035 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109018541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068449269 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094630584 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071135017 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070676609 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098817405 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069410148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06617068 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094318863 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057328351 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066900511 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107747021 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073746546 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087081282 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07355389 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073081466 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100451493 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065605595 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098446415 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071032406 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07018536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104215646 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072829746 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072795204 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100032546 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065911871 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102852373 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071440397 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063868408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094110007 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072192436 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066544264 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103447686 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072346986 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094150425 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07102465 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072613281 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102096902 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071362954 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070626228 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093001129 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070043363 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100069957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072629514 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071958275 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094532514 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067754242 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068314134 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08293767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068242232 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053950987 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098574956 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065616825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066463538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098009765 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073307105 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108653218 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068874128 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10134271 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068672733 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066649002 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098481839 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063228985 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069874134 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110954995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110828232 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067754781 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065611766 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109635759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071924707 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06655811 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084315072 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075154764 seconds)
  done (took 9.795554935 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095291277 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091690674 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097674917 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081941545 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123344736 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092744825 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10289887 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074314926 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070015943 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113021239 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068005975 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104394795 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06893386 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075954512 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123737592 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075147946 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097650517 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07668643 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072115804 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135792494 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082117328 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108878975 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080136965 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096358423 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072714741 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0798395 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123581006 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079110042 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106335916 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084414636 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080068894 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122967931 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085489896 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099852374 seconds)
  done (took 4.289490176 seconds)
done (took 38.424155087 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199578705 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.397375314 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.1862201 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073220459 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.208905844 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21336264 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215366309 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195725339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.233433235 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189488394 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446330072 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.779763619 seconds)
done (took 58.474800098 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.19656992 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32994648 seconds)
    (2/2) benchmarking "String"...
    done (took 1.458544784 seconds)
  done (took 3.922440629 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.534959873 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.056207563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445460592 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188243907 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.190165189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490907175 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.780159896 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.004762857 seconds)
  done (took 27.289315573 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.188829127 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.568481932 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.602610758 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.595449927 seconds)
  done (took 18.090205592 seconds)
done (took 59.167324912 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.17433476 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.237870028 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229364913 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174222072 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312475628 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.222857882 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.432278275 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.434964806 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.189710372 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180926255 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.191463766 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.195094939 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203162136 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.44143289 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196713629 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201874652 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.271423796 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.684260338 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.564785028 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197046403 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192523953 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.190655984 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208546999 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19259518 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234611867 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190212145 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199216745 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.21501439 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.373865487 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192551465 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.281856584 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.624261705 seconds)
  done (took 190.966163674 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190237578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.178052128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.273229321 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.215878776 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.620769294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39414015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330180742 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.681089188 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208761102 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203297748 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.466952687 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191435063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533579358 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.156964774 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.201073749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.295546662 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.468021104 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.522596983 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207497319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.463986921 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202473508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.383143456 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.291524982 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.416099225 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.235985519 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.220272433 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.196539145 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.192761968 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.385333978 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.386557824 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.205145299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.217592304 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.760158818 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054384227 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.202562471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217711422 seconds)
  done (took 149.506081274 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.454525687 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1923489 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192828721 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193954622 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221799487 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.1930623 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717648739 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720426812 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.697823714 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.716734317 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253814638 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.382893823 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192998952 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193266008 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284741637 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204640707 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194442011 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207736442 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.219193646 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197143501 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193153652 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720795703 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209347393 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.284582729 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199662829 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194022122 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223143664 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586318957 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194050821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223491934 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509946231 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236623217 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194101778 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485444673 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.123650647 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300982135 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195346581 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223492259 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194100681 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461804982 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194991174 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194757256 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.197466745 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764493746 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19845243 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719187191 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198159298 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.064362652 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195437794 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195460554 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.378499196 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.655189039 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200372937 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196293465 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19797803 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195318079 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19578547 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225072885 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.52137718 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292916264 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196221991 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198970018 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225846217 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195924048 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.257402483 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196343148 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.680821183 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257080444 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420411227 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722229027 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199730807 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287933386 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314205704 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197109402 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196278792 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195313695 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196061597 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302096441 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196378697 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.582995902 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202315096 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197452032 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255794901 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289067117 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196756987 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495256758 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20143799 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196453542 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.196858248 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885431273 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288105347 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19653515 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.195860529 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196891873 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19708324 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.583110047 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726094726 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.373861701 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199744712 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.618750908 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200074765 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.598380356 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.703558194 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.75959687 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198294603 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304118864 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201789032 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197485825 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198831584 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197349908 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22643496 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198704322 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256684571 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197841073 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593751942 seconds)
  done (took 344.001028667 seconds)
done (took 687.063645039 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.854079138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.83769283 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.949835771 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837812961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.81987376 seconds)
  done (took 10.442354904 seconds)
done (took 11.585413613 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.375054061 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375390783 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255424054 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376449291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226006986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392730171 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356705674 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220186433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296311065 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272878112 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297072749 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24759079 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22561599 seconds)
  done (took 18.060442079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498116361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.492349041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263416141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494881945 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239549433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501602943 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389302079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393933761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38801611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213116112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213250734 seconds)
  done (took 16.231507649 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501083838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502490981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265944287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499925439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241236499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.508794823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387982961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396355057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384703621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213473045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21278849 seconds)
  done (took 16.258514358 seconds)
done (took 51.693656343 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208692503 seconds)
  done (took 2.352057118 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24170632 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407974748 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22059185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212094779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209382875 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210434662 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213160206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209028664 seconds)
  done (took 11.06991191 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208287684 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.205577253 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208647473 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20891133 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20831245 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205126634 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209462788 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206032227 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206658883 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206560553 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209446145 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206176832 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208820692 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208579791 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205901403 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206699814 seconds)
  done (took 20.464365461 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208546726 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205915107 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207512908 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206986468 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20611047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207252986 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208505765 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206856391 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207137411 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206948047 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207698164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206850273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207145846 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206625192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207375243 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208593303 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207536219 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207493692 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212203214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2081524 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208453344 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207022997 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208207418 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208666734 seconds)
  done (took 30.131671965 seconds)
done (took 65.161755408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.227022118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.817898744 seconds)
  done (took 9.19128016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209437588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.20969056 seconds)
  done (took 3.566426578 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210532071 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210742296 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210896818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210883516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211041762 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211117289 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210697207 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211378922 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212381351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214205272 seconds)
  done (took 13.259915862 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210157821 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210737188 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207866558 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210249359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211032069 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208048752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211270385 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210748904 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210789621 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208370548 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211418257 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208751557 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211522518 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208469591 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210928959 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208966836 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208419628 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208628592 seconds)
  done (took 22.924508246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210934969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211551062 seconds)
  done (took 3.570296249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209179956 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209239143 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209269235 seconds)
    (4/7) benchmarking "year"...
    done (took 1.20930827 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209654176 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20931384 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209588859 seconds)
  done (took 9.613803103 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211387749 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386545407 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.470406052 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.770459369 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.2143561 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216980516 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.042866618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215101442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217610621 seconds)
  done (took 13.89440389 seconds)
done (took 77.16757768 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.187606188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205686745 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030262604 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217334061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225640609 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50499843 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.208648705 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328314273 seconds)
done (took 37.058302063 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.211077111 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.92936999 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.935407821 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.20927443 seconds)
  done (took 11.223339216 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.19495754 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.12110949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.195417034 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.202042952 seconds)
  done (took 17.863667489 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.803992632 seconds)
    (2/2) benchmarking "read"...
    done (took 1.536903618 seconds)
  done (took 4.490062106 seconds)
done (took 40.937257663 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213066773 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21463629 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.212260658 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214780918 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.211943557 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211919553 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214649126 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213806019 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21472269 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.214048289 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.21405904 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214501124 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21234469 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212108361 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214551084 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212481676 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211627878 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211584593 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212339249 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211439931 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216004006 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214350919 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211854369 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212225714 seconds)
  done (took 30.268166049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214721867 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21250186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215308777 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215146662 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213135741 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216304463 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.214700451 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212560336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21551945 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215150044 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213266872 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213149321 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215437757 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213798752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216406362 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212578238 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215834449 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212869962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216332436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21331045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214929653 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213084449 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213109283 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216052342 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213834927 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21310911 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214829935 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214795678 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215539996 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213554002 seconds)
  done (took 37.583235098 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22080944 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223232469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217063613 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215657087 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216150217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216768194 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215725423 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21657372 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216401201 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217114313 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216780631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216393449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216307914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216082897 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216242233 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216792458 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216949613 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216792 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217043929 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217146631 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216396537 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216507646 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216212374 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21689029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21673814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217892404 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217462447 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217025922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217746713 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217291327 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.217211402 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218089452 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21737908 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217411889 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217926333 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218129526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.222585755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225648714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217594697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218053042 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217838525 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218067923 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217847996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218380398 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218611355 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218757978 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218466663 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218679918 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218702776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218335326 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219199194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218926485 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219187392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218102127 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219031723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218240896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218933249 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219123948 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.219130248 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219283841 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219217152 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219385688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219572566 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219191883 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219816232 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219813173 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219320262 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219939211 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219638432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220082879 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219099295 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219464632 seconds)
  done (took 88.86424932 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218109007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217615804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217127657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217292421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217915514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219899685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217163148 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219461183 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216931314 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219790081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219410169 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218471064 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217729393 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220524109 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220576406 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.21703362 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219751306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217819622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220670469 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220831123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220357319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218256689 seconds)
  done (took 27.968203434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220323287 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220517367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217896771 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220673224 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218195827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220471358 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2213353 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220405006 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22068879 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218499662 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218034375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221277559 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217944614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219153047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218970229 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218959421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221793344 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219092054 seconds)
  done (took 23.112017079 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219650664 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218503552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222117757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218182596 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219348789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222587279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220039334 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222778599 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222650989 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219217121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221857604 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221560304 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.223055868 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219470233 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222142296 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219740534 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221999869 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221308963 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223295353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220767404 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220014114 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222891301 seconds)
  done (took 28.020938647 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223128297 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222979796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221155099 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220338074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219297044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221675784 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223179247 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220677264 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223029969 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223515881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221058046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223297447 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219944454 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22109486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22107008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221037691 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223384968 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220771227 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22284526 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220568065 seconds)
  done (took 25.592492156 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224127278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224519763 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224729134 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224969864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224491905 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223549052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224519603 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225149268 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225180826 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224375074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224385039 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22709321 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224627832 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225568838 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2245015 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225308877 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224566576 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226532884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225413013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224488577 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226142322 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224937298 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225905627 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226030938 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2256756 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225965546 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225907982 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22563186 seconds)
  done (took 35.463136366 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224478816 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225130542 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222462389 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222136859 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222935598 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222897097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222296456 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22278807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226696456 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222845624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225746238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225855586 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226635448 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225760248 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226296315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226196801 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226211499 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224904759 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224331002 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224461822 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225861866 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226771333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22606357 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223956231 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225034057 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225754251 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223663138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224681087 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226882506 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22356115 seconds)
  done (took 37.905427831 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245712296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244956658 seconds)
  done (took 3.653658481 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224731596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226351964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22597417 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22475233 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224422164 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227250012 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22718455 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224123517 seconds)
  done (took 10.967431767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227900626 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226913 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227437281 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227896636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227482877 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229903864 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236710459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.242848036 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230673782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228259078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234481995 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235417798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233308527 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228133896 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229545337 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231135765 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228609994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22877436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.22878324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227906877 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228619492 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232312918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232149022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225655548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229800817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242669964 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23714085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228575086 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230827631 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236199192 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.230625384 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225143743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230414514 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229428647 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229263679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229657529 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241931874 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2458989 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238095497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229708007 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22983414 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22662742 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232549715 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233098049 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232128879 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230627548 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229883196 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227818562 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230179635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233237005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234986039 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231070578 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227061922 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238450107 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232686328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239669152 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246572017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234698947 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23894103 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243864871 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247457988 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238775513 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234095718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232231004 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241933286 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.255142234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240718736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245697113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.22843243 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2311012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241814061 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2471231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.241995543 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231926348 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231363337 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.231856632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233529605 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231411941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242183889 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252058814 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232219994 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231884558 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24231654 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254110484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231535667 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231932327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232119759 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232087643 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234517547 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244364705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248724078 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23213085 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233441772 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233644816 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2366161 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231596884 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.232337787 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235599971 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229869139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233812371 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23310117 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237674674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242232006 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23351391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233679361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242580476 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.234301701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233298291 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24527875 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233954743 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234392205 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234978569 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242847232 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231261655 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236932457 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242414366 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.23391681 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236733234 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234841818 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234142804 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244569956 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.261020002 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234059417 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.233806764 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239010511 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245491378 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234141358 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240048832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23451753 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232098561 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233025369 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237990433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233982761 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237670991 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235405195 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237307492 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.232567376 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235513353 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235861203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238113287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238327267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.236440567 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237286449 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.240169177 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237121783 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239142367 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245525357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.237520273 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239388302 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237365604 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.234018972 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236758741 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238694659 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236792663 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238837478 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236564566 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236377934 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235862124 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236350303 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236509973 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235982619 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237789553 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239856329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236768991 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243196212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237054763 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.23445441 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236371987 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236752139 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238418603 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236887481 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236321949 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24034361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24399424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237127959 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237186462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.242333355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237318543 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237022914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23726401 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24045592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245516176 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238294626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247609213 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238383241 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237955698 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237711156 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.239439461 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237860238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237974652 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24119947 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244838672 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254137738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248567881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.239264541 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241681821 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240691675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241721034 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245397804 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238470975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238152384 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238359503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238979612 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238881415 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.24148544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238531957 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239391758 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238650145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238978403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240525268 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238953675 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.240953723 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241859372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235882692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238422366 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238554957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238924933 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236925312 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238784181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.240289505 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239354669 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.240365963 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250870299 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237592111 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242955759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242049943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240538599 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239270112 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239559699 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244179771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24113487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250797222 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257747308 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242275649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24853161 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257722879 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240925206 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244360223 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240604072 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238152417 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244697997 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247596269 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240081977 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241163772 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.241330868 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241485778 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239842781 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25105307 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.239052488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241274795 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240702814 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245229913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238550709 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243937817 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243351412 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242866834 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244756873 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241296795 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242065013 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244908171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241357429 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241648363 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241356186 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244893445 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24854194 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24870941 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.243783422 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247390816 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243762756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244993953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244940552 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243082265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242479613 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257326557 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249598338 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251425392 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246643166 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.242283248 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251083016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.244465057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247891178 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242414723 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244313073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243646611 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24295192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240088582 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245468983 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.241829071 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244128936 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245304479 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246442469 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243407575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243455049 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243969384 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242813305 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.243581182 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244747071 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243508441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249589816 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246362045 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244725383 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244267049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253158071 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26071544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246823875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244060239 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245170643 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243635708 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246537312 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.244330921 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248210286 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251643845 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24790236 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255167976 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246582654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256094915 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244755316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.2484372 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251836328 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.242423998 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244727056 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246358057 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245362634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25486777 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261847038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247293072 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249416322 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245371375 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24551963 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244640566 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.245407601 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244905964 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24644365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257596679 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263028911 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250491494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248710295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241731925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.246620414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246161558 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244830346 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252877613 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246287113 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247907488 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246593563 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247509724 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24589805 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2465923 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245994312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243458475 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247083709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256234316 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264176187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250189417 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24671839 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.25965491 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247211801 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256548371 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263217436 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247472333 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246748439 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246558918 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250365014 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248621586 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250807915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.248060109 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249299238 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250317787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24806873 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251733434 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249142078 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248866763 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248199665 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258358556 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271110299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249661156 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25130283 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244789241 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250108497 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252278169 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249125611 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247790502 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251478121 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258426997 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256225472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250062877 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24846865 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250957185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248272666 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248671724 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249048983 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249200395 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248096263 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252826639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249791558 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256172711 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248052062 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250997981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252924578 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250879522 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26136484 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.250019974 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.252229914 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250307613 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249209015 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25129439 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250185638 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.250200223 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252327679 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249664873 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251084504 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257692823 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.255741535 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253954146 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249878367 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249930963 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251696965 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252331218 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250422043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250173612 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251104505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252476685 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251048176 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253060146 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249359223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250295404 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.251259552 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250173528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254249919 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256935444 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251893422 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248148252 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250987484 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250739475 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250511963 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252352429 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263779865 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255493557 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261200774 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259365959 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254837444 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253156199 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254153012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260233906 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251596046 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253937438 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.25152385 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255175504 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.251850519 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255911392 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252857402 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261642624 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252755025 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252271781 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262696576 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27067642 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2518272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254917234 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257997047 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254119308 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250241404 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252244098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253818056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261346097 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273178501 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253408626 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255362158 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250495209 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255313565 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256878873 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252819755 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255901127 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250254483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254323697 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253342425 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253856357 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250558222 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255571891 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254440277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25724294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260521839 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250485258 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257677486 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255938465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255237878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254716762 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253841533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251379203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250963378 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25460504 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254234786 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256062815 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257987285 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254921962 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255647789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255211879 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255260331 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257597592 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264441151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261849236 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252378467 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254329076 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256348031 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25935606 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255640654 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.255253623 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256086538 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258828695 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255081216 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256077904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254610219 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259720285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273313063 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271240948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256133466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.255739363 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261975809 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255790304 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252835136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255333971 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260886031 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259563759 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.263471372 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256906073 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264883599 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273228225 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257907782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259166858 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259829298 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264394096 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260320948 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255664767 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.255612618 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262151262 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274547008 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25619898 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267989401 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288132489 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274704704 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258583649 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256160788 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256276829 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.256648694 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260612336 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256379992 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258554142 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25723026 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257332995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25945986 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264308097 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259988193 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25651827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256937611 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25879996 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261762251 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254935199 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.25762131 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25759354 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.257960139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258430665 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258739895 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259188838 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273307866 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270422837 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.257832096 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259281045 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255173103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263888105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260858361 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269687294 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264434249 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257911507 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.258661874 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261011285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258682308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.2548732 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259800901 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260327532 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25973891 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255252426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27519025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267265706 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266480399 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260233021 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259091325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259520392 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262307282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25904959 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259545936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262679142 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260334751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263591213 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259502873 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.25916058 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262706022 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266337294 seconds)
  done (took 744.222135577 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257995041 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257437138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257758199 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257758605 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257731256 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257989574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257390226 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258818533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258114969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257784281 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258634063 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258090255 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258219814 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258560062 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258319127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257612808 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259125278 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258292676 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258794695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258696789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258643792 seconds)
  done (took 27.617418914 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.261200798 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25847153 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258450432 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260204261 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258607225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261028231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25829006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261354283 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260857547 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258505599 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261011532 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260670049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259688928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259593455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259159684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261479278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261440914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259012741 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261428342 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25943739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261465567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25888128 seconds)
  done (took 28.917940855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.262627242 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262654593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261349821 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259080305 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2618397 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.25910006 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262880997 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261524185 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262610879 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264924934 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261707643 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264764375 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269085211 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26700252 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265589941 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262291236 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406630525 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262833487 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262813232 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262661284 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260578184 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.2701937 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.260547665 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.260181709 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263044473 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263639345 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263385469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263525531 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264648674 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265222536 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268229541 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263171836 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264381438 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267214491 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264152589 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265996711 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26837552 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264718757 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.261834822 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263183376 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275198171 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.284281636 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263974347 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272850349 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263849428 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263246 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.268844988 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.272384055 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.261855363 seconds)
  done (took 63.315203538 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.26276067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263407742 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26115208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263953021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.263341755 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264161952 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.264829105 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264962524 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262327275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261662855 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265674719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262165771 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262896454 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264949238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265049077 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262973826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262624605 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263043882 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262178818 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262399108 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262841712 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266599922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265297853 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262344092 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265312479 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262886543 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263179144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.266542999 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.263811905 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262861425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266571494 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266295657 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.26662512 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264095136 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263818624 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266306035 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266076951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.263052654 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265497266 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263533186 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265963777 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266628154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266529592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266832987 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263511078 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.264423751 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264593295 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263712216 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263668785 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.265938732 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26648845 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264662029 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266204123 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.263585793 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265851525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26683556 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.263719089 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.263971329 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.266639662 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266434411 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26522202 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26844691 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26608545 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267307037 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.267089874 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.26574367 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264804755 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267154505 seconds)
  done (took 87.200255981 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268523517 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268776922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268522626 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267806439 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268129473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.266722457 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268141076 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268569392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267273607 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268214862 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267933383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268495708 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269169559 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267840686 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268580974 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26852357 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268048976 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268067801 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269319825 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268798924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26931139 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269074419 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26929914 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269059056 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269075174 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269904927 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269155366 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268670545 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270302741 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269755296 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270034643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270096231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269911181 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27003694 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269759724 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270650993 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270352517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269610655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.269438864 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269776756 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269871614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270292824 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269632596 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270270409 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269595336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270263848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26902167 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27024357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269232798 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270269348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270544015 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270456186 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269830263 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270756823 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269741609 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27071544 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270245414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271522421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271980229 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270889536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27243642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271439546 seconds)
  done (took 79.91283732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27051903 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270438865 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268314757 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.267241869 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270703171 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267750561 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272017406 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271068875 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27050181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297440618 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283619024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268475146 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268258305 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270169971 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269210244 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268858437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268501351 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268292788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271620471 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269194284 seconds)
  done (took 26.637523619 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268840734 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271879445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268636886 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268803676 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.272837091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269638731 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27215509 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272242962 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269021674 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272024551 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272610998 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272565173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269616492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26987761 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272418022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269883709 seconds)
  done (took 21.539858176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.269886889 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.273354552 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273332187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273178691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.270384219 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271212004 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273034214 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269980372 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.26954799 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272804062 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272478963 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273080095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272967875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272931711 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271089537 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.272542175 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.270431061 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271294945 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.274233822 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274107822 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271864099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27163037 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273008253 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274116839 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27137384 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.272407902 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271688939 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.27232445 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.271800383 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.274516013 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.272211354 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.272428427 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.272044554 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270516537 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274404119 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.271263927 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.274202285 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274401383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274300285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274466553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273510922 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273134612 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274153837 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.274585797 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27193851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274075531 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.272384686 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272798455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.272213559 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272553859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274733036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.275858821 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274736804 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.275534091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.275848692 seconds)
  done (took 71.214552074 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274684898 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276100358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.273162282 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275062563 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275050481 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273490847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275740193 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273535985 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272902898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27564245 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274183658 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27653368 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274471604 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276278786 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27562509 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276839203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272802636 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27419846 seconds)
  done (took 24.155744639 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274840287 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274543493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27698582 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.27362654 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274289609 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27675946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273599717 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277151574 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276275667 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.275078704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274285881 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276756003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276362295 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.277923179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27480114 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274841712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.278336016 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277059264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274043201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274976124 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278284951 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276270404 seconds)
  done (took 29.278102582 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.27712421 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.277699659 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.295958992 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.322483173 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.30848439 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.277261344 seconds)
  done (took 8.971389418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275501551 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277752751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274771665 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278812469 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277011931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275710287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276016149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275840894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278586588 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275096743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275920605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277548545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278630568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276659814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27835456 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279388593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276129313 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276310554 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277346751 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280325127 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276027847 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278904659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276362438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276573202 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276797862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276932556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278686137 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276914439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277132846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278956922 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279180492 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276912004 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279765369 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276652759 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280131096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279109005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277320388 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280254468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279330307 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277105164 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279998111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279376172 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27971638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277296878 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27965797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277276246 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276660755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278061352 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27787585 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280563958 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279877002 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278572537 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280577326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279909644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280923726 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281546505 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278728111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278202204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280471035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278986256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278499863 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281437163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279100208 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279278184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281764654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279674925 seconds)
  done (took 85.579382351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279645212 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278429992 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27872438 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280485299 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278453309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279049791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278644482 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279067563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278757788 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278309063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281439889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278594842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27871509 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278781692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279061157 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278648369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279178208 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280090476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279565368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282302258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28046082 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279616217 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28043056 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279744529 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279600003 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281051399 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280534554 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279464426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280266765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279750992 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279709458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280265485 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280229728 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279838686 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280264292 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279880355 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279517475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279579887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280945719 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282028764 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280047309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282036444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296307775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293947892 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279945845 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280099341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280755813 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279892083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279366016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278917044 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280931518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278013981 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278466217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278200976 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278232216 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276508057 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277049007 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278198822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278101325 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280290165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277715235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278037318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280914933 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278526532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277963424 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278557314 seconds)
  done (took 85.693354732 seconds)
done (took 1734.804911521 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.355669016 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.267105082 seconds)
  done (took 13.837439488 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44561557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.395385475 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.280410808 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310589722 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.278717514 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.281776938 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.284793597 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277788759 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.27710547 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.276830807 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.277473916 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.467128388 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.276879943 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.278213757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.277524144 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.370563555 seconds)
  done (took 42.273853558 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.305767325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.284879856 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.392180006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.304932309 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.306555766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.459804426 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336011096 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.283545319 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.448229947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326486185 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.778141963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306569835 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.283127477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.344422318 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.301258199 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459588705 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521651403 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.78560871 seconds)
  done (took 29.442008129 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.71453012 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.280149337 seconds)
  done (took 9.209358378 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.309321959 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.29415785 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.322412994 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.27375898 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.314915813 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.316542308 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.320809573 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.33283032 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.316950506 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.311770117 seconds)
  done (took 64.329722421 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302823831 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.283759238 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283356935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281730548 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.273842967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.286619528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282294855 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.273365677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.760888328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403829479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297750658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28975839 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.28426245 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283722758 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.27959989 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320553445 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.428198598 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279779624 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.279093514 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.289689114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.282838959 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391025096 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.322153097 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.280431554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401962058 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.776198732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.285647697 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289269844 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.404762778 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.280433544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280665401 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.282114927 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283919692 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.857949342 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.72236166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297776904 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319794064 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290889516 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282603766 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.427055934 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282196683 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288537187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.273280743 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.691994188 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432951418 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388196274 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.480984307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281858989 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.287075959 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.342616887 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28494782 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.283342974 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.310302183 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031926875 seconds)
  done (took 108.102393802 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327920451 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.761896051 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443423519 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.300266946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.896952491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95496151 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.276285261 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.547935869 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326771158 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27488154 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.548286001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.767580112 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.280474552 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.347665018 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.951331079 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353816048 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27649378 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.038204615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.277300085 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.278266103 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685294896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29042098 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.273632267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.542277808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.314154819 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726732903 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.636967587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.692701962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.275208426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.275036707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718938798 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280609908 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321004795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.272818638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.537735949 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.603624508 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.576977869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.273113712 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275427098 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.27428714 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.29243092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704774826 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.587487812 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.271037847 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.271122449 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.708031312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271930231 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.273133414 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.277830714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470490675 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.188957472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.272880425 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.603015474 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.275023957 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.528079594 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302600459 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.328858367 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.734045812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270610937 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.317862137 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.271930782 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.27354037 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.27133882 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272899932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.271016807 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588008084 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63938896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.276605146 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.589106917 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.697348576 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.2721696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.76528411 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.199413694 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30329388 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.310033414 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.28337052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.817531384 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731388415 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.279729093 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273177458 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.57958981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.276755002 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.537221172 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.284410066 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272735593 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682266839 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290084475 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.322414464 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.272140683 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.286890689 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.919277374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276620079 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.526926966 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.307943989 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.272194152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.273161463 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.273012493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273367561 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.285497433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.274583268 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.767539526 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.281332345 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.39320513 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294010556 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279680207 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.275459674 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.27410859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.274921375 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489026237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.75308854 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275979598 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275016363 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.277884213 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.283091254 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.515727884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.275777201 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.557959007 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.278515889 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273381168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.276465199 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.967591293 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305105779 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273444663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.280096315 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.114938711 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.482655043 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290360972 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.27468855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.273920392 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.287481068 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.494160478 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27516331 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.29908289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.276610953 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94957666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.277900089 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.281618561 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.850049464 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.279951054 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.109905384 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.292157264 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.276857154 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574532088 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539138148 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.568531335 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.27721995 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.27781465 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939625353 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.3108915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422662502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29395251 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.264182502 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.472783851 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.585840564 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.276424485 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.82381698 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.27663232 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484622074 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.276927585 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585121477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.736861001 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.279472179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279478401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946303307 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924858039 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.065008376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.277621969 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.539851634 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.247528732 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.722314674 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.276948658 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.277647883 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.702658611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.278252743 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.277985568 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.277516563 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.276180648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411506952 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450425907 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.478426183 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.281269131 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.713384221 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28251044 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277685966 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.281506818 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278871966 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.630431521 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346887371 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.282778865 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.30410819 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.277271855 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278067369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.726489928 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.242819705 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.281259487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43136868 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879733997 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.281024303 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.278841397 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.92563393 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.554716099 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802664744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.317949881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.564760303 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.28994439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.316259117 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.828049195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336266957 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727417905 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283884185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.281168735 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8482039 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.280871553 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.426025977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.279001097 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.279089366 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777744515 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281534495 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.27940673 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.513088777 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278804795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526621849 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.279106372 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.312730108 seconds)
  done (took 1096.638900842 seconds)
done (took 1365.04983434 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.279000691 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.279396783 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.266909328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.282988302 seconds)
  done (took 26.328460151 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.287509357 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.286105167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.286639817 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.286002881 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.287852586 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.285549242 seconds)
  done (took 8.938284658 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.321319277 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.278948104 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.282313778 seconds)
  done (took 19.103192047 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.484357328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.463577042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.624980736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.282859677 seconds)
  done (took 10.07776181 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.286489782 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.28729669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.286994184 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.288701738 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.294034332 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.290548874 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.287088297 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.288129859 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.290818046 seconds)
  done (took 12.820521623 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.913246714 seconds)
done (took 83.401416921 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.282264771 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.268071243 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.385392286 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.079779688 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.745662071 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.627416241 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.852445798 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.55538149 seconds)
    (9/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.312034305 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.460614674 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.678255003 seconds)
    (12/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.377898206 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.266690303 seconds)
    (14/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.354238363 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.859368366 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.663994849 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.526896049 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.307391447 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.74824017 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.305154363 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.322430857 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.499013605 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.311657485 seconds)
    (24/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.284221359 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.137371216 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17711102 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.413496368 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.434993261 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.282059618 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.282061425 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.484590662 seconds)
    (32/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.472627827 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.458039546 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.742650696 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.973170538 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.309795206 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.840894441 seconds)
    (38/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.474502289 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.382054649 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.814041634 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.387661025 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.526487196 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.038337238 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.804078695 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.386027414 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.346734709 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.284165756 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 5.272916817 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.686685004 seconds)
    (50/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.020385222 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.368620182 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.300021689 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.480695068 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.410149459 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.29646909 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.537522406 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.541354829 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296821818 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090883653 seconds)
    (60/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.368641046 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.085489729 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.051148346 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.991597529 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157951646 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 4.298736017 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.760738693 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.304571164 seconds)
    (68/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.054639327 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.341868022 seconds)
    (70/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.122258075 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.35987474 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.634842338 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.394784273 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.584733228 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.28648066 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.305673772 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.532427532 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.49690742 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.314163125 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.729919864 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.329846118 seconds)
    (82/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.344645794 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.634785243 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.512167985 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.269458958 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.291082667 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.544392951 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.271042663 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.623839907 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.603635518 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.433123464 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.664854797 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.650514994 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.864353135 seconds)
    (95/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.628518552 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.546984291 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.373723085 seconds)
    (98/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.775805227 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.289236978 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.11782684 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.406105097 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.305765156 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.627590456 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.384910306 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.284857934 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.290369387 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.924611434 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.59358089 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.287228828 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.890081298 seconds)
    (111/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.883163715 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.466814608 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.374030959 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.102268287 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.292600316 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.131754848 seconds)
    (117/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.293796972 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.345131464 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.769812465 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395778486 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311832683 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.285886206 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.650139553 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505913043 seconds)
    (125/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.818758483 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.705589998 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.288307002 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.308523194 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.588203584 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.291825859 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.315261086 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.272785193 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.508218363 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.315832411 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.97875648 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.308023191 seconds)
    (137/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.391226825 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.798266236 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.315038314 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.373194322 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.544461013 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306834709 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.415898057 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.583925813 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.995605777 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.292830378 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572016707 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.288434773 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.703824254 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.301062622 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.004732275 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.699769257 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.12410917 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.319250366 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.417053092 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.289266569 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.313579552 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.570917202 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.008292161 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.529366871 seconds)
    (161/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.512439673 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.015140477 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.885420521 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.32888533 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.29034412 seconds)
    (166/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.336085258 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.978537469 seconds)
    (168/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.341258124 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.503150429 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.687209349 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.308532196 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.818414126 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.419696738 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353884839 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312576672 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.607977008 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.112355911 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.293330081 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.473544883 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.895382243 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.316577798 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.090829052 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.90256698 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.121739355 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.351747121 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.589435852 seconds)
    (187/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.301045155 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.296510053 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.28130812 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.295279511 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.29133163 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.090877879 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.374595376 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.355822831 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.317750363 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.447381314 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.445958205 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.632445711 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.295449769 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983150207 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.992221648 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.317710519 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.343944673 seconds)
    (204/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.444155643 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 6.291976044 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.333525202 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563253555 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.567274791 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.353927864 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160368276 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.731180926 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505162178 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.161880515 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.774885304 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.34153527 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88763994 seconds)
    (217/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.380667215 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.840072131 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.340944829 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.00260515 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.322896791 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.349678015 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.493142972 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.857817086 seconds)
    (225/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.632173456 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.416287107 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.339468726 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.583121517 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.297999703 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.837977224 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.502796193 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.309259002 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.3934929 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.018802885 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.631230081 seconds)
    (236/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.3792969 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.316043404 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.334410704 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.071996194 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049123953 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.693304033 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.316130022 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.907737809 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.297069424 seconds)
    (245/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.322462004 seconds)
    (246/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426811304 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.530098954 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.315945007 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.680981244 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.077626618 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.298911672 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.312949705 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.342278326 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300410937 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.466293273 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319746785 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.295323227 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.292216205 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.401586107 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.654952017 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.68882973 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.503982797 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.865795876 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.281719894 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.89005193 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.321307624 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.285943324 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.296170579 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433521126 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.493452487 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.613648135 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.295284257 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.906768153 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334953416 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.35937644 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321601857 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.578690032 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.686373054 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.486776544 seconds)
    (280/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.381730494 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.292273773 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.853631093 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.589189432 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.390794378 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.287671345 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.396538345 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581060939 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.824623 seconds)
    (289/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.320494768 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.320406976 seconds)
    (291/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476860525 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.378514285 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.37895558 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.296187719 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.408194317 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.492475549 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.30608334 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.49656673 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.668043474 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.657944005 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.340550588 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.297299068 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.869451851 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.640273633 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.336213729 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.733278735 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.306051709 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.294317231 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.387853083 seconds)
  done (took 901.318917345 seconds)
done (took 902.540134771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.329037342 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32308107 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.306684994 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.329675057 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.418057347 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.339685824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.317794998 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.310177539 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.353930902 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.357673897 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.306217116 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.337167268 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.308658284 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.307957586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.307243337 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321734074 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.254344831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.311464752 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.324352046 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.317607408 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.323310604 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.30621186 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.357650731 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.338590049 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.312757641 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.311379991 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.311201174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.327735786 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.419102914 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.311148072 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.310887362 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.320304656 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261100277 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.312000922 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.305745348 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.329053499 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.319791052 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.318399626 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.313276338 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.340118658 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.609174969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.308756689 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.309415381 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.309888891 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.310507752 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.314593304 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.310622413 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.31563944 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323301982 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323231989 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.601294886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.324277871 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.312606865 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.311391643 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.321974986 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31034439 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.314258168 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325147858 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.330073143 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325574707 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.254563533 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.31755144 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.313318458 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.327267806 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.317422244 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.640841135 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.306855838 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.315070613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.612042633 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.317002912 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.64171307 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.319049379 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.312204258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324789781 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.342958928 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.256540631 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.309332965 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.311373105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.318592694 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.309040388 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.32101216 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323772547 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.317016005 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.312809011 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325398053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.343103398 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.322464178 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.31253087 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.321995173 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.332090132 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.318016734 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.322394353 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.315461177 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.308352156 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.322809718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.316502268 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.314990148 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.314831586 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.318254106 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.323398242 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.614534694 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329087669 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.309260885 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.310157506 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.31270658 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.325822332 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.615836559 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.312953699 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.335380903 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.36143722 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.31570884 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253964023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.319621144 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328480935 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.323047428 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.317403565 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.309083392 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.238445369 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.610779639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.32828008 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.315961576 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.31172366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329525176 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.316021023 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.311210779 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.24877878 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.316773593 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327449772 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.434625528 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.324980947 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344943926 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.311685678 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.318017211 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.348969491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329349477 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.345717634 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.318342671 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329415057 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.329376875 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.311821924 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.324904634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.326155693 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.317474996 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.321733632 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.309585112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3464408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326707365 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326760054 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.336445569 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.435651535 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313355832 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.238603835 seconds)
done (took 220.284785314 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.377085028 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.309832684 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.399430744 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.311961089 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.416293831 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.415007119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30965071 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.310770759 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.30996345 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.701436388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.310268663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.310175409 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.308683287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.311043572 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.403844967 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.31343386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.310774878 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.65532467 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.313889665 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.391557095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.307809961 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.311255671 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.313618054 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.697557098 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.308167059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.306979015 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.388496696 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.313851623 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.670114584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.310008324 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.307480412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.660901786 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.404168139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.330476609 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.324007413 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32133279 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.412095167 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.33387368 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.396037574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.399377634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.400120954 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.353397357 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.310293372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.311934034 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.317513124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.315952636 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.311801805 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.340903751 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.313549799 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.312627136 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.664239927 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.323916007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.313187766 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.313542342 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.312756891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.344417705 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.312136494 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.31608287 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.413270764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.31586511 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.37850098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709772414 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.693586305 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.315563406 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.30978151 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.312788097 seconds)
  done (took 147.193354399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.381401075 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.389188494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.424311646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318798013 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.366686077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.429920081 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.318775821 seconds)
  done (took 10.878688676 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.322536261 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.316095431 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369923664 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369106003 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.316290366 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.46782084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316745369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.328118696 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.313788759 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372460745 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.317480958 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316861802 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.324326498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.311449337 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368138977 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.327903049 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.431828601 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.317408508 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.317680089 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473571394 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313673289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.324037088 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.368818544 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.328040244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.31743547 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.323777597 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895126256 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318386942 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.314442217 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.31783296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314501274 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.356182173 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317508843 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.319072539 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313979086 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440937764 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.317613867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313788109 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.317426921 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.313128323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.317625692 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.31820768 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.318985452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.315466804 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.317688176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.342609991 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.318232511 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.318056338 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.31802981 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319003798 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.374188996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319664773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.316262767 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.316780356 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.378532433 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32663258 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.319428542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.316514829 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.31878791 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316397992 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.476577684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370235426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.318462675 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370946121 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319809685 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319788497 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.319619717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.319341714 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376385946 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.318189847 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372136377 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.317797834 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.509009266 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.344442256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.321709306 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.32343521 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.322950156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320816004 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.313182631 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.325885703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.31818527 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.32177014 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.326574993 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318372634 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316554777 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428257468 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435931972 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.317821071 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.333538848 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.327954157 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.318068054 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.377186437 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.320072616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.319213253 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375576856 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.435565803 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.375543834 seconds)
  done (took 151.852347276 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.326779956 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.329901628 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.322464277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.338295449 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.322317451 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.320986347 seconds)
  done (took 9.21436361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.32396476 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.321870177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.322253133 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321768322 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.321838707 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.322353553 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.322086091 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32437966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.325942716 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.321784353 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.322662205 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.322991111 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.322780209 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.323347877 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.322866286 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.321577997 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.323500315 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.320627139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.32255402 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323041655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.422511723 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.322920058 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323586896 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324234934 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.327392899 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.32361734 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.330529828 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.324006974 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.323309147 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.328625827 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32594796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323202914 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.324514237 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.329838618 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.327921901 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.324793094 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328248612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.325673326 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.322012127 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.324589102 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.325561894 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.323549681 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.323759052 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.325393429 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.32665345 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329656583 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.329328682 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332687245 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.324962133 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.325724624 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.326241203 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.325282025 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.325057177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.325415092 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.328549747 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32898434 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.330091873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325414146 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.325576995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.326634219 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.326448289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.324843484 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327538073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.329734556 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332189736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.326719091 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.326660183 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.328876789 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325904922 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.325408278 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.327347893 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.323930206 seconds)
  done (took 97.779096905 seconds)
done (took 418.163205091 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.543866903 seconds)
  done (took 7.801922457 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.318990345 seconds)
  done (took 7.578754989 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.182854397 seconds)
  done (took 20.446113895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.378326181 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.33839384 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.331473674 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.321952089 seconds)
  done (took 26.630324304 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.662924224 seconds)
  done (took 7.921083069 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.317708524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.326811078 seconds)
  done (took 13.904777608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.860211283 seconds)
  done (took 8.119866113 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.715329727 seconds)
  done (took 7.980512562 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324511061 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.331017072 seconds)
  done (took 14.181753614 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.304314959 seconds)
  done (took 7.56337035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.049467799 seconds)
  done (took 8.30953192 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.329792126 seconds)
  done (took 7.590647556 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.334261235 seconds)
  done (took 7.593431489 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.765618783 seconds)
  done (took 9.02582121 seconds)
done (took 155.906607862 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.3196489 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.319357699 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.319584079 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.31940623 seconds)
  done (took 26.538241523 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.361327183 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.360430728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.360998827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.371677334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.36453929 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.360110918 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.352427006 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.353025832 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.371778567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.363689556 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.36365281 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.362978318 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.360020111 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.353056702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.362646146 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.362228411 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.371730363 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.361146005 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.353339914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.363598872 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.327477913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.372775522 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.364567161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.328721857 seconds)
  done (took 33.889131064 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.528484078 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.399070546 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.481436823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.379432183 seconds)
  done (took 7.049161897 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.379332381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380516745 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.393871776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.433137592 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.459872366 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.390500242 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.35595308 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.349920656 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.335298988 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.382108534 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.458143119 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.398477801 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.464601253 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.329043153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509203001 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.329219993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.328608627 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.380349436 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.432719799 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.446222427 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.330006308 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.380682686 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.384899806 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.398495698 seconds)
  done (took 34.692423372 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.32804491 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.33757556 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.334510261 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.328692648 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.328549593 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.329104033 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.333699092 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.330368367 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.349671687 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.329838022 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.327831226 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.328688703 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.328116887 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.328615401 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.330154402 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.342002024 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.342317415 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.328614262 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.333379725 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.335438108 seconds)
  done (took 27.918641086 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.322839713 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.178909093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.67493841 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.579280069 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.323211345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.323959706 seconds)
  done (took 27.666493388 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.396166795 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51882033 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.33310075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.661645212 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.73682576 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.33186571 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.330712498 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550913374 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838030579 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840882378 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.385868285 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.397258294 seconds)
  done (took 19.586185091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.331948391 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.32854569 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.333875346 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343999674 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.383009707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.339741446 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.337540456 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.325379297 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.386540895 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.390906431 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338887733 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.383474683 seconds)
  done (took 37.488041938 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411788187 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371473405 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.287660551 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051922656 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.706665239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537239339 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.064991882 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.748910667 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.329752877 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600910477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201370676 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431308906 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581031435 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335961884 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329851278 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.291125443 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555829091 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800971889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3303706 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098702134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353918197 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337620068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.201502727 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.356460725 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539399941 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45697016 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.696875182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32717331 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594090311 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338721876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336913924 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326066537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601050404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975353864 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419948829 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336831343 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012195519 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046283793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.313129658 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.112816002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971694679 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331650105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337553318 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328114014 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262246774 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327749644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757822229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.334717606 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.039416203 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328916112 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338337416 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422627333 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.331748633 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144775998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333108572 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32946005 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.326049416 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335587522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902834615 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602471685 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332660354 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.267203981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43597109 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.109502515 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919231104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.431958106 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.333281053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333790391 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264842075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.178593355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351453172 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475985099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.350414622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979375011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015097532 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.2414459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274608638 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870020434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334573334 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.268199691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557704235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330643839 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266725336 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.274215403 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265249148 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018413649 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341870894 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.689649684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339041795 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.753340686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342808864 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348829199 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354219997 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554104133 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.215387782 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330018847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.979971492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489388137 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352869274 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.752941046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266348492 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.334052772 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585617818 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.542008397 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333650834 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296141635 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524078024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333812671 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.351459034 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339192219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.345083074 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.879215184 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343530687 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615797443 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351861971 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331823593 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057646275 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342747526 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.435300605 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.242708695 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581846783 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083783095 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332806314 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414051499 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340945444 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331227479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.235025641 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851381682 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332545161 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.333984731 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336163898 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.346502491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.334039003 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281209728 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.339115475 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27198746 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.337093014 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556581611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337177725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611717455 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267909739 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481476391 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423511438 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.556389982 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474994635 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.332135272 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591867683 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344952186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347853232 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34702758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351914663 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432041083 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35582695 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.346023046 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590791161 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.337610147 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.33772564 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670569783 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339326063 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341318752 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.338970626 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.158259323 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885335199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312230994 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341566558 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223512549 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348248798 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398874026 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34034587 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.345035621 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.070836927 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.146642299 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.342275507 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.331491537 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561646718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345634318 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.13350272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415839584 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.521596448 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890090364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35165474 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.268818118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.047041895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.029608638 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334479786 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270014232 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335410649 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343470474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345520723 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.560106617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88547643 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337545297 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.127383539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.343709556 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346632032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.339988261 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335336264 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.035853456 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62248361 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347595217 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348407868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47936055 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.34983721 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.270820981 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.34002566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341003931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336642489 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335126229 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369031683 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.124957975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808491417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59621015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.022137112 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349014838 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.235848901 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369166828 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.338939476 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.014540568 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353801818 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.348431517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34535945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.347970187 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.138045286 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010604988 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907914667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034937695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839723607 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261289832 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.347114539 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338838273 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770392043 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272568067 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.895244384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519068212 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765541703 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283132301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526254013 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473031628 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064316979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348287404 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56529432 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252846975 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.020502683 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365643744 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549339609 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372896313 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350089073 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268128946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.626303735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558027173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.016885157 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422461367 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762385267 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.028560044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355529033 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.338782613 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681137892 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503958068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053166158 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511117649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338344927 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296645494 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819891849 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347748575 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.565194702 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930567117 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353202782 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.531031257 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277953917 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350266689 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.35007299 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.340745568 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.53475431 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.34095415 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.592945446 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351122411 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273278477 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349575902 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841362084 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196718953 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.34606217 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339828116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065758892 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351433933 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611526619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.340950401 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.03827577 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345633925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274538045 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275724236 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.03437987 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347166774 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318207833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821474634 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.433038995 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327270083 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363710898 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187001174 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595324722 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355638471 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893046936 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567118615 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.118969849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365916273 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.441371153 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.070287226 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.34359773 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341730336 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577018756 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166562667 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.566028233 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.318095347 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.251888937 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340007547 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556534365 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341469902 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286599276 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594647347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057632775 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.359574384 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008841235 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368452922 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.294963164 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271699657 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449998125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35036498 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421905318 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352549865 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.353133881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353491736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507801744 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304641684 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359917421 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.357008003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436707558 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.651796987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.03258971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.347029445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900156719 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03484969 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902600029 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356373618 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342902869 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345029599 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277564763 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492597375 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.568665486 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617744077 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472505193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.489381093 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366124734 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071260049 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360069546 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559403416 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620450533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.23920722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344171654 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372608334 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.34424101 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356446492 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.554797093 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830095219 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89526574 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46535657 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34980109 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.76922995 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620689648 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344878309 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343617782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936231349 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.347138632 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.68793947 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.352796486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329631003 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496346473 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355650091 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999254068 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.35558292 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.502361038 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.119530824 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.174240849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602775234 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.778992201 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357903498 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902803992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015813551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61257025 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414446133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357699311 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.451200232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493777547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.356082423 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34757884 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346313779 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191470984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.057234835 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357406402 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908287774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610130292 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.344692548 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.35311119 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370116651 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.357533045 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570164165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04812803 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574558367 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357168964 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353028856 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166522771 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906725505 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360373416 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282516284 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.352076369 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580613718 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586994533 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368197818 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.80067864 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.059537969 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89744659 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.32277437 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370506243 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361295599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023006251 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910964928 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.043659564 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83242483 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910150744 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355220917 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623951407 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.354228094 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360384592 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627110948 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.353346768 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360607976 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361978966 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.905331251 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084709129 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.348362293 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.178161229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.288571665 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691610897 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974691588 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289894571 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359069237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.527342266 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352079884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47942734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361467739 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.347242448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351059725 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.111397266 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634343647 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.355595515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337041417 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.144566685 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358641204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357765087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574448686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352420443 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.024803873 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.70095208 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604270832 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350406383 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.337829458 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354994907 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350995775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338668385 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.547043966 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.575555286 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903190048 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.361379604 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.363877067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354904672 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.567778246 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562240023 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351185739 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379473835 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364084216 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369891685 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.263753157 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.853714827 seconds)
  done (took 1586.519480425 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387358568 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.363530279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.381018574 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.405912475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362481471 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435583034 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.362329684 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.442049178 seconds)
  done (took 52.430971888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.352622132 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.562126057 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.381966586 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.352158933 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.361856729 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.351704126 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.773805179 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.365639608 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.36225814 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.362055973 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.359866037 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352313612 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.963195053 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.362611244 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.354915592 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.355545484 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.361465045 seconds)
  done (took 65.632516533 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.352674158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.744446419 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.436478193 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.370349584 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.166932222 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.363041784 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.857262646 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.354271604 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.364571584 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.525657437 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.002829487 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.400986421 seconds)
  done (took 84.232203144 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.360124464 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.3605865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.360277187 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.358950376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.360767325 seconds)
  done (took 8.092566885 seconds)
done (took 2012.997340728 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.72737436 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021600013 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.999087975 seconds)
  done (took 5.313266963 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.502172105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.551264808 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.672533286 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.693184165 seconds)
  done (took 7.710964509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.629483742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.734967003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539650186 seconds)
  done (took 6.196893688 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.708092983 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.381404597 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.428701613 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.355064457 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.357305596 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.354257814 seconds)
  done (took 20.360910743 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358602561 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361447753 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.358392257 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361397086 seconds)
  done (took 6.732801087 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.340595887 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135946428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.342263812 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.359209513 seconds)
  done (took 18.471042336 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.10678883 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.118517431 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.103269241 seconds)
  done (took 7.622688812 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.355184179 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.206047801 seconds)
  done (took 9.854732821 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678039326 seconds)
  done (took 2.972275584 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.489810382 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.623998396 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.335367584 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.298567698 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.366127815 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.983871904 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.904888928 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.506670616 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.28568228 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.404952846 seconds)
  done (took 27.494539217 seconds)
done (took 126.269142299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.995353435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.600381616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.554050899 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.962032828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.587779638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.555430198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.783786341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.936433389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.474421448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.465193469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.965670567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589958564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.517522883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.601385726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.51542064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.601073557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.58955696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.034585451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.694132033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.864386186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.784383467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.603405693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.794425944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.628344864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.59056465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.510962662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.182478779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.603064176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.86808031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.199212127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.510718641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.02719923 seconds)
  done (took 192.487448374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362270106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.357779365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.359802426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367802388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36212379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355835594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.356909662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.371718737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.360878122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.358466433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357479029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.373816084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.359465884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.370477871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360906352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.357680724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378679007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.356753141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.358124745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.372106207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.360833333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358382116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.358593428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.371633512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.379058962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360684669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359101113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363290008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358536909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358894015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.357515774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.358712747 seconds)
  done (took 204.901702032 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358494088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.35923996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.372915358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.367209693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.357783471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.358764954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.363831489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.358723669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371109279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363484245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362559215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.358818704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361831938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359302099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.374141316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360035116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359798204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35967852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372627539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.358810888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.36255118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.371947831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.359092679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3625902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.360801885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.375065607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.372511029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.359805064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.376515031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360462094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360426297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.360136652 seconds)
  done (took 204.939549154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556458212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368443573 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.368720495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.302162474 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.369830113 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369608122 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.368323559 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.566630513 seconds)
  done (took 14.569450946 seconds)
done (took 618.19270939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.59706808 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316430812 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.565689085 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.390377509 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.097324949 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.390326375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.388670736 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.547866982 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.273895529 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.553128969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.60064914 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.386366978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728742093 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.387299329 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.630745683 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.481396985 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.215323225 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.321810884 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.691086936 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.856159586 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639019433 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.81629252 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.550142799 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.281291115 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.739218889 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.819703735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.034211182 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.215075846 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.389292522 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.692603985 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.93533939 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.266641804 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.444679968 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.426900695 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.480693487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.462551454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.256294745 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424139824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.571023711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.585119967 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.882688603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093666524 seconds)
  done (took 91.729991552 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.358462834 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.358770168 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.3579744 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.359558651 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.359710932 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.358174375 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359131091 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.357946607 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.358504009 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.358095414 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.357552407 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.358863221 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.359779475 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.360019635 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.357744275 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.35771428 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.359847042 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.361450932 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.358173134 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.358275259 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.360054049 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.359566766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.36145812 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.358999463 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.360861011 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.361105503 seconds)
  done (took 36.641918192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.372793993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.59895456 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770278811 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.378291185 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373416958 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377325858 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.446918709 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.373574591 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377074669 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376903228 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.524382672 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.377227186 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410616489 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.779148818 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377308482 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.373862925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375795868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.375120937 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.608952644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384481255 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.45029377 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.375903408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.449284212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385552445 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378109743 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37536548 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380246072 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.868530189 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37847384 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.525010857 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.111508512 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.447267644 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.824290551 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.782805535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.115341055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.378362653 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.374910027 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527564341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.376352716 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.37551619 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.44810526 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376114035 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.782180669 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.994756784 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.389853268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375247887 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.890315478 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.527251777 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.607126678 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382743082 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805869556 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378720552 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.376737423 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376696499 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.606500022 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.381490647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.376320843 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89903936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.381738771 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.449403379 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.377102085 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.37713263 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.61788626 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375975735 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.605129376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378304028 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.383604681 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.378126507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.783809904 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380340757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.01108703 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.392119319 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.376293015 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.52471723 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.608000416 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921529981 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381008162 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.621657512 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836148634 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448471618 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.380782621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.86034795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.451546599 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.381309718 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.379027257 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.380127843 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.378285765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421373757 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447946286 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.94161684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006748962 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.915689552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.452566204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390273512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.379253968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.904443619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.392992486 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.377907125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.788213654 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.014845368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393275613 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.386187422 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.999982365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.394913029 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.451961293 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384774105 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.791300996 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379435366 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.422575591 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.378406569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386231979 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382557158 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.451780291 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.383227731 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.379564214 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.990801421 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.548169087 seconds)
  done (took 179.957081485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.384201339 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.370370583 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.370880844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.387129881 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.372423345 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37873927 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.371462034 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.373510109 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.379393666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.372858711 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.372873921 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.374070505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.375052019 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377726419 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.403418241 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.380240536 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.988451831 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.373537879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.374667261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.372927024 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.161303855 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.377509177 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.385200477 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.373910369 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.373510114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.375901297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.375991465 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377444997 seconds)
  done (took 153.266931619 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.380883352 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.911222849 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.381880187 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.505210955 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400398316 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.378443096 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.502351784 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.434329153 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.384005797 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377919648 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.378330441 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.664666937 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.381103116 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.86247336 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.560953504 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.507811279 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.865118251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381969744 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.378157362 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.377984002 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.507048072 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.389089111 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.665816162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.912005531 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.382241493 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.913259706 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.371045619 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.382976139 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382026026 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.915257296 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.379903064 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.667189755 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.454232259 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.438250183 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.91683282 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.866113618 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.8664152 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.51990205 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.38417475 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379254968 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.38016822 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.370935842 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916800783 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.383546279 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.382508686 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909927646 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.396836287 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.383533949 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.391353685 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.380547527 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438720554 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439426284 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.672186485 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.923744097 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.454365325 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.402997264 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.505979946 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.737366066 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.385106873 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.867223167 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.371347085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920005959 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.3865997 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371063757 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.383661866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.387420647 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.524909167 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.508830108 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.869372603 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.384146974 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.869247622 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525161054 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.384486412 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.382230263 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.38420084 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919957642 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.869213092 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525748192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.512293614 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567388802 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.373171691 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.383334682 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.372972581 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456381325 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.382224905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.921971519 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.870376546 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.384612847 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.385391636 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.385436957 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.385782975 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.551093135 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.921603524 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.457669658 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.862552449 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.6872255 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673745347 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.386247256 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439798305 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.384596512 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.675167449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385150987 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.437619088 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.798701344 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.675764211 seconds)
  done (took 163.434318696 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.614357735 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.527317011 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.470100639 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.492208945 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.895229482 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.948669258 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.501198133 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.506236361 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491111769 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.61464635 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.496623846 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477907703 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.56261857 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458102426 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.036076913 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450597132 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472801382 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.504407785 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.490470691 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.426055244 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.992778369 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.661274325 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.550452748 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.365692693 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.478381987 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.125480258 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.921290424 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.883229582 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.54455606 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.59618782 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.866924784 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.475206314 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.295081744 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.021737165 seconds)
  done (took 65.534056756 seconds)
done (took 691.865614579 seconds)
SAVING RESULT...
DONE!
