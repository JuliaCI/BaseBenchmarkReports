cset: moving following pidspec: 19002
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.598322688 seconds)
loading group "shootout"... done (took 1.225031644 seconds)
loading group "string"... done (took 0.417384318 seconds)
loading group "linalg"... done (took 7.871411369 seconds)
loading group "parallel"... done (took 0.156078799 seconds)
loading group "find"... done (took 1.407558327 seconds)
loading group "tuple"... done (took 1.916302067 seconds)
loading group "union"... done (took 12.628393309 seconds)
loading group "dates"... done (took 1.332697575 seconds)
loading group "micro"... done (took 0.203805947 seconds)
loading group "simd"... done (took 4.29245967 seconds)
loading group "io"... done (took 0.992271095 seconds)
loading group "random"... done (took 8.503213519 seconds)
loading group "problem"... done (took 1.633807114 seconds)
loading group "array"... done (took 19.252601648 seconds)
loading group "misc"... done (took 1.518388154 seconds)
loading group "scalar"... done (took 39.077118881 seconds)
loading group "sort"... done (took 3.037636289 seconds)
loading group "sparse"... done (took 11.539441035 seconds)
loading group "collection"... done (took 16.787631746 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52790367 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126991884 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137596492 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118258101 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151793972 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118145589 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124547086 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085166778 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.914823907 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153590277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113559872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.463190975 seconds)
done (took 5.307140273 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173235261 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089265781 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078140861 seconds)
  done (took 1.228006825 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06308027 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12558053 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064220781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064903195 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064508813 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064044166 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064063094 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066236405 seconds)
  done (took 1.574315907 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071457646 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067264061 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063795084 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065611168 seconds)
  done (took 1.327541715 seconds)
done (took 5.437751055 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.249033908 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.110602508 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.284934227 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.399865692 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.472185248 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089373302 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071850226 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067708017 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127444085 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317959301 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116961808 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.193602739 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098034737 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.180861788 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.978551336 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.127609522 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083329741 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124461285 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090437674 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128365338 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.424186578 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075499263 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073026008 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068246112 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065740139 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640781977 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666490483 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132603226 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083044567 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.10278205 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114560671 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.630726079 seconds)
  done (took 10.490849555 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102281389 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099315191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066726293 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122472037 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092043594 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067378749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073009011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065425029 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087288017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123689421 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088560667 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107329429 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0638499 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067208986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083875924 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196549156 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077417941 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078938907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06677815 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0783218 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105751692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07642084 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077745212 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077666613 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126518739 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166712434 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094134205 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095614156 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064126797 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079131202 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115137727 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124365064 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0637948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06403889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119347407 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09292706 seconds)
  done (took 4.454972264 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.994930597 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089242149 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104043975 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.640097161 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063850836 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.1560811 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244579805 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071304974 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.467772907 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.155976023 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.146185476 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146692504 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.120748068 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068294807 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.307648907 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118073906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.456661328 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066546378 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.0654438 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062686624 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073841385 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066554407 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061479968 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076548853 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089463352 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086859193 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.182730987 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981162808 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.265942987 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066208309 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156706908 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084495516 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.370929183 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06852291 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090486368 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.397804084 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.127543042 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063064173 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175808126 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.121733244 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063461777 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119174046 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078718225 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069406055 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06825207 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067310058 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078509991 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078887718 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100922996 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067080015 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063469521 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093137031 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163308298 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062830601 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065546026 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066829489 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148573295 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063357366 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.15169773 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062779819 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066738417 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097162361 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067089663 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.09285824 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110719831 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062250958 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.337968742 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.028266124 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067161095 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.914426058 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078836148 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066001684 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07885581 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064994279 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067123838 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066039056 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.076095533 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068160761 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066578724 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108271124 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064728337 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067760293 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065172624 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062857661 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070866677 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06259817 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098221449 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064200766 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.460744568 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098335783 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065095977 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077769447 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104965917 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06582027 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073073378 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066898242 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06838415 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064356865 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066543536 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069885867 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091265612 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067386989 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.21355344 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.029215333 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067911871 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065666706 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070838089 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07069384 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067678516 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065045828 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069529701 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066583927 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064040156 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.116909726 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065699958 seconds)
  done (took 21.764545825 seconds)
done (took 38.764196603 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.260507485 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085266928 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08453569 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08466555 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084308181 seconds)
  done (took 1.760227491 seconds)
done (took 2.899500551 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107760427 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062991391 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101886786 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.101933111 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062799453 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062739072 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098688693 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06270294 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098380528 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.102935142 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.107494801 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.104053438 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062724616 seconds)
  done (took 2.29686105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068178028 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079697229 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083609718 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063099153 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07153143 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080775478 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061552204 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07968962 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087668292 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080738969 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080512375 seconds)
  done (took 1.970718758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06774701 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080451981 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083072814 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061439876 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07265671 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081786192 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061708196 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080254473 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084890785 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080350317 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080988069 seconds)
  done (took 1.962890573 seconds)
done (took 7.359887571 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07627808 seconds)
  done (took 1.196099905 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.563277712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.671955133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078088834 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100470378 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20298634 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112124791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247544298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08345147 seconds)
  done (took 8.371964287 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095140263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08352456 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069331405 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06888805 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068128161 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067864286 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069547816 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069507865 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068548892 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068765711 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070376923 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070056808 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070354411 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069770648 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068596592 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069682732 seconds)
  done (took 2.367084003 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097647292 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09760478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074154812 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075620106 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073400589 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071733692 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074423614 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073944072 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071215472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072153283 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075822384 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073965162 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073219789 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064520538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074047617 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076779674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070946176 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074608574 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074970202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075673202 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075794317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064672565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073447852 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074641687 seconds)
  done (took 3.057433918 seconds)
done (took 16.123395006 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121373228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080750497 seconds)
  done (took 1.329469074 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093580138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077481238 seconds)
  done (took 1.308964776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076695375 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058993451 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085447487 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072014436 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060126154 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059755335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08255383 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059870212 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059616154 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060032061 seconds)
  done (took 1.831286121 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06199048 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071524413 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067447283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077591395 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067745148 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061394198 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065611332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061894709 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070819459 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059997254 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066278428 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081864025 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065266831 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082157523 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06585558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065883637 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068510721 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064863189 seconds)
  done (took 2.383205237 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060083986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061357982 seconds)
  done (took 1.277685187 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064664537 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060999039 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064689801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06374543 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060795221 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059640405 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060550691 seconds)
  done (took 1.588083145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.360482761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120845396 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319321865 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066925122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076604846 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241270884 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060814789 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066362955 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06632518 seconds)
  done (took 2.578451638 seconds)
done (took 13.444909937 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077804297 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080967645 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095895467 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4364522 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088744477 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064049135 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111689069 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175861532 seconds)
done (took 2.303980636 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210191302 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.573935463 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.839017925 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063217005 seconds)
  done (took 3.639996752 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321008106 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082100388 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073949483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064312855 seconds)
  done (took 1.712157835 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06174577 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068115748 seconds)
  done (took 1.300896612 seconds)
done (took 8.037297261 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06113767 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061222778 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.0609108 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08595501 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061042193 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060955613 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.061095383 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061252092 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061552471 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061304409 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061056401 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060913763 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061435218 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061330299 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061325021 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060929929 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061184535 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061223888 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061213602 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060860386 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060701706 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061020671 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061496533 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0611312 seconds)
  done (took 2.694993447 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079506498 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063850543 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065245797 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064850895 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066184051 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064814529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064872729 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06343932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06501982 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062729644 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06535055 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065290876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062852843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065242873 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062732143 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065363112 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065050486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063299246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063073816 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064993669 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064894369 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063259218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065156888 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064829877 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065221549 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065108964 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063728834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063533146 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065107165 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065200356 seconds)
  done (took 3.130808196 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061461401 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057843889 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058909285 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066414405 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058232272 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058915063 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059500437 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057532236 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058588912 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059991065 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059051509 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057623191 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059733137 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057989273 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058139159 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058993394 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062381498 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075339094 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05834596 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058238458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061880877 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058240052 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058468308 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058202749 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058853976 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057976094 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059798088 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058882077 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058091453 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058804384 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057800242 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061445727 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062623167 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057839024 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066536956 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061910968 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057866148 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061362522 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059748369 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057565521 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057989707 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057929649 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058109625 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057755334 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066562774 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058149902 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059266207 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058873263 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058389933 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057573145 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057949446 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060487795 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062690673 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060196001 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.05765792 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059645362 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057787527 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059250305 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057722004 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057659622 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057428141 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060850726 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059936978 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058944611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075465691 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059812251 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066403801 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057811352 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05896986 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060446277 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058962453 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07309969 seconds)
  done (took 5.507536299 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087043443 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086784206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063711701 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062885217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058777548 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058926541 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066768134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058700705 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062960801 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078129281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059023038 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062727503 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063028009 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062692655 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059353953 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062940741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067201627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058818481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058564821 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062721804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059040449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066279212 seconds)
  done (took 2.624914584 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143999397 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064851059 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101273398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080811659 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067715965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076412578 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064435998 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064790096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064837155 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065772293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065338508 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065003708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067586691 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064863344 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065032202 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064803162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064677606 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064897589 seconds)
  done (took 2.506518658 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075337315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064565405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08608263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063689725 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0644817 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064293406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067904833 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069314426 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063797068 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063821508 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069373929 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063777338 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063872769 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063880136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063566173 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063819756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063960025 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064054016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069113856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068038192 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067835022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069216937 seconds)
  done (took 2.660755134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073754778 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063541015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076319204 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064852456 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059515581 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059719305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064613944 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06280929 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064050077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062888748 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063192475 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05883805 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064506369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063514405 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065633569 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063207976 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062800249 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063269209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06297889 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058909652 seconds)
  done (took 2.468069782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092774449 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061874409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062509186 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079953948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061983113 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062158156 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080318448 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061610399 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061780774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083964584 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061704325 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062354873 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080406332 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079811039 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062329834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079897518 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080042929 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08192904 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062006961 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06176127 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083423809 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06223804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087770084 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061745328 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061924609 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061805793 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061701251 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079772869 seconds)
  done (took 3.172234514 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061687814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061187435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062162959 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061483107 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062617797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06121877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061400247 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061521769 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060853598 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061477454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061901344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061309404 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061656465 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061379849 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061125107 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061189324 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06132791 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061429063 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061172863 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061232338 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060968852 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06106463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061460586 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061165773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061164411 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061165431 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061250921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061340417 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061076815 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061586098 seconds)
  done (took 3.036440803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072021164 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069763643 seconds)
  done (took 1.337089397 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060972663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07495055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058879543 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068305977 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068057838 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062478465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068661035 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067255845 seconds)
  done (took 1.72048594 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.075413455 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.097783265 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062088065 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063113767 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073065526 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121218866 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083651413 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070193412 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072378275 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061500036 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061306066 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081161644 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059842208 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071585353 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063023327 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068048749 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067585974 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07182747 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071189057 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058728028 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074257512 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063979918 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05933499 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062003658 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060740719 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066013919 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074682432 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070649088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067592451 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057742202 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081355946 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058734118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060407318 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068161581 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072235308 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059301191 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095906753 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059946202 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065897651 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058443135 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07077944 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080751672 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071550404 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077820088 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061180533 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062108133 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058447287 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061299468 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062005251 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067693038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058776725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06515387 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05812463 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061834824 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068292048 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059789911 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066675624 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067086428 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074674198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069008858 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066638801 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073087499 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06694854 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070095696 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060784074 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078184752 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061441482 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070455039 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07245664 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061379683 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073984162 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058447859 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05816198 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058816147 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092360099 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061197954 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061190555 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059666496 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059505229 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060909613 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067814583 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066220864 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065671914 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063491521 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075489385 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069111378 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059534029 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069311879 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077094535 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060698339 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0594661 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074402708 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060747775 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058663866 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078757025 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066907129 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06157101 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061555027 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061717287 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072423735 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061129413 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057279883 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065919914 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060903834 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.068823661 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064025258 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065211446 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058127411 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068072503 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064423111 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060795305 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056962724 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061659772 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059546294 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056556567 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066046992 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058028393 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072404118 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062625506 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070875189 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072288708 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066870762 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074916834 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05858132 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056507666 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076860581 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066117275 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059538602 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07652563 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057383189 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.195978979 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060218718 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06345709 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068972847 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059301874 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063113228 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060534594 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067713402 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062747469 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062719236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062463649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067643842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071765114 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061389104 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066929718 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060441522 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074212458 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068865355 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063382853 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065222571 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061584134 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071234397 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065159083 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069713901 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059220385 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060491932 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06253444 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069620141 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068986241 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061957701 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071351343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062804602 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060694188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060324082 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061169409 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061980118 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063666619 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060751275 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067109477 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068854394 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074310904 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070209497 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067394123 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059386002 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059099413 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062281455 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059253934 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064034682 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069846422 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073224886 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070428076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078918342 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059978932 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067881269 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061457214 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075681893 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070610722 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060273596 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065302711 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057964464 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061688513 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068147762 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06990382 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073288371 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072603376 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063719611 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062460087 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059305096 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072771873 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060368594 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066696956 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069369972 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065939997 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059972199 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061948332 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06756528 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062785397 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059465731 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075570929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068289961 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059017773 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071683087 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.0601189 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069573159 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058533459 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061413432 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063106862 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062462725 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067848955 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076883645 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057556159 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060480204 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07687099 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061682875 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061881476 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065591916 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074035798 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063782577 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066102762 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068379751 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066775734 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062204584 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066476586 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060468927 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069068497 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063774635 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069648784 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059368471 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075771922 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057600464 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074723238 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058483406 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068733278 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060130407 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066971191 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059677698 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074041684 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060657751 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059553778 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070963239 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056481906 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067972901 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.05772517 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061819582 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063108321 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068173761 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060831317 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066650082 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060520905 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066194478 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061514502 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065290486 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067740271 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061330578 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057575421 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067106779 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.202301004 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068761189 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063409151 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.063618882 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06123457 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0715262 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063196067 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062069626 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068843207 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064852147 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064483253 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062796764 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063476825 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062586628 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070070001 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069347557 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076726206 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066798839 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066029592 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06950055 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058703543 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07766425 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059731843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065615851 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058668713 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069513934 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069703144 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060383102 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078128001 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062541132 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066776322 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073154818 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06755999 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061927908 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077553206 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065071811 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068322554 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066895092 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063626913 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06502386 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063051055 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067686841 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06975 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070582816 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060875468 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065865087 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067962927 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061621412 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.07131156 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061806516 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067982448 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06234348 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058312894 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064249662 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069819733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062977384 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063999214 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059871882 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057674971 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059720784 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068873589 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063666086 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06689271 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072958425 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057828671 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060771282 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059173917 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061313597 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076459587 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068869491 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066543712 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063856232 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058370358 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061527309 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061921788 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059785623 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06412531 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058729568 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058950822 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068795126 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062352282 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062832755 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059922482 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06142287 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067956501 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065371799 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060003402 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064461319 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060069556 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062954294 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058372603 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061625983 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063114756 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058150784 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062073698 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068833139 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074370816 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064377025 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066877704 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061881432 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066277064 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074332083 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069237903 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061104119 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066987105 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058039383 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078761729 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067197061 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066062909 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067623048 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061614848 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07496367 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062148607 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068123234 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07558151 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060129389 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067349671 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057898075 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076389073 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063400391 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05764807 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065157349 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064311982 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062510348 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070775232 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059518866 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066110469 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0647835 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061001566 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060514872 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060373717 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065602896 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073339893 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059161875 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06406544 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.202005225 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068927507 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064066053 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072741566 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06782292 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062372293 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063412523 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062849108 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062233288 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07206186 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060518515 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064700025 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063030934 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059737658 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064845514 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074462054 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069956062 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068256113 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059815585 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059405039 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07763884 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062047448 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064585195 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067083988 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067771589 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071558832 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069085395 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076765139 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061175186 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0643887 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071554009 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060886941 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059569649 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062673992 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061659294 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067980658 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069193992 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066063185 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064766768 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065633398 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071564309 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062248816 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063482104 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068051238 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060986338 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068769565 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066681615 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067264086 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062467516 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059417894 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061830952 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069482009 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065963973 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069285826 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061193151 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.06974873 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073278961 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069002939 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064351547 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059198591 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064525381 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067575552 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065827891 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058711796 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063082489 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062140737 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069076937 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069320009 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062829282 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058785794 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075872243 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066735166 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068156905 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062264964 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062173586 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06048821 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059120824 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07001916 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059238759 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061786943 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063644243 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062132056 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076165674 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066882171 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077783524 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061201048 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063144645 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059054241 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06813059 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063479789 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060238718 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068973894 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058790803 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077461553 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071111055 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067897597 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05900924 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063331214 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066850654 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074425114 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068099943 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069321435 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064402484 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068571621 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062032593 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069384684 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058723328 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057879819 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068616111 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066135961 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070045043 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058263102 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068588542 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061285889 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065491043 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065745436 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060463526 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060735689 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060461529 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066734198 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062309024 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067154133 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061598275 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075010061 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059161321 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067932755 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066329524 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068019184 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07065868 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07154574 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067912252 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059208288 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064304035 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065720865 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059952014 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061480993 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06258277 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.220547108 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063252432 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063261734 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074433785 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070612762 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060892889 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070581092 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063783644 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069924055 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061006621 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06910354 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066146381 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.0623482 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063591128 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063583154 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058277629 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059562794 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060038203 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069111195 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063742386 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060227745 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077716409 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062127027 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066972155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070380803 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065250569 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062630265 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058645357 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063390412 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07079084 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073883596 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06224504 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067305301 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063043489 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06971338 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058487103 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067894709 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068974428 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067191281 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059613329 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060403643 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073491315 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073090387 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063967924 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068639368 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067924981 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062558858 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084517081 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067775144 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061983587 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07092418 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063443827 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058818743 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058543837 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062282065 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070546717 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059109051 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062634081 seconds)
  done (took 40.899454331 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099383614 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060721547 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059322116 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059506116 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072998645 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06071262 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059411505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060128298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060160384 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062498908 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059659386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059364662 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07178531 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0754188 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071014869 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064208919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0592351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059968016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059177324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060212872 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070555621 seconds)
  done (took 2.672122844 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068395736 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075387906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071922986 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077565742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067916629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064571243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071444653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064406061 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072854215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069452979 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072797461 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064590452 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069590958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069737908 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069292486 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064867878 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072335819 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067827572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065281423 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07139479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065164778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071395391 seconds)
  done (took 2.817193833 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061464102 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060327985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066315389 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058911301 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058915687 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063507638 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058665723 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061996801 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061868642 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061755991 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066577508 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059532433 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058435922 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063202747 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058526963 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059665463 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102959616 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060018466 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060172646 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058680139 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062175709 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070231664 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058642941 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058576471 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062038851 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062978775 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058542834 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062325276 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.05955042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062395591 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060062159 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058202787 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066613562 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068890895 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062373539 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062274423 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060853972 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062190372 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058812488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058574308 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06786905 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060604785 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058875917 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061718486 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068487533 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059517109 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058502176 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066716083 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058256929 seconds)
  done (took 4.348522948 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074266802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109373859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065050843 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090198268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073966465 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067733409 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064651902 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090235735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060985693 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061671149 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075112524 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074956328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06294891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06579223 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066294928 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062909035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06389187 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062180548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066475644 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062529893 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066531905 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066137597 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074066192 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074569115 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064323539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062221246 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062727218 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065175733 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074248795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067386734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065551952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065943295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074412994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066562729 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062600615 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062835997 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07553408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063671223 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063251082 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060908592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062466722 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065406601 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066477977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076033893 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063032614 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066710359 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063033745 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060314261 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074647804 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062554114 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067867497 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075363996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064280359 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06370824 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065090638 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074471878 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063514539 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061570536 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063618983 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073927516 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061276995 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064264382 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074727616 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062940939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067572227 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075117484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066949721 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064461467 seconds)
  done (took 6.070842657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069533385 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090087567 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071674886 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072244121 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070664388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070922102 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070469087 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070653503 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070824816 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071604454 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070659869 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118507017 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066138384 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077098966 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070730333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07066893 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070876432 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070628245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070694163 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070194834 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070680817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071279759 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070347939 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0716872 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075019013 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065986798 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070439465 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070533661 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071516702 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07053322 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074682335 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070584802 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07048203 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071560885 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.0747293 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070911657 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060199129 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070196922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070714341 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070581354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06597972 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071454712 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070450389 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065393153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070358772 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070124125 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071211164 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074755203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08052646 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072566843 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070861474 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07164807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070643739 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070515746 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07119715 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080495327 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071527162 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071168798 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070435924 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071017173 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071133949 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080537079 seconds)
  done (took 5.802949735 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075533205 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068556253 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080180268 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061333473 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059263129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06886818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.05914815 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058819776 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068132781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067736985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070117778 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069224819 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071794023 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069708387 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069019706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071727382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069244228 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068835184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067597812 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06904799 seconds)
  done (took 2.679292868 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070764843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077510263 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065184281 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070158974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064971307 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069143061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063400418 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06514346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065229256 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065026079 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070641129 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070918143 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064814306 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068922517 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070769661 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069185338 seconds)
  done (took 2.395575869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065313442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068802768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075652111 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060912492 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063989374 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059789147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060035616 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058522908 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059462131 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073497421 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060399591 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071217352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060130833 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059093688 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060256578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065783951 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059924385 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060737592 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060506025 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0735876 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067051776 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06157017 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063783862 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060408339 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065192286 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067828947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062427408 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063427632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060696476 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061135877 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065722248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066891893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060055976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061044845 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059129837 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060381341 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060337194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061199391 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065724203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060229555 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058596521 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064602618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060753934 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063906327 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059160585 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060594091 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059143131 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065507611 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060818572 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065081941 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060155753 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062633133 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060586266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067819627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063174346 seconds)
  done (took 4.769963633 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074340669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065081281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059628308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058795772 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064354648 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064302001 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064615884 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064423168 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064683349 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05908609 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06466163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063762095 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064842335 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06428594 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064203054 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065166913 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059304538 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064325926 seconds)
  done (took 2.466674932 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069827963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064311088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068758944 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063578163 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064780085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063949362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059490123 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059135653 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059333176 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063817716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063478538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063299555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059276175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063312428 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063379662 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063910939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063422641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059119782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063475913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059329642 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063443105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059335612 seconds)
  done (took 2.691657019 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094014181 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080599607 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127368811 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07653097 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085180515 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068997421 seconds)
  done (took 1.844527905 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087513871 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10378266 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063534003 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064419895 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075581475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068072862 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067795354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067977586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076155672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073773406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067886682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078071482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078698554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070056085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076473232 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079602397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067818611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068040817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080140091 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079163098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067877307 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076077554 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067926859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067728183 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067920899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070416613 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07938256 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073629876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06764066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075768841 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079140239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06766466 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076057695 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07357382 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063886116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076055961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067998948 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079714639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076256337 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070509967 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064203602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076418403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076336757 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070077923 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079642114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068408991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070367947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068286039 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068145173 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08318359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076718977 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070193464 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076235466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079845125 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079322334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082626857 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073551464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070174797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076288396 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073586068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0699643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076137297 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070298068 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073498586 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079424211 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070550239 seconds)
  done (took 6.179391323 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096241809 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065042711 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06891458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074010726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070859193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067690803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067957075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067667039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067849927 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064581462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103426754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068350948 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070450254 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070286618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068152881 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068096146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068211991 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070671929 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064007003 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082936768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068128845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070729433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070692293 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070877414 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073859589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079685888 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068215584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068146838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068072015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068077974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070586616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068417121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070376204 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063889191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070676013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068304561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0681312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070415909 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067892069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076093362 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070338676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079603428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068140139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067936448 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073662051 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067469042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067742112 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06398993 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067711296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063971621 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074068457 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073942988 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073967709 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070603366 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06812165 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068161698 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068454805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067866144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068323588 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079900249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070329921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06800713 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083009928 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067830231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068590309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070564012 seconds)
  done (took 6.014094171 seconds)
done (took 123.684512153 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205260898 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1809321 seconds)
  done (took 1.687480713 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070495241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100876817 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079580477 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130170783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068113975 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102033972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100268962 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080144254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06744395 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067271944 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067731017 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069755003 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132284389 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067897063 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067462698 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069841499 seconds)
  done (took 2.664099663 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102231996 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.187131387 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105850109 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065702965 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102022027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074139531 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065753957 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080185938 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070278447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068859347 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073886878 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071905488 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068233328 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072100378 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070094023 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074052202 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068544081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073593598 seconds)
  done (took 2.819511325 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09103229 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083015692 seconds)
  done (took 1.50156431 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15531741 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.130031771 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.197193774 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331390288 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13971148 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284040238 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129806714 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127925155 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108412067 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124982039 seconds)
  done (took 3.053520886 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098714883 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165342394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297734253 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117227023 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072528078 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084919318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118765496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077583849 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07723118 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077059333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077543879 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074014966 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094379729 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074213322 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072908562 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074016442 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097738465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071806131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072029842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07315319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096827208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066160589 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07381062 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072840401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075169478 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075223027 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068195277 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065790525 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072928582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072213201 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076212359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081956519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075287309 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101885168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070039859 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103333917 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072387348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070491298 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072033159 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070158619 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074372596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074537212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074523888 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073867417 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067131228 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072333548 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06744374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065784489 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077016009 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067261218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076968686 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078295036 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101422825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067126889 seconds)
  done (took 5.891370097 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106993009 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107752941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071264243 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114895124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107104597 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070924574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106236174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098437369 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10745436 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0701854 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068252007 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069831108 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080092407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080132306 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117893772 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109141712 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072818835 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070778485 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108208562 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106790609 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067985541 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103035712 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09744784 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106421228 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066701679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069814331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067226697 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070216987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073569645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075899382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068410673 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079030724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082388925 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075368423 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066059349 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067992698 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067582346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077274973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076735104 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075817347 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074995596 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066742633 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067599665 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068518648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069649955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066373563 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075966177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077778802 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07609114 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067837009 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069351169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067286131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069270329 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07762813 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075391063 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078372991 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077315326 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067424723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067519598 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072950166 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077296281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077617471 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077377609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070045997 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076379911 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067474805 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079173373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081631337 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067466248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069434796 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067458157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068018434 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068591197 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074383382 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074627601 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06950232 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067975286 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067745851 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076814729 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075488338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067626191 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073942866 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066062173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067898318 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069489037 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069833031 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074203648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077836423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069890744 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067503924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068358994 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067486986 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066044185 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073153594 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077465284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07701302 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074679658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067952929 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075391345 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074735613 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068336809 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075492941 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066205949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068660537 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067469651 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074820928 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072715147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075493569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066910913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066434695 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073311344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076155329 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066503038 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074411028 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209596584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077769027 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068333617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079501912 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069253579 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076758001 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069263487 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077919483 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068599447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077116026 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068681488 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067269033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067915268 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078606162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070986134 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068850837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069427447 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068523748 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077131 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079456932 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070377731 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075807938 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076096352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070021474 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075929336 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067326368 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076349053 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069060132 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068951234 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066752054 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079158508 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06898091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068505118 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068663803 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077552617 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068472319 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078285813 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075296798 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067197607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078069251 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078496785 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075108626 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078256786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070217725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068503566 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06766213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068666771 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075380986 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076829607 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070293188 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067274231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075354074 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07671725 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06670836 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075722663 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0753067 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075859644 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068124899 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06849876 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078249743 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077428628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07697387 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075152634 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075748043 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0679012 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07557124 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075538103 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068152651 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08185297 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067484009 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080640532 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076005772 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074726829 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076068671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07733019 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076892196 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078024393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080739253 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066572569 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067409101 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077744972 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067738638 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068354529 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076908535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069664119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069915671 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080939867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06794288 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077121176 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066591872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077793751 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066243719 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06995307 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081733962 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067938669 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069699837 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077493802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069875509 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075540247 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077422328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075402121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066458337 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068727024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075863444 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074310677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066066399 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066316064 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068432067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073427382 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072384445 seconds)
  done (took 18.200279856 seconds)
done (took 37.156813744 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220653138 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1620702 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199101181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120249302 seconds)
  done (took 2.139476218 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10894697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101013073 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087506145 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061994261 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.0932812 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061903382 seconds)
  done (took 1.884016773 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309203604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214975517 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189268881 seconds)
  done (took 2.08009435 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22176506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202942303 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455455294 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288187413 seconds)
  done (took 2.639928507 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142396222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081871853 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061861017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079444726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125425021 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.358114964 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093593573 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118605676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072416642 seconds)
  done (took 2.560480855 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.13990994 seconds)
done (took 12.839402534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.271201283 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094629522 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.235170856 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.206883102 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065440306 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195650439 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.144882469 seconds)
    (8/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.094666667 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071471122 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186284282 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.085648207 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0731466 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.161356303 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082059356 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204319742 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.141079178 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.175216177 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076227627 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168472213 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.234999229 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.181443386 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071398649 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072262824 seconds)
    (24/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074477199 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070950559 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074347718 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07310804 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.130667935 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135933895 seconds)
    (30/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.10308643 seconds)
    (31/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.245595792 seconds)
    (32/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075516808 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216471358 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201243646 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081614721 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176466841 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079160308 seconds)
    (38/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071070172 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0618968 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089070456 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073507177 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.178438254 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071448466 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066060838 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081768982 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064506167 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170759376 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113061106 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070403057 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067428808 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156080671 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061270396 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070711933 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198420722 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063851119 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08876465 seconds)
    (57/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062843735 seconds)
    (58/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070827719 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.181787925 seconds)
    (60/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186582364 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073962818 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 0.157895548 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.197229821 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.165017376 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134381826 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.062513861 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074591563 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091594067 seconds)
    (69/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.172117187 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121409281 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061535435 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070472414 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062632854 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120986445 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115985686 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.134703449 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061085466 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069712299 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203049261 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069639324 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067105722 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070615586 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087061931 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066174906 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088454178 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072535769 seconds)
    (87/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.240878749 seconds)
    (88/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067624055 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223417436 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073030758 seconds)
    (91/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.142928774 seconds)
    (92/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066745044 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092500889 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070691109 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064111038 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169493496 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229921067 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063695673 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091419014 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062248454 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065997234 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08380696 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062532596 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073735723 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112082781 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062402941 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 0.18147664 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139739265 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074260716 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078793881 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063670904 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069223733 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120276752 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072284205 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118033699 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062081529 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063106343 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072565082 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06225674 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201848595 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.142236831 seconds)
    (122/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062677494 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085548459 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140052726 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087640077 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062452082 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173546543 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075988841 seconds)
    (129/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063482683 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070987126 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090238553 seconds)
    (132/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063695981 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06389566 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063049772 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069460965 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.063735372 seconds)
    (137/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.128763087 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085776382 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158257536 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072060128 seconds)
    (141/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066717416 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073904691 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163443053 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128954146 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089500401 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09201404 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06135775 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071397388 seconds)
    (149/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074765654 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072716638 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064108529 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063599739 seconds)
    (153/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070372301 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061481702 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070418976 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064098921 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13186274 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063360187 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066295209 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06909132 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06203715 seconds)
    (162/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.145183143 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061518051 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063498759 seconds)
    (165/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063102708 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063232984 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071058155 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090435856 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070257492 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087109407 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062237813 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070688169 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142338044 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062527882 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08174773 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128492681 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172222446 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070032835 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062250473 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061863834 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062933916 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182144415 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063268733 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076274881 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 0.12857677 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18537154 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065777343 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063002985 seconds)
    (189/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061339854 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061776399 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157726401 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205329069 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06276508 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070160493 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.061435586 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.061774709 seconds)
    (197/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062606673 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179811946 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083827357 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175189073 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069178934 seconds)
    (202/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061148104 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.134074359 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060872012 seconds)
    (205/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062555969 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.232096735 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212407696 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063077379 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064739289 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067463794 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139374954 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063751284 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088083885 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062650185 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078869735 seconds)
    (216/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.190950176 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.1316531 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062466802 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070320052 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063298341 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062506309 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126019641 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063611781 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073733992 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074299518 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07249092 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139687402 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063832089 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120565984 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136441619 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062608003 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131542476 seconds)
    (233/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077440359 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145283441 seconds)
    (235/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062914114 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063148201 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071005666 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065878463 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070793969 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069274656 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062642702 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.06918919 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064174432 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062671267 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069995057 seconds)
    (246/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063597715 seconds)
    (247/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067478897 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062704981 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062927555 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064330859 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061866354 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06339883 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090014286 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078245443 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062348826 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062215623 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076365963 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.062336175 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06206233 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14370035 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064269323 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164017551 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06431935 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062101774 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062191253 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075769848 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24054073 seconds)
    (268/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064351892 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062460338 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087330903 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10658765 seconds)
    (272/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062200204 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062512812 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069668351 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063845104 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062553617 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161455162 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088756955 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063359176 seconds)
    (280/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063209192 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063362392 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175952962 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063805829 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063163591 seconds)
    (285/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064627463 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062172274 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12233005 seconds)
    (288/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063745956 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130050952 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073658651 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062401228 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086240769 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062307748 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062188635 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125199236 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069508112 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06231319 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061968322 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062147425 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089937379 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136943731 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06208451 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.068844762 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076543071 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062293082 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061993804 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088373056 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062226329 seconds)
    (309/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062081565 seconds)
  done (took 32.00147748 seconds)
done (took 33.384376124 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082106793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095785268 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069966572 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090882999 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079267263 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095146817 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070229268 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075235729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077436347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07647943 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077011325 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068701768 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071870328 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072984128 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070521158 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094396848 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076778078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07175725 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071859323 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062664997 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071527982 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062261794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06237441 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068769921 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07426775 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069722677 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072723573 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072368072 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06268804 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062999561 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067248995 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071695133 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062517916 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075492632 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071837994 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071399583 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072900551 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074550402 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062124678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062620166 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073037397 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062821022 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070938765 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069461792 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067179434 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069015208 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071110787 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074890169 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094126406 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066598745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072606652 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074157148 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074254729 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067907635 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067823679 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071319834 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068491066 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093662684 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071166288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066496619 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072498652 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071670583 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068813485 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071445626 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071352746 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073279417 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075653501 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069019235 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073058464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069277452 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062137557 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071899294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06715322 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.0647733 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073700997 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075708084 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061450891 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066675277 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070900565 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07084989 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062236615 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066365417 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062237534 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0676981 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065862933 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068568045 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067746996 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070278418 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061948011 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071273037 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069695491 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070638755 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062438855 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075820952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062776822 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069134159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062498399 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062587599 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061699417 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067627943 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062178458 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066479004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071115343 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061700245 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067324498 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076506798 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062358131 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070545991 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062518825 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062356394 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07457186 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07325755 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062456834 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06632528 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062366204 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068214071 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062254319 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062243571 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062231504 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062656355 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066909637 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062703993 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066409381 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068147765 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075478367 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062458913 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067075402 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065443917 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061877653 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068157288 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06184927 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061975974 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061646189 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075684311 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06525783 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06163383 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067383383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065487749 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069626069 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060415294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069970634 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067077681 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066033124 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0677149 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060790287 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072152002 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065052536 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065668646 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060718456 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.200962476 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06284946 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063140023 seconds)
done (took 12.169680622 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063593107 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.111065402 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.080527621 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.089135777 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077954995 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063532828 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068822088 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083783167 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066744121 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085014664 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085820781 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084530782 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.100645599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062196157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06277875 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064036351 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062172746 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069687488 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.087640709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084823942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095116683 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062628546 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072824414 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079102582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075172573 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084633805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064181676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063865763 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065216953 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080944769 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087771892 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062876523 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063888348 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080193096 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078751705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074184142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063524852 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.06874375 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064312627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06342824 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064699301 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080020321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068246252 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07049821 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064225724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063906596 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064025805 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068243022 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075477461 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068381561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072128794 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077737884 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066548858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063677109 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062439999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06934368 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063316859 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064258363 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063224001 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063648724 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063546756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065407499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063917013 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063982749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067490034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067603925 seconds)
  done (took 6.194000143 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08307378 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090720321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079830056 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08023385 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062926834 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063593897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.0637426 seconds)
  done (took 2.009830582 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063521232 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085989837 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089131488 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089001246 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081102997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089232127 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063578117 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096893617 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062486197 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084633629 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.119938179 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089475298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067322071 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07569861 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063341982 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.079718256 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063704867 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071778992 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.080989003 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088711858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068101077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090852608 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07640867 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063782076 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.098278592 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076547055 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063088884 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063511611 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0646292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064835042 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064672763 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10616474 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076501803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078322123 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064830874 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063410565 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077522195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066529726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.074542388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070382966 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077197165 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0650007 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062649893 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064761585 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068069741 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075200584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062711107 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065436917 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064589753 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083840952 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062489328 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067602319 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069248607 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069135145 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068777045 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072048211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064841865 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084140929 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071986424 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064426586 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081614748 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081037182 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077131729 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080487309 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068418121 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076211008 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077004879 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064472011 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065376933 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065325979 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080599158 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063725695 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066060202 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066860929 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065437609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075303726 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088924981 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089300759 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077230025 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065199266 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064993564 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075463961 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088633733 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068797302 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064540787 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066690878 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062565688 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067271728 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064806877 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069480323 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064969512 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071781942 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066340809 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067114266 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08081129 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063261942 seconds)
  done (took 8.594545657 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06696804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065994469 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06779664 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065925687 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065626037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065945946 seconds)
  done (took 1.913205426 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090203202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065642968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079089273 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065790874 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104396347 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080064243 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.080247351 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075056444 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077694377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077698195 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.079771317 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083039186 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.078758935 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06667002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.079893792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066522545 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08020658 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069063004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076818977 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067340583 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08021387 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066239437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066797527 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084595448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06819894 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066211642 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064227886 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077222806 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076458391 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074512463 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066013209 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06767743 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07302061 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074441031 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.080640244 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074963298 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065526402 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071080351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068339562 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067884195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.082686275 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067234923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067708457 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071065754 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074367999 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072692992 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071226433 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069563994 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.079770833 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071464982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071326263 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066183446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067597302 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070640729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072702731 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074617868 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070751055 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080313932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066541695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073089739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065260388 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067841398 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074309368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068102458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072128696 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070816095 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073005554 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066763485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066944133 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065184591 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070914864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065461353 seconds)
  done (took 6.730280561 seconds)
done (took 26.912397927 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.985735321 seconds)
  done (took 2.452494381 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594139539 seconds)
  done (took 2.092855461 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.137012139 seconds)
  done (took 8.635601483 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.32228732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.36367427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.737106378 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134161902 seconds)
  done (took 3.092010318 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715137697 seconds)
  done (took 2.219293696 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243542498 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2309178 seconds)
  done (took 1.994754723 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.361515414 seconds)
  done (took 1.859940671 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092548544 seconds)
  done (took 2.591366295 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258922443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16066672 seconds)
  done (took 1.924980326 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454625242 seconds)
  done (took 1.958076207 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.277056576 seconds)
  done (took 5.783850676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237568515 seconds)
  done (took 1.782321371 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234368694 seconds)
  done (took 1.739780319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727704202 seconds)
  done (took 3.232454511 seconds)
done (took 42.870590041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080145164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083085076 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083272619 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078662911 seconds)
  done (took 1.809147959 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071508646 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067466237 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071299831 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071732884 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069586792 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070187015 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070614017 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067464362 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068809039 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067297055 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066030224 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06789322 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07022908 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067380968 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070286495 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071611314 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067672107 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067435871 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069878202 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067224755 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07056273 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068057682 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065491561 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066798125 seconds)
  done (took 3.159813556 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075661928 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070279845 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072776247 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069409313 seconds)
  done (took 1.79989798 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074035532 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.08526454 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086335821 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091551774 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07454152 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074676439 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082628241 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083535568 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063119374 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086471698 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065928521 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064087163 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06422472 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084332484 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082490969 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062148062 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062935877 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074738079 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073795219 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076339387 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065034596 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062838328 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073779339 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073467064 seconds)
  done (took 3.296158164 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078882175 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063120418 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078744821 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091450873 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092481329 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063774399 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081429618 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092272819 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139575329 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062765979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068879573 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062685057 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103980641 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062769746 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080133516 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108204878 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111193045 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066426907 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096984816 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063224341 seconds)
  done (took 3.189409903 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081517353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066444734 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067829434 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062621987 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074170402 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070559921 seconds)
  done (took 1.943438287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065941865 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065339338 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065096877 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063927162 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070226035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066881366 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063148122 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064740961 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065075024 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064230582 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063934839 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062965274 seconds)
  done (took 2.298408653 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162910127 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067192938 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067905671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063415638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069516362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064477987 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079598921 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065630732 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082180693 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063478382 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064397105 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066331152 seconds)
  done (took 2.43563361 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109942871 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13690747 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097115747 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071088395 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177435622 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098856417 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089344503 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.124164543 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096824516 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06783296 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09501046 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139331327 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09634105 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.099468282 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082599562 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128388456 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112465896 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088591351 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116256582 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080642743 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068587196 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13712018 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068175687 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092584269 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10417384 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098204379 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112213305 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135999264 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084887416 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089008605 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08176595 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074219076 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107144462 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083315928 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097693182 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094633345 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099707443 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087683777 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085549057 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122265284 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170316888 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106164307 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10217005 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137728585 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078104211 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111277671 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082244499 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101453694 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106460888 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094064396 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074939526 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092423426 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107846461 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103917912 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081069478 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080900705 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122798318 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100077414 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098821689 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079429881 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109213127 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.091853685 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110596528 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120882255 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141008097 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248296256 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143803246 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126441992 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101532205 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090292338 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093748292 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074365268 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115730267 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101463464 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141179588 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121723311 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103145921 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096121122 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086553484 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109147217 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117746266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099544241 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100894098 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15219791 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111303792 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095340765 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097107511 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140794697 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070624865 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152713122 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088931176 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124171835 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101828938 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14313003 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092531972 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083134185 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109061995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110685482 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091039312 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106376483 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085989807 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117232596 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093091039 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107096925 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082317499 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09167417 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086938564 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097644339 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074427497 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111770476 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119100786 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118419059 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074850853 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110487593 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086982605 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076234203 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094055795 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144739391 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083458364 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075889336 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15538133 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093058273 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118838158 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112360153 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082914354 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118543502 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14107199 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091241207 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091248865 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073782572 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.307846207 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076569454 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121012334 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082293209 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103919265 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109939308 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143707837 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143764216 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099363829 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078085051 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092199686 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.109862773 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088743623 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085789454 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076957744 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112380369 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130585189 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100545413 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082267062 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092997674 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068779208 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117503916 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075877923 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082949825 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100041075 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088850281 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089363431 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147975067 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084507195 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111865285 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098953885 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066170871 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093213865 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166006801 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083531644 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112204715 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120709971 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085692311 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067207668 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.098695138 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073615202 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112015781 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.094607241 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110309198 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078194926 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109394955 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067562792 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073726943 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139211328 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103551336 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091412839 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137893694 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109173704 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091053051 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.108659784 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098889284 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09664075 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104167735 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.108850746 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111064625 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07245553 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131894265 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090881558 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075464453 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089818766 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077683894 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075613994 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10048432 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271209497 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09114312 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104041999 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105709811 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096024532 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.111020232 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090360412 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078789943 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135985462 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076513207 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075356411 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090406079 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10937234 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089679208 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139255615 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078992398 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142766058 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094184759 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081200161 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11913113 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068577181 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069632972 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084400205 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094017714 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119959055 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079062696 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078647183 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121423837 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135905477 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099808329 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109119944 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068446113 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092779469 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141302312 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11431959 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082020607 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113681326 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085395047 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134159753 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100681486 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124195456 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108376833 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113377465 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091976307 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080962456 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073891822 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088313554 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114566105 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086666407 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08237446 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066924967 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073967639 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098479054 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093699068 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117006285 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093237363 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141709417 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072560541 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109374773 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109466937 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108421857 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094522803 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096353156 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09135202 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091004441 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091268733 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091742587 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07292201 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13055931 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103349693 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077167074 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089525035 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252823034 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110883201 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115789264 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112564994 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095139847 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110072756 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126413407 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100684378 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083885073 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086846493 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099385516 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087501941 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081945608 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107131582 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117388378 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100610193 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112282688 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095481372 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09304273 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111480467 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09774097 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090194565 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.121909624 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158977455 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.105810424 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105848436 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086581145 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110911142 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107588658 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117042531 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.115101665 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112907026 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0700488 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07456012 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069801819 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109520398 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079440975 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124487818 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076831082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110587469 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102502938 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080908144 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066057281 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103231179 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092307637 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083841662 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128353526 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113736563 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073542001 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09373887 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110812196 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084208695 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129791875 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105913894 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104998548 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071508427 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09627696 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074572006 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113368637 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103458283 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080829247 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075649238 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069425967 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109838922 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084618162 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11274094 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093143067 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103160985 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122924614 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141123411 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086086854 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09585892 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272031347 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118922379 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082672696 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118288997 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141477563 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.124830751 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084607291 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.085841315 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109047378 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10821094 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103752599 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07800498 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079075111 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113565099 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118762085 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067330339 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085488953 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069993495 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.087061062 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116989068 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102125947 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083584037 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121666992 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074400401 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112366529 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099213183 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12940325 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126912801 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150836147 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099073204 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085332989 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076737545 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129327949 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071285719 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122699198 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116191274 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089847841 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068016685 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083751809 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097539565 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.63058884 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111527068 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075219101 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141556279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089779825 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118756245 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086258441 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121204266 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095050083 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104367076 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093711582 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140090077 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082977531 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11305666 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174945743 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114908549 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110384464 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075924771 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085720419 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073738248 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07874961 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083768911 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088331411 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111005475 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088397157 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107118542 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078525884 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107912195 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094882875 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241366491 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102653298 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081741697 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145187605 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090339846 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130232404 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110089424 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079662892 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075412713 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.089513322 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103980112 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082259707 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096054127 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079053191 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078800474 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158654155 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110661414 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086322869 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10427173 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09214916 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.090604279 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093599675 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123172913 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113728675 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074220741 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089395748 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106809894 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078660364 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074757915 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098561229 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069402025 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092292474 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106166778 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100973661 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094299757 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106884993 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078175309 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092463314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113491389 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08616629 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076621684 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076737647 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077447603 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075920638 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106186658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112592477 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118926253 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113288343 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092697733 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100974819 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078503022 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.220706715 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081001412 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098051418 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106015666 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075176345 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13539653 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089917934 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093258942 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101289974 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10419984 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159000343 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073678376 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112695152 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091235573 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112096409 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086228207 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109642155 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097937936 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096190687 seconds)
  done (took 51.459180797 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.093701679 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148741493 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15652828 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.08056911 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093547659 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121069415 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210067945 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192437178 seconds)
  done (took 2.763044489 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073422918 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.07905929 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101826268 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081060259 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063939744 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072153758 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.21759333 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078921024 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063253375 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09507242 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076384323 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065680169 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436807137 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063242871 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06405189 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074176137 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064251601 seconds)
  done (took 3.393813652 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385716151 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597060905 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365361858 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072244034 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.974972912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086378105 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.146717552 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135466415 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077803739 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54416447 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373524647 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129184052 seconds)
  done (took 18.524760814 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077960683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075157026 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08705038 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086852764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074727314 seconds)
  done (took 2.033047264 seconds)
done (took 99.626503848 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078494372 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166756244 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065633319 seconds)
  done (took 1.901815654 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.088374987 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086635457 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086974965 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.084506592 seconds)
  done (took 1.98192614 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070913156 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073687859 seconds)
  done (took 1.775063004 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234547448 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16896502 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093751713 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080801294 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077667306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078449667 seconds)
  done (took 1.880592853 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069371549 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06993575 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070211087 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07547486 seconds)
  done (took 1.919953949 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067148804 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063615028 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066284663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069292188 seconds)
  done (took 1.903163271 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081766046 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08116359 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076282214 seconds)
  done (took 1.877644686 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.094788866 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096053705 seconds)
  done (took 1.827268033 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077842695 seconds)
  done (took 1.714757636 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08841573 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098520625 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13100825 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110330677 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.129956279 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114459821 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077890671 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.081816326 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072733137 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071238403 seconds)
  done (took 2.614833085 seconds)
done (took 21.604326613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076291883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362910174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364146837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083601176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669592818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35402008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998800697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089133328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104428772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066085973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082351716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646934077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957884805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32080629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944624659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320007842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64803116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065640795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064994745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066742838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951851251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06519262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065697354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065551035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647569517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370301257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066526876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321979072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065109092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067958797 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353068922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066515797 seconds)
  done (took 16.010113487 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067771537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118930962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070949177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08120321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068356734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067193423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068632811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066137467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114417878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065935623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082624318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065235024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069838766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06710421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086148852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06641211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068233378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06654181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066476934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067038676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084588754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06568116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067086111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067117361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06713233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07945061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06796513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065835446 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066501855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069035665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070063937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067932786 seconds)
  done (took 3.986818568 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115646568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124114786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072139706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103508837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116498336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067885058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144087589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08935577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117829241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066740636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083317343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065872838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100396906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068388273 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086747328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066747174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067858354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06733708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066129127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067390608 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084671764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065802078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067337457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066803899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067419855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080986088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067775577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066912803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066760527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068925503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070624323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067783865 seconds)
  done (took 4.248592381 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067394205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070017082 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078030645 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079566381 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065080507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067093589 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068578506 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064818094 seconds)
  done (took 2.211878115 seconds)
done (took 28.105411749 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075840026 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06501323 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069167453 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084695969 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07061764 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076416866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062572075 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071573536 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069680855 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069030272 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072830634 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064059749 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067177703 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062204141 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069965586 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063486482 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07767655 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068396075 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.076804195 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076843278 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066842985 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070664375 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072474518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076657051 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076427465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.076721127 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073627918 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.06969612 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06480458 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067357111 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068028285 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076467317 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.078889027 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079457121 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064246079 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064246553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068327603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066339356 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078195379 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073404034 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06600218 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073257074 seconds)
  done (took 4.605116475 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082710646 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087150627 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080840417 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078836098 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097407736 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07905576 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085439491 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075203937 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074113523 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084201525 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070313545 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077419812 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075212478 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069232161 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073791294 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071014499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076219902 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070674161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07373291 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074462886 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085255232 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069440579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08517421 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076180475 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071550977 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077058443 seconds)
  done (took 3.682360153 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070206216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082362236 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089579126 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144933128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109486093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077212869 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078657148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088623561 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094562813 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065478391 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068783521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090183088 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089172338 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07112556 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105894342 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081182829 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079883292 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067055388 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071882524 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093676711 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086065733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082611262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092343933 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081652565 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065185141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06810886 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072269017 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079112573 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072272819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076801145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070023939 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069088173 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06643827 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076353579 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069755882 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064450217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089150851 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077154151 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077896915 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103903671 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074004438 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066033086 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092451395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124586927 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064443789 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067908971 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069227409 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076037582 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066347069 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091976601 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078713083 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064215894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065062752 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065493208 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065841756 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07929113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066511584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066350773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075375346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07096236 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086160045 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069537207 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084037273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064486369 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07460619 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065688743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065696619 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063750095 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094926928 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071048719 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112319639 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065266109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063126352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075908526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074911637 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070300191 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064178576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082379243 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074902037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068526217 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075670318 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06732016 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067861564 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094593169 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064595978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063880739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065716761 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068007002 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068255806 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064925744 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078100855 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064261614 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067920646 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079037947 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064203105 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065237918 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068177811 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066522271 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06406191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077542055 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068715397 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065778503 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075879174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065110741 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068096927 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077963511 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071668058 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063913803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066457163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067980148 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06626443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068359748 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068335897 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066560668 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071205307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071582758 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070153349 seconds)
  done (took 10.475838611 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166701407 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159391465 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066762185 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151101644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071813592 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07869759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152803288 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092457945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065950357 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06601768 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064942321 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.102499789 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.098910475 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107907331 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077351129 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06504273 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088263005 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105529714 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155105585 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150060901 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088465943 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07230507 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067679828 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066301673 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066293601 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073241696 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080372874 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07254523 seconds)
  done (took 4.371567446 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076162184 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089662542 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069497081 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076228503 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085744393 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066234525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067208292 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066555774 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079847306 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075766275 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065150839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070575958 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068924905 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068594581 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065720715 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071568298 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07183537 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064461115 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06908975 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070352598 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075129228 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091003257 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070758803 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064892597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067596824 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064765511 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074927936 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078442136 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065119713 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.087650722 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062923825 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069847786 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079016088 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06613986 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064909405 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065084889 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065280081 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065189048 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065478157 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063568756 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063734317 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069894896 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064017938 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07420331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078658668 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071933923 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067649745 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067896507 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067884752 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062795781 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067728564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067813988 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068690322 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072935454 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069337254 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067848312 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065940222 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09269522 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070685412 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064637155 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064973435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06379709 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067411781 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076271267 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08131858 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067373591 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064141424 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06541567 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07827433 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078612849 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064376669 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069465355 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062715496 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065684884 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067424484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067263049 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065854512 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063679255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065260407 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065144642 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065546181 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064822729 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064893238 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067898515 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063036414 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064034604 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067231694 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066930338 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074956976 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064445928 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068711728 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066315036 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063893784 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067972819 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071060585 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067937117 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07862672 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077124971 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065340464 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063368508 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078391698 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067696388 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064447418 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070686961 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069293151 seconds)
  done (took 9.001317614 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086348404 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067341437 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081428488 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089098411 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076075027 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070891586 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075521268 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066301866 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081960326 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064570743 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073600228 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064644161 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076316383 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074859498 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06676707 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075262272 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068319089 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082230035 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079255554 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064292854 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073955248 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076697565 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077290588 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078891985 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078712583 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079955197 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077168523 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.06890957 seconds)
  done (took 3.80202269 seconds)
done (took 37.583227017 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.728139141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.903869961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.724052934 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.927818788 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.770049078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.850763812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.838266329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.715616417 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.869784915 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.770317396 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051807008 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.201335283 seconds)
done (took 65.067100882 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.791214123 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879014388 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980268264 seconds)
  done (took 5.513122514 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.98249296 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.363881533 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.980542565 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.715743008 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.722168199 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.146534968 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.504365873 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.16426032 seconds)
  done (took 30.251190781 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.778339434 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.937438504 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.366758206 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.402873208 seconds)
  done (took 15.182126401 seconds)
done (took 62.466272264 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.766608052 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.715843041 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.760927093 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.750903862 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.722909563 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.718963338 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.718095227 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.71871371 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.776187035 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.984626575 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.717023541 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.732904226 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.719566367 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.754803495 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.454387057 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.784552298 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.733612057 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.733273203 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.736766911 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.742374621 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.727087172 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.730704555 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.20033497 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.905393828 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.323725294 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.002205609 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.245913705 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.125407533 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.736640205 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.722885197 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.759553396 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.967934562 seconds)
  done (took 202.845781755 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.724064758 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.512979907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.596637933 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.733347937 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.05779325 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.901269229 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.821236247 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.142137477 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.725918127 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.743281819 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.867673438 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.72478904 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.902070911 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.669230153 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759303837 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.742210137 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.873352192 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.952659149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.762342316 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.885300533 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.728180535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.684645183 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.630193236 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.879642754 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.752252049 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.794342922 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.750091658 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.725152235 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.907249704 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.845682185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.724127606 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.750596698 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.885465278 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.59199916 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.73571223 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.751008945 seconds)
  done (took 166.894155447 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.910515317 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.731113866 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.726486518 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780400525 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.845371555 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.72761035 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.37262422 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.735190044 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.424349501 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.729761558 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.724384216 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.724907207 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.724931292 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.737844338 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.801390927 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.728161319 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.739039486 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.726238413 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.750788112 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.72718643 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.722796946 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.724389187 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.724664092 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.725077434 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.72548228 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.725827366 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.028741672 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.96789386 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.727081172 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.726931488 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.244696348 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.73814762 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.19348688 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.730332107 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.816781144 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.782218238 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.840594601 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728840245 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.943467245 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.799150949 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.72711999 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.72560403 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.790465235 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.739249601 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.727494153 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.72846431 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.731610691 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.791469899 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.965006633 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.727782578 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847329778 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727664292 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205537228 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.727370158 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.726108315 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.726098752 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.308525751 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.730825578 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.727650132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.73309066 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.7332947 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.727266517 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.728945256 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.114543753 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.798086487 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.728420011 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.135650433 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.930234748 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.731083577 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.134267053 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.958382023 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.727382867 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.72690187 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.727283131 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.730863761 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.727692872 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.730085769 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.847516533 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.73701553 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.853734358 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.811348458 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.848812223 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.730223786 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.728959619 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.73770452 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.728990176 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.558395558 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.799936096 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.764602973 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.543969333 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.731009548 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.103137841 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.488268246 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.729999366 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.728535183 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.741120338 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.728894762 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.729688379 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.730064564 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.808406719 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.728993625 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.850091683 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.445904678 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.943848232 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.729576785 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.729329321 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.735103094 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.81007739 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.850306083 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.731769102 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.795890933 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.735852611 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.730350561 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.804839295 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.731602213 seconds)
  done (took 395.523672183 seconds)
done (took 768.885593437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.375057775 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.347376636 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.445606625 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363624066 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.338608155 seconds)
  done (took 13.536257634 seconds)
done (took 15.202913588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.745511474 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.73628876 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.788378236 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.812706319 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.746059067 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.749319639 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.812608961 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.748908313 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.780154516 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.786028898 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.815457704 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.81623637 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.754174354 seconds)
  done (took 24.759890125 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.742183327 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.879721324 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.956417628 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.968732345 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.740020523 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.960254673 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.798609071 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.872287195 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.887790488 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.967826637 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.971643869 seconds)
  done (took 22.41518832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.740384202 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.879644334 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.959339992 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.776316821 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.742125802 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.966970585 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.806446764 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.886626494 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.884108644 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.968544723 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.981671805 seconds)
  done (took 22.269993477 seconds)
done (took 71.111808723 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.735433395 seconds)
  done (took 3.40412675 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.760373217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.901773037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.736286856 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.735061445 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734928664 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.735944065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.734020125 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.735873072 seconds)
  done (took 15.746181527 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.737169123 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.735224212 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.735562067 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.735434393 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735284247 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.735705126 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.736617675 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.737271807 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.73592334 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.735870508 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.735668579 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.73631513 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.737029432 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.736834732 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.735427577 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.736803962 seconds)
  done (took 29.448612854 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.737883191 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.735518932 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735910294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.735343145 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.736163975 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.737485117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.738347871 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.737014594 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.736285484 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73722177 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.736263232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.736379037 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.736454181 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.737004455 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.736771245 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.737320619 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.73677635 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.736396614 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.740846135 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.736621184 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.736530572 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.736669121 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.736790172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.737408681 seconds)
  done (took 43.361202056 seconds)
done (took 93.638694461 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.548077631 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.411451998 seconds)
  done (took 9.631079671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.741162854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.737268415 seconds)
  done (took 5.229262223 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.73781561 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.738860083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7374134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.738948633 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.738247446 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.738512744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.738897685 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.739804259 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.738784173 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738693295 seconds)
  done (took 19.058264832 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.738980047 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.739317872 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.738630054 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.739334033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.739314345 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.738918183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.737959236 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.73928454 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.739824087 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.740147149 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.739205525 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.739013453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.740533583 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739147759 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.739460227 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.739504917 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.739421753 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.739884639 seconds)
  done (took 32.980337512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.739580188 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.739563884 seconds)
  done (took 5.153074801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.738887201 seconds)
    (2/7) benchmarking "second"...
    done (took 1.740436769 seconds)
    (3/7) benchmarking "month"...
    done (took 1.739732663 seconds)
    (4/7) benchmarking "year"...
    done (took 1.739667723 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.739978263 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.739516991 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.739962778 seconds)
  done (took 13.851078949 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.740008021 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.896584803 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.954961654 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.594275261 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.741326493 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.742963095 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.093542357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.743252838 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743706278 seconds)
  done (took 19.924061311 seconds)
done (took 107.500268148 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656274275 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.742441873 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.992778741 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.805446397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.805156552 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.07752844 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743857356 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.00810286 seconds)
done (took 42.50627928 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.809367467 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.739080814 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.768993681 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.76712367 seconds)
  done (took 21.95105931 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.740809732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.101535989 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.764405709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.571755583 seconds)
  done (took 21.866881868 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.125098237 seconds)
    (2/2) benchmarking "read"...
    done (took 2.09164696 seconds)
  done (took 5.895708706 seconds)
done (took 58.199910629 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740480736 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.741953064 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.74188193 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.740253271 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.741018451 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.741979588 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.741016345 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.740946922 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.740557949 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741080723 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.741057557 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.741149425 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.741218706 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741163557 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741760407 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741690854 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741883304 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.742405855 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743073973 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741991049 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74152059 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.743366652 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742522428 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.743025629 seconds)
  done (took 43.475225109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.742341034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.742280369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.742285786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.742805329 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.742457702 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.742574231 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.743078562 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.743352185 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.744027138 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.741729796 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743476419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.743205724 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742873459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.742880662 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743774394 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.743436829 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.743738657 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742908295 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743587825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.744252142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.742951221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743422145 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.74300742 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74311874 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743340235 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744079754 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.744626823 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.744477017 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743926532 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.744035807 seconds)
  done (took 53.975163496 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.74438329 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.744176347 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.74504859 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.744626393 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.745113624 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.745211187 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.745201246 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.744436205 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.744584565 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.745247431 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.744582139 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.745916121 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744727381 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.745243168 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.745364839 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.746102922 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.745175456 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.745705015 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.746914254 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.746800358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.745102625 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.745792691 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.746126082 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.747591675 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.74559739 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.746545634 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.745789604 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.746381544 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.747420775 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.746217238 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.746797553 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.746412188 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.745958504 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.746702698 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.747769891 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.747691129 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.747280248 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.746340386 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.747017223 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.745937113 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747884738 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.746907058 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.747360495 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747676154 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.746525995 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.746878904 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.747181869 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.74641195 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747522095 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.746195605 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.747019628 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.748855399 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.746306735 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.748969364 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.746928866 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.746466523 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.746917574 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.74798449 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.747492691 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.747814477 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.747704415 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.747452528 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.747868491 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.748628507 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.746955254 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.747685144 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.746401521 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74777895 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.748306183 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.74946794 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.748844102 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.747005212 seconds)
  done (took 127.43509686 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.74835575 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74893879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747463422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748101947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749674884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.748143628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748815346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748813235 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747147878 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747920123 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748397816 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747779393 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74832073 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748075219 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749217222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747842883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748060159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748960546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749177177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750023112 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750338272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.750308588 seconds)
  done (took 40.151504474 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748638067 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.749882784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748613237 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.74843663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748295244 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749498703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.749724762 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748969344 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749472992 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749806864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749028755 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749431418 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748549852 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750149945 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749872666 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.749890358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748766908 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750125173 seconds)
  done (took 33.170848585 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.750137356 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749082077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.749490458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749541617 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.749111686 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.751047906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750614091 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.750211828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.749264941 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.750428097 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.750119942 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750200436 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.749831974 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751090845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750347651 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750817349 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750504803 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751136188 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751544794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750859235 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752294675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75105139 seconds)
  done (took 40.193329129 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751602998 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750902108 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751701973 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751401364 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75190149 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752189068 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.751951618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.751784793 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.751410486 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.751657053 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752479315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.753216687 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.752225386 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752088076 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751939167 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751423396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753373742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75225016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752352694 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.751862114 seconds)
  done (took 36.725315313 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751910474 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755528958 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752231757 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752090944 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752043821 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.752893313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753290218 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.753485508 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752850043 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753196273 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753058064 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752964388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753271295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753967487 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754195888 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75297359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.753016206 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75468597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.755020086 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753605898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754743458 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753646763 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753872608 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754253965 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.754734104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754259478 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754362848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754814233 seconds)
  done (took 50.787569886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753757582 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75481847 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.75496649 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.754493937 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.754683321 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.754507832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.755206283 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.754615139 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754938042 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754789964 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.754941992 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.755122526 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75619462 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754403518 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75347784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.754124834 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753989326 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.755195285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754948446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755274005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754595391 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753978216 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.75438487 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755164955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754072124 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.754927736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754205776 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755121325 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755100599 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756149437 seconds)
  done (took 54.330616613 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.775189659 seconds)
    (2/2) benchmarking "in"...
    done (took 1.776971553 seconds)
  done (took 5.241093351 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75510245 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75725839 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755799368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.755720003 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758595739 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755993744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756349593 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757545237 seconds)
  done (took 15.74076024 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.756446383 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.760049407 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.756699799 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.758503454 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.756640076 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765185488 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.757363621 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.758619092 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.759438006 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.758595678 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.760581914 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.760680794 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.764138353 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.761616473 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.758310116 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.759361356 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759967856 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.761271173 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.759173575 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.758114747 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764208292 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758370841 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.75831162 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.758106522 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.757695067 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.76089852 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768503314 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.760674388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.760544169 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.758928597 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.767100007 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.758374313 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.760405384 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760821744 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.758286363 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.758924894 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.767206541 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.759744913 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.758556406 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.75805651 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.7622832 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761393414 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.761884225 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.768481602 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.759695776 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.759425082 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.759333886 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.758402205 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.760033689 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763642428 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765832537 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760834993 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.759783882 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.759871654 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.762965698 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.759488464 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.759265077 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.763025284 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7667816 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.767758499 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.764765918 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.781036 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.769185046 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.760386473 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.75973814 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770095685 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.781668655 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.762533882 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.762261591 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.759734881 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768514472 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.761155381 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.759689327 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.760323391 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773320209 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.768379328 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.759810856 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.76154456 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.761357914 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.761013066 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763072488 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.76234155 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762996693 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.762484315 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771292494 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.784791732 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.762367273 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.761656178 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.7655796 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.763569923 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.765903533 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.766606763 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760709791 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.761110965 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.764504909 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.762479214 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.760691329 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.761467397 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.761161574 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.773628445 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.763245268 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.760813967 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765849327 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.769334521 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.762430585 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.762601637 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763317642 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.761634774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.770743505 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.761900406 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.761368048 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.764296669 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.762800744 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.766639446 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.76207437 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766620005 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.770990521 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.772313311 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.764972881 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.767124726 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.768803767 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.76591802 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773886159 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.784667887 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.763561047 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.768164888 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.769164717 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.774700119 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.769423655 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.764728894 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.767233272 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.764302051 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.763490734 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.766776046 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.76446195 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.764058846 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.763735818 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.763979578 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.764641847 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.764953491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.765787012 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.76727449 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.767759508 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.763905228 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.768167843 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.76419612 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.768184791 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.775528876 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.764848758 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.76506926 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.765498203 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.768619889 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.766928185 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.7668685 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.764168622 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.765115417 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.765518722 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.765965655 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.768610578 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.765729102 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.765683532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.765317272 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.770368241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.7651245 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.767136054 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.765531249 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765794477 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.766165514 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768969874 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.76701623 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.768393384 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766048338 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.770443936 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.766497923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.764834924 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.766268369 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.765586414 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.765468831 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.769687582 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.777827494 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.768968396 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.777368463 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.76666303 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.77443411 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.766713599 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.768380838 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.768210433 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.767398556 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.766034606 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.767119803 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.767239852 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.770850391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.787035576 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.777116677 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.770168608 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.767756879 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.771856296 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.771786065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772885335 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.766046884 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768751472 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.769575957 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.769303916 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.767635516 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.768327842 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.770914795 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.767406767 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.768039462 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.772626468 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.768064164 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.767565063 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.768601865 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.767451159 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.76981381 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.767282483 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.768699841 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.768611242 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.767652356 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.777353336 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771896964 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.767473383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767936176 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770610617 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.768165393 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.769230993 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.769819558 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.773006822 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.76834447 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.7702342 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776306342 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.769934037 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.768390222 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.767853167 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.768299497 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.771743729 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.769174109 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.773328122 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.77573242 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.773239197 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.768662012 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.773747881 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.76920085 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.77172081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76881615 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770919513 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.770884367 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.772843568 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.770334652 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.770207812 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.779895129 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.776962437 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.771784971 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.769634555 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.771535801 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.77196067 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.771812434 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.771053511 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773529632 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.778130537 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.777152227 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.770357174 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.772029198 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.772923293 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.771941134 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773873877 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.771947937 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783824146 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.780912385 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.771088531 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.771387126 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.770681537 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.774286455 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.770770367 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.770161257 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777733486 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.772194722 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.770866197 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.773260483 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.771169318 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.771167729 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.77774494 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775229896 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.775779941 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773851867 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.773265362 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.77267919 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.772886746 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.77452728 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.771420245 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.773475405 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.775103806 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.771797327 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.773296287 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.771819215 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.782136089 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.772821815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.773742255 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780366273 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.775034252 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.772026725 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.774450313 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.772247796 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.773418256 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.77576753 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.772998645 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.774476259 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.772531952 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.777199082 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.783945734 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.77701159 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.78030982 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.775661304 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.784796126 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.773750757 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.773982582 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.774642982 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.77776982 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.78091853 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.774206607 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772300374 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.782539396 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.773692484 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.774502702 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.777655232 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.773109276 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.773572709 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.774051604 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.774420111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.779621648 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.777351852 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.772774352 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.774426352 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.773621676 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.772803056 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.777626243 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.777700454 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.775098253 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.776167803 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.773470176 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.7744125 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.774158796 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.774393382 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.774026823 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.775007749 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.774757014 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782577559 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.774468191 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.774929044 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778685559 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.774759288 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.785889624 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.775725762 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.775581227 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.775518462 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.775721521 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.777070919 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.775429794 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.776372325 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.775673695 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.775910764 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.776747671 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.788578748 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.784328488 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.778059165 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.778358741 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.777132458 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.778976078 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785635502 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.79817894 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777403375 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.778915051 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.78088732 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.784979351 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.779460299 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78189687 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779499218 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.78334821 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.77834306 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.775396352 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.779963638 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.789239565 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775855143 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.777512851 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.776412591 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.782130297 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.777375422 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.77758442 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.777608306 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780083449 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.77826569 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.789283166 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.777685483 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.778968519 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778082439 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.776244396 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.777952647 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.776946035 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.779917655 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.779990643 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.778667446 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.776662686 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.780501423 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.783152367 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.777954354 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783430312 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787434612 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778046847 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.778457032 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.778588401 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.777707438 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.781546942 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780214168 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.778082949 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.780739671 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.777653667 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.779851873 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784658506 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.786907254 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.781407963 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.778595961 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.778343373 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.785447849 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.778697132 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.779506024 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.781852085 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.789508323 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782862165 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.790771345 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.787845207 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.780022893 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.780640654 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.787210226 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.786977301 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.779940016 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.779027746 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.778704764 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.782795554 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.782500578 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.78227027 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779309245 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.780045236 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.785081022 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.779537946 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.780587605 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.780438096 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.779174831 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.782684813 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.781948171 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.784993587 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.779630126 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.780242278 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.778913697 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.782258357 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781583422 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.784269643 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779844971 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.780373378 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.783404664 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.782728974 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.7837862 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.7800273 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.779910227 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.782779669 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.781043577 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.780755613 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.780858964 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.781235326 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.780098389 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.785614878 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.787377131 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.781008537 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.783541766 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.782808882 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.785775697 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.781070699 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.782368645 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781724407 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.782935214 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.79068777 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.78222474 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.782524251 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782236308 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.782697553 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.786992183 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.783874756 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.789105652 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782535988 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.782159241 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783324077 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786589813 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.790570773 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.787655396 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.786119894 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.789539784 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.788621322 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.784869735 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.781864113 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.782089306 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.78268212 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.783595254 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.788687464 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785272225 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.786481669 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.78259585 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.785225022 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.784409335 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.785382273 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.782878931 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.782871841 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.786709236 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792824721 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.792641783 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.782834985 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.785874143 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.783621378 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.786844198 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.793382322 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.783835957 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.783791392 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.783748686 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785878342 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.785735661 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.791327923 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.79158913 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.789189304 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.784360664 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.788469309 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.800976252 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.787657207 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79414962 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814956058 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.786430439 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.784105549 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785565421 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.784592243 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.786032879 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.788013121 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.785777687 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.794260987 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.785659255 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.784863952 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.793309011 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.785024236 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.784641943 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.78461943 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.786463639 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.791489194 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.785167794 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.7930807 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.786334271 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.786136358 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.78631816 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.786771795 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.785594722 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.784781114 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.785433996 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.788178939 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.784550122 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.785029443 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.794994847 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.78651923 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.788301149 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798729449 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.795751836 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.786338241 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.785948699 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.786638672 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792001358 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.78986891 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.786085265 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790113833 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.793128711 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.790389637 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.793869652 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.788673109 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.788339581 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788466537 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.786024617 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786678432 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.799938358 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.79824078 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.786321995 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.78871063 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.794957704 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.787521969 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.797153758 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.795028197 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787189372 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.790322691 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788441674 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.788018755 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.788550313 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.789163023 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.792077598 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.795624579 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.788804752 seconds)
  done (took 1059.640507669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788035732 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788528854 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.789042355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789116187 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788067584 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788717756 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788862761 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788550879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788392309 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788000712 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.788571478 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788673223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788124589 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788176438 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788264491 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788981078 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787818103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788561478 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788316778 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78945937 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788256635 seconds)
  done (took 39.278693656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.789046156 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.789739334 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788318078 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788830545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789546923 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.789047119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.788345029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78857859 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789041102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789768269 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.788740296 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789581985 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.790127079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.792259647 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790288699 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789193121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.789551454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79017347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.789569782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789121929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790205607 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.79008236 seconds)
  done (took 41.091043706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.790704878 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.790270778 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.79271827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791342747 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.7900208 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.791573013 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.790599714 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.792155283 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.790204354 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.791282601 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.798017287 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.797814887 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.791629679 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.792891333 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.790761694 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.79119565 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.937635787 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.7917857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.791261585 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.791227316 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.791867323 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.797975217 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.792071229 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.791173019 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.791523909 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.792635749 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.791999669 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.792398296 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.791055151 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.792418773 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.794877232 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.790816752 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.792665876 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.796540294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.792243707 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.79165444 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.796020325 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.792268465 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.791367601 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.791251808 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.802318244 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.814019858 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.791890587 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.792032752 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.799934562 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.79212962 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.791848354 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.795936844 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.79978283 seconds)
  done (took 89.743404941 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.791611435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.791996182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792193829 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793132024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.791366059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.792588297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.792310735 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791673779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792649496 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.7929773 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793014562 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.792104755 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792761103 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.792229095 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.792897535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79423137 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793118157 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793896136 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.794566756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793936953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.794616577 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.793433739 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.793372057 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.793460351 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793333671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.7931476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79488404 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.793709647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.793994086 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.793799019 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.794528918 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795017076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.794080455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.793558081 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794841375 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.793463243 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.794225271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.795004667 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.794909007 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794449969 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.794297761 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.794830346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.794856421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794475275 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793916233 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.793949794 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794460132 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793956152 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.793474058 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.793745565 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.79339643 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.794983636 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795173603 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.794619905 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794488568 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.794374873 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.795363194 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.795322708 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.795293976 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.79624182 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.794906302 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797328375 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.79580113 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.795828097 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.796324215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.796680241 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795766818 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.796905555 seconds)
  done (took 123.724445824 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795881389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.797220815 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796256673 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796784725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796947596 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.796862052 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797609007 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.797738005 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795647747 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797011575 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797704996 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794892326 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.796939301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795798818 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796681139 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797597271 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.797369543 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796896427 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798317555 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797578579 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.796286855 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798911859 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797066368 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797829058 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797120901 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.797003927 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796050442 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79658812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797334163 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797843491 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7976878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.798472107 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798024441 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79817366 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797965361 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797611505 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798716085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799260222 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.797908493 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.798240165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797497153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798837608 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798029025 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.798361998 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798520934 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798859126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.798244415 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.799284569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797765065 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.799153505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.798286736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799489477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79828264 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799272621 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798371057 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.80008675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798998103 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799305729 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798537538 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.800651906 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800125611 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.798704426 seconds)
  done (took 113.197256773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798590329 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799757495 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.799230092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.798923485 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799942941 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79888231 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798709924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.799803384 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799034422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.799174982 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798624622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800137059 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799449824 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799746558 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799605154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799522682 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800071547 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.799824886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79938095 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799790075 seconds)
  done (took 37.719852089 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.800344757 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.800394569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.799910999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799839995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.79973573 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800340735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.799977502 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799543014 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801348691 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800608752 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801109935 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.800272416 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80118317 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.799763546 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.800166485 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.800280268 seconds)
  done (took 30.536777021 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.80072223 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.800557155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.801053014 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.801423239 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800599104 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.802369039 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.801325429 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801958029 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.802395263 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.802283887 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.801507936 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.800493181 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.802952098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.802691324 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.802328004 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.802667141 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.803220035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.802935557 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.803139982 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.803642633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.804569197 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.802643036 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.802737568 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.802830528 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.801941813 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.802875628 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.801565523 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.802356182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.802168351 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.803727329 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801305473 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.802182391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.803469275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.803125536 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.802296754 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.803474466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.803032732 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.803486362 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.80241904 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.803711003 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.802157727 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.802382688 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.802414014 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.802880963 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.803276757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.804289231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.802842618 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.802819979 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803563878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.80269997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.802989991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.804206389 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.80299738 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.804797921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.80324929 seconds)
  done (took 100.879377976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803529556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803924436 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.804425771 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.803670681 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.803630133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.805306103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804438033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.804709479 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804196547 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.804894034 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804880611 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804379097 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805783805 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80412792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806061351 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804848187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805489677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.804714392 seconds)
  done (took 34.218821851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803892549 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803905216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.804605498 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803573044 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.804525367 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804803396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806108829 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.804790161 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806208593 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.804839618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80461468 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.805377769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805675951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.804867145 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.806181817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805615917 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.805621015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806243428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.806174357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805207591 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80470897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805921974 seconds)
  done (took 41.450150753 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.805592682 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.805565406 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.820513558 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.825786578 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825026151 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.839794439 seconds)
  done (took 12.660203199 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805315685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80542972 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805870101 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806885332 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806555817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807151415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805569127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806647442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806385319 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805776073 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805637693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806854757 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806593066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808952423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806688087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8076553 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806392634 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80658694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807713248 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807610497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807182282 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806886043 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807132009 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809933313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807534156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807794746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808136295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808570619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807836246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807789661 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807684823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807273982 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807604524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80733557 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808171917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807842923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808749118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807478482 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808463597 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808342817 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807905237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808721633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807907107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80817419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808121176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809216347 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808909421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808492782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807737863 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808190777 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808146998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808142646 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809341548 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809160941 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808883151 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80919196 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808305425 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809068619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80971231 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808915297 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809431383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808335146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809234086 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809295789 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80861971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80895127 seconds)
  done (took 121.055152701 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810277984 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809882954 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809441405 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810046249 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809474313 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809944793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810424923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810177216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809331617 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808941737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810876022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810002302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809700501 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810904521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810015583 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811851602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810876168 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810990898 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81107727 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810884816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811273242 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810600096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811447852 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810766046 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811222792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810105506 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81058769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811651011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81142651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810582726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811089274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810685363 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811088582 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811429885 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812557314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811331451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812361548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812033453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811637622 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811682628 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811990256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812822609 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811710913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813054948 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811657921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812123867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811465877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811998902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81301523 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812211586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813094746 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812415044 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814252486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816286932 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813487139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813680114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81284198 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813617813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813564327 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812729276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813133112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813292842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81224728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813130268 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814101096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812276283 seconds)
  done (took 121.310523268 seconds)
done (took 2469.413600469 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.880762358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.8637987 seconds)
  done (took 15.489000615 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.978373018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.930989931 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.8166528 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.837020629 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.815349634 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.837354044 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.817177242 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.815627155 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.816207688 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.816818402 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.818978207 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.001793317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877839741 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.816377097 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.816480552 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.907730653 seconds)
  done (took 51.476676691 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822629736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.821516692 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.832881978 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.823009603 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.822141131 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.835169317 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.852929979 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826460971 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.858136428 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.839282433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.893509907 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.836661263 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.824972969 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874173622 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.840068822 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.838818431 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.919044007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.901365911 seconds)
  done (took 35.00970906 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.902199501 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.831062837 seconds)
  done (took 10.490383406 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.836967867 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.830486226 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.847621406 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.827234905 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.83113805 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.812271908 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.833306795 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.833537434 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.816609812 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.863544843 seconds)
  done (took 70.084262878 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.827969463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.826977537 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.824419592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823574603 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.818001522 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.820428547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820901605 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.818682225 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.477818996 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.857521771 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.82897365 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.829313267 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824080435 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.822201288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.821068221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.84894828 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.936271235 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.820793053 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.821162367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.830352361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.823472833 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883259857 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.837828736 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.825847187 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.856637342 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.482728636 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.829887839 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.82914347 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.933589999 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.819236908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.824283267 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.033805879 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.827230679 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295071716 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.088151119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.830509171 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.835125063 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.83138432 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.821373699 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.942000708 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824996893 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.82917006 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.744331774 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.061655993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919654514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.870735932 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.141627505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.837647849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.82442801 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857994469 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.827102198 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825294477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.842108462 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.343679671 seconds)
  done (took 130.24863455 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825318412 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.16615983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989297759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825565184 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103767834 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021847684 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819590712 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868438634 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.82001518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047055794 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.069180142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926619582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.819576263 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.822160853 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821938712 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.817502171 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975465559 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.891885054 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.820196228 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.822369068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849286467 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06370848 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940714095 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823514774 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.847670616 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031973778 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938206627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927854436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.611905855 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.821136875 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884400793 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820594284 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.824413075 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.818193083 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.977950637 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939629639 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901044597 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.819558811 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822556413 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82252077 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.480890597 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030180523 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913385575 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.948086436 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071388516 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02423792 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.599163649 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.822104891 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.561763067 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983678351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.051127465 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.054590078 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.939402185 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824855867 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.346460282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82119267 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.82362032 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066828789 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037196635 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.918537056 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.82358679 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.823947912 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822120821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061115152 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822085934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91394377 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.822143632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.822030474 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921903936 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.922709742 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.047267242 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030068484 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.850988716 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.175187091 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.327175891 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.072280838 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885074921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06973282 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.823897486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820507611 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90248402 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.662841485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07616968 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.062239644 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06324791 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854356741 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541360917 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.823111056 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.048998904 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.043112283 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080990642 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072357227 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.056529279 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.133543087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.822628954 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.826573805 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.057496895 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.945493588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82393158 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.172885032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054231041 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395272252 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852187796 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128033605 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955518042 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.825590212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45182782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826332015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056436059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864201396 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829011633 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827521505 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040560775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.810851078 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827951598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.697112876 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.884065267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829597526 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057522655 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829807434 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096489187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83147474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058689582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.374046342 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851950658 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.05339422 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075464914 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.826077811 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072310834 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067034629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941029884 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093826755 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.70953119 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829691988 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114040122 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.826824429 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.827925236 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994280319 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830593226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965490583 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.825032935 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117411741 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843727054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051570168 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821461395 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071001885 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293694783 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869313548 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823237028 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942939598 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823425347 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.650832017 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973671986 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818987412 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817470254 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.699296092 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.815514404 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965750013 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.040512805 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833099773 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888373619 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.473585856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808284564 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897758552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831049042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.197432014 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.809192929 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.056775387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.811351634 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.811869234 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803829125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03804965 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03621794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.803957697 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.79660994 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.703239922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.797893996 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794997933 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973811362 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.188750341 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.789455178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992454973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789386897 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910397042 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786417595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.859841672 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.119076635 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.782309506 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.779780627 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.781972782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.78174443 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.781295859 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037601197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.804670366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.310304358 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.911916159 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052289075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.080728874 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.015314443 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.816927181 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776657839 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027239511 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.775771518 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.833430561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.774023491 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788809137 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999697 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.768985763 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053955821 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038373217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801074681 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817111799 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.767376071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768538854 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.764413574 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.908627071 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84713148 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763810511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.760961576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.878735057 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.876862116 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966391534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.760932468 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.827952696 seconds)
  done (took 892.402763822 seconds)
done (took 1206.94665167 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.75938766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.75357495 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.757273495 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.757859354 seconds)
  done (took 28.718321004 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.760147282 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.756377611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.757266878 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.760795431 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.757149264 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.759085476 seconds)
  done (took 12.239268865 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.838738424 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.761032567 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.761222645 seconds)
  done (took 21.053713802 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.831813347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.141146673 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.899896925 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.170624709 seconds)
  done (took 9.735650947 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.763304693 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.756472715 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.759497433 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.761258583 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.759152092 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.758629028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.758491013 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.760260762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.761864594 seconds)
  done (took 17.529963149 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.93240715 seconds)
done (took 94.904060169 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.180426456 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.897198682 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.206848401 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.832938689 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.929055089 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.146130905 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.961376099 seconds)
    (8/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.528060252 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.826395971 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.417316107 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.832376292 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.84301403 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.282749768 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016330794 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.079809136 seconds)
    (16/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.080998613 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.973252289 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.833711933 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.106514838 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.202727319 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.829703999 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.999264763 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.850534972 seconds)
    (24/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.958438838 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.85108082 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.829582898 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.915641531 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.797159017 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.977393766 seconds)
    (30/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.712776131 seconds)
    (31/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.630254573 seconds)
    (32/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.831596263 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.199224423 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.832397103 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.91725371 seconds)
    (36/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.831848484 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.382775877 seconds)
    (38/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.911662401 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137246651 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.590540963 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.836125186 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037140551 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.915671442 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.889877164 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143201284 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898102306 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.928622376 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.844123907 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.998041662 seconds)
    (50/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.908495026 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.971402302 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.939112154 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.981724035 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148024138 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.228495243 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.714566971 seconds)
    (57/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.910220947 seconds)
    (58/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.980813366 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.837668422 seconds)
    (60/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.290936 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.251552597 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 2.046634349 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.051186322 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.708341182 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.871192726 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.562222302 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.081543504 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.827718787 seconds)
    (69/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.237959875 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.957376182 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.986409256 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.850421471 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.83111621 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.890952951 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.895932742 seconds)
    (76/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.485270754 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.924517545 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966438578 seconds)
    (79/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.830948914 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.886761694 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.847598607 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.831488654 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.72889064 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.913545204 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.465689035 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.855561138 seconds)
    (87/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.867329314 seconds)
    (88/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.929631369 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829129886 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.914257188 seconds)
    (91/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.931505524 seconds)
    (92/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.158531018 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.220936694 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.985380052 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.83217899 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.964812511 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.835575786 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.803199869 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163946471 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.100740498 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.938998689 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.83984642 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145128059 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.851937402 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.204033537 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.148530965 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 4.737541568 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.073826755 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.83673756 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.44761341 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151328218 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.852751399 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.832926811 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.129452089 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.851455317 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.894730174 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.834714527 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.032721118 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.409940094 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074016424 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.092335388 seconds)
    (122/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.521352579 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.7777806 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.026409645 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.811094861 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.302605599 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.833559198 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.121175331 seconds)
    (129/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935639776 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.858964249 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.62306052 seconds)
    (132/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.911948879 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.932962322 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.924097681 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.850705895 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.139577985 seconds)
    (137/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.771457767 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.759234095 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.071690867 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.863709521 seconds)
    (141/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.958312799 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.083015461 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.912464146 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.838420822 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.829415434 seconds)
    (146/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.221470722 seconds)
    (147/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.93190065 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.853291405 seconds)
    (149/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.95971973 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.133793264 seconds)
    (151/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.831327234 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038733847 seconds)
    (153/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.860891095 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.945171367 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.855631575 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.847347396 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.137182868 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.932378297 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.896891043 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.908343851 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.133092052 seconds)
    (162/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.022904618 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.847735133 seconds)
    (164/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.138936654 seconds)
    (165/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.927132513 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.96953478 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.84993977 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.435310688 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.211779486 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.953573648 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09617455 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.850511778 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.825032527 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220413796 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.644909709 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851820889 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.950022375 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84631045 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.83637873 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.930164587 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.874553825 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.905741677 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.271422684 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.491797216 seconds)
    (185/309) benchmarking ("sort", Float64, false)...
    done (took 5.546678677 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.196745417 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.879040605 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.209255943 seconds)
    (189/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.269474098 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.000425934 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004883576 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.147532662 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.898045775 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.928600581 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.129045355 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.809169658 seconds)
    (197/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 3.895369408 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.804656365 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.707450274 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.804288148 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.050869449 seconds)
    (202/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.702835251 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.939411015 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.887995622 seconds)
    (205/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067626736 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864009983 seconds)
    (207/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.797471783 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.226317249 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.815663824 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.900330669 seconds)
    (211/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.940722816 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.977977166 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.710300159 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998073873 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148677727 seconds)
    (216/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.544876249 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 5.521571116 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.010212002 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029038327 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.79410621 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.981188022 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.923016817 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.789873222 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.969587905 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.123462068 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.791544891 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.910686453 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.044399077 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.896150801 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.786640334 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.163627019 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.789660743 seconds)
    (233/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.686416598 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.786921801 seconds)
    (235/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.462198947 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.787287034 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.863927524 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.782595656 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.799230055 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.787336003 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.881580642 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.796627976 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.100633108 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.089771115 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.000905573 seconds)
    (246/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.291494998 seconds)
    (247/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.87277809 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.877575084 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.785717262 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.659645225 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.243171302 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.838489783 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.554397354 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.623489186 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.052213518 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.958579702 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.483144733 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.036720014 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.891275045 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.78477089 seconds)
    (261/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.787283953 seconds)
    (262/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.15691981 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.02737437 seconds)
    (264/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.142856198 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.980884162 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.281360075 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 6.793716311 seconds)
    (268/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.119000498 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.951054593 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.925239839 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91684955 seconds)
    (272/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.526680619 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.162091495 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.80865647 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.093331213 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.070379672 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.905964143 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.124698341 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.862822646 seconds)
    (280/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.101212755 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.867432257 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.795565774 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.828448693 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.864682344 seconds)
    (285/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.79137411 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.72855207 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.918004258 seconds)
    (288/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.865008634 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.789137449 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.628453011 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.107864891 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.807006699 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.046269454 seconds)
    (294/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.237250294 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896902206 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.814973711 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.120311434 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.0409167 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.040989536 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.795239511 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85646647 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.929400553 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.806348485 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.273813675 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011221166 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.935107692 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.80713374 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185773453 seconds)
    (309/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.169152819 seconds)
  done (took 987.069545917 seconds)
done (took 989.109513533 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.814750919 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.80830424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.790635367 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.81300526 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.903884798 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.835532482 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.80522254 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.795620171 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.841799073 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.84099803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.789962875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.832056961 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.792356584 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793495979 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.791199253 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809436917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.095590395 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.824996198 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.811401722 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.803669724 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.810971985 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.789316028 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.841101598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.832378805 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.795797811 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.796411191 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.796226635 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.812354762 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.90561432 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.796231976 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.797053007 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.806606709 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.094513616 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.822958725 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.79027872 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.811990993 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.804220171 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.805696804 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.796211572 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.825486172 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.186049762 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.831991274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.794278777 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.792615302 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.793351002 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.800015912 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.793356893 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.80000809 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809011681 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810248116 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.181364403 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.852563555 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.796442755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.792883547 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.807455717 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.793819966 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.799110815 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810006364 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.814219229 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811068208 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.087804548 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.832626701 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.79778642 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.813429281 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.804751836 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.217308513 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.834532469 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.80172401 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.188333956 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.842220419 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.218083997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.845798532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.797559928 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.810710938 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.827871428 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.098821939 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.824610072 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.7941415 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.804485159 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.792872174 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.807034343 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.810459773 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.799759014 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.794809646 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.812044556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.840905534 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.807922286 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.796540716 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.808238235 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.815359775 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.804466253 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.808413131 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.800157135 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.79293748 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806672597 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.800504801 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.799379456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.799869227 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.802004547 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.809409669 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.187241822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854364334 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.795524661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.793453149 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.796194872 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.81112915 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.188350949 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.83929518 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.821141423 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.845723619 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.798717031 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.090756567 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.833338178 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815592623 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.808934075 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.800119552 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.795638975 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.087993857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.217167194 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.854159679 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.7981465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.795874967 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.815449508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.799010828 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.795858764 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.10168468 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.83230386 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.814007586 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.920232979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.811953331 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.829872868 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.796930462 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.802774828 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.84337821 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816224438 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.830093247 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.799894543 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814275639 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.815770614 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.795083129 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.81038122 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.807443143 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.795077691 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.802253851 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.79210211 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.839780519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809771454 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.804344299 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.813200671 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.916123914 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.790052711 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.083924986 seconds)
done (took 282.604325416 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.862407683 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.788146433 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.906046115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.786406506 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.875630922 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.863214628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.785732582 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.787146355 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.786492125 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291032371 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.786819593 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.792887756 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.788507371 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.786441582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.856949132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.787705144 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.787693565 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.237862822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.78891131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.867539832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.785374855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.788266488 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.788389292 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.30949224 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.786721085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.786821352 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.867047251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.787171747 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240606829 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.787221605 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.787200371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.253742576 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.868460999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.815402876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.795462543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.795193366 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.876454979 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.799824092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.854969015 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.85219495 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.907055651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.819301408 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.788732151 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.784842193 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.786014111 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.782129363 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.782793999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.813494623 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.786869987 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.790716812 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229331202 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.783208534 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.7860957 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.778623325 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.778480209 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.807859473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.780455946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.779012893 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.856922058 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.776183017 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.844577873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.281666841 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.288672124 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.777835226 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.775382235 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.772588841 seconds)
  done (took 179.693824825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.84097077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.851118328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.839407891 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.776643378 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.825935779 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.843892077 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.77890728 seconds)
  done (took 14.457871015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785680411 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.776908526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.827274556 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.82486676 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.776887924 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.950615071 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.788726018 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.780850982 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.802465833 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.77671057 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.41139956 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825493215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.783443725 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.775613298 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.788851035 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.833471967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.77889267 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.775749858 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89463867 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924748449 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781806368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.785019478 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.803566408 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.788207209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.779058891 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.777701529 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.777815776 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.782924027 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.775004965 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.775594696 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.776321077 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823258603 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.770326224 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.767094076 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766896356 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.768469328 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767651959 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.76868444 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.768227995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.767328708 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.765992289 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.766930426 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.764358169 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.764621355 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.766397714 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.79155618 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.766526187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.767483137 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.766769561 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.769247774 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.793651092 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.764085072 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.767484509 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.772001722 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.808972133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.771454911 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.767056732 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.767863835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.767821627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.767248992 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.765886438 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.914458688 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.816698425 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.768479508 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.816465539 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.918743672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.767455275 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.768948901 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.767858343 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.858463318 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.768122454 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816788992 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.768182564 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.883139127 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.767979722 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.947717155 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.790747346 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.769604587 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.771132858 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.766835996 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.775866999 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.767183084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770153614 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.77520288 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.773605917 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768770313 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.768387893 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.770685713 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.776573927 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.767606621 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.817484854 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.768503191 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.767851844 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.909095939 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767903169 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.885636688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.79686571 seconds)
  done (took 196.237844032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.776719027 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.774283621 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.770751153 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.785309563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.768503214 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.768176916 seconds)
  done (took 12.343039723 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.772857082 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.774840079 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.771254107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.768986081 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.769503254 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.769655835 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.768217686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772576486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.774873802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.76836359 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.76844934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.77110099 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.771116762 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.771189159 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.769594396 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.771579066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.768200601 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.772084198 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.770051072 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77145931 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.978123017 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.768660563 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771047553 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.774267342 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.774707411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.771825293 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78449162 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.770172541 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.772409401 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.778081512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.775910361 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.770258256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.774849741 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.778811105 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.774932774 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.776431987 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.776933526 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.774401955 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.772893236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77354203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.776243992 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772846201 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.77325892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.774074073 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.775625179 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.779949161 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.776463072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.786120568 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.774241538 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.772536824 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.771285839 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.772154921 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.773766936 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.774444837 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.777636172 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.781398225 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.776731698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.772188946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.772176495 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.774434153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.777343472 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.773260776 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.775140381 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.778120826 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.777675465 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.771401588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.775625155 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.776847195 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771195971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.773578567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.774610652 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.774044943 seconds)
  done (took 130.613987177 seconds)
done (took 535.082928806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.599641054 seconds)
  done (took 9.300694778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.899421458 seconds)
  done (took 8.700957803 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.32455029 seconds)
  done (took 10.029550705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.794256842 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.855963877 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.777858412 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.770722959 seconds)
  done (took 28.922344669 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.078334914 seconds)
  done (took 8.781662507 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.799152332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.770598662 seconds)
  done (took 15.335944983 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.866774811 seconds)
  done (took 8.570872452 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.167463439 seconds)
  done (took 8.878947326 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.79806388 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.79447374 seconds)
  done (took 15.317312155 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.777409681 seconds)
  done (took 8.482669577 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.85032367 seconds)
  done (took 9.638313903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.800089883 seconds)
  done (took 8.574338937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.809129723 seconds)
  done (took 8.51322643 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.855352392 seconds)
  done (took 9.561249871 seconds)
done (took 160.311282433 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.792764761 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.780127882 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.77683305 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.775155255 seconds)
  done (took 28.8283318 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.809937428 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.810976479 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.819883994 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.811404716 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.802165128 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.80283734 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.81238004 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.811418827 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.802129624 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.81016106 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.811866941 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.807767636 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.810748346 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.819252553 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.821447342 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.811431634 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.812717579 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.814004963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.803205567 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.8218659 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.811331778 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.812802806 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.777997381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.77678058 seconds)
  done (took 45.112879028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967496597 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.850327556 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.932290341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.829320953 seconds)
  done (took 9.285649976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.776816868 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.843226628 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.82912659 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.825385558 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.828644942 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.880362939 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.830235567 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.916132617 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.90569036 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.909179713 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.78663903 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.798730305 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.802208034 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.826277845 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.880318322 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.778549872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.777294946 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.894537846 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.847381235 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.964360127 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.77764079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.832685404 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.828940319 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.832314932 seconds)
  done (took 45.878694298 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.780588113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.788663021 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.78724949 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.781480369 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.781910666 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.781639314 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.786958736 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.782349572 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.802796656 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.782269108 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.779745142 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.781758935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.787882578 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.780969836 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.781451532 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.794057455 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.795802606 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.78253467 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.785668374 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.789152079 seconds)
  done (took 37.421807068 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.778341477 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.625775443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.123014236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.033257545 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.781968922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.780661885 seconds)
  done (took 30.830212954 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.792301531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.788397991 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.781389058 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.840849646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.92020751 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.788032139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.781702277 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.793642405 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.829700883 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847201134 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.798990701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.811304949 seconds)
  done (took 23.483418299 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.782247343 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.779221277 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.781157967 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.792385411 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.791797451 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.785483293 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.790109452 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.781618463 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.793273982 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.797303095 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.787292689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.793117088 seconds)
  done (took 43.169099374 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486431442 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854944973 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781372486 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656607853 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231143661 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331657534 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.672747273 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.459047159 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410457602 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.805931947 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076417331 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87686393 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.962232084 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.879180602 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148257434 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.200387876 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064461944 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11884705 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.613207027 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.972116017 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.081253721 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091435757 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.165282412 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879763512 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88073446 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.884392475 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419855794 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.633029641 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974125635 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.232078536 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191712614 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.828670886 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934679659 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.882244598 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.890906279 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882926971 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885872505 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150187835 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.890731493 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077661023 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951426662 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128522935 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886523772 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302183709 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.585631318 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.13562754 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.985426135 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880238766 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880391346 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880240885 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808088115 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959524655 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.880037729 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888110387 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.580101492 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879987264 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956808842 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.879897055 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084964433 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.686885888 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572632452 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.878684105 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8822726 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438131122 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853142224 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.059595878 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528961087 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319186319 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290004153 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.97626527 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.882054775 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88086008 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.037894432 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917570175 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.522277368 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982692245 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019173971 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.895792491 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520687982 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165247239 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.274325005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438060601 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800199747 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150250525 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593380095 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937404796 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099666363 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.730289453 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808840096 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094820201 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910833448 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886507613 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15180791 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4794571 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058002787 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.894322981 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325625802 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902387196 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887320793 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883960626 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097021481 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29034699 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976435612 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005404673 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894010909 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96785074 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808682393 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.895007167 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.884051726 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.959650237 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88549066 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822767196 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.000870004 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.570133168 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993320635 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.824008439 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884445481 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852473383 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987225664 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83367418 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127311197 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.173075629 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.533413244 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846647399 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.088701467 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.205921517 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105087535 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882723359 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100607021 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410404236 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.233447093 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924845588 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163898296 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932425912 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165736672 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303064677 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961357247 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.542655907 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.57404065 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.098105164 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900469704 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.884965073 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888684152 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887258168 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819400803 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.541582604 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.202456698 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.048600156 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097932393 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.237995688 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.941094944 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.831637288 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265920056 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020751177 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880352931 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.522643569 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.314702548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648668574 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.966301984 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049544796 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.159229899 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.918486937 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900886754 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965041031 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903445917 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.891333727 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.198710775 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24735283 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.885809464 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.888843594 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826996501 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894231102 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.889423748 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423130471 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854742676 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889044825 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.895735105 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75898894 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944917956 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888747393 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887441644 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408219127 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.396682507 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.893551688 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.542441986 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.895329736 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038246074 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148801232 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.18689317 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011351339 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.58600224 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.226852926 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989245582 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.588362164 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81353505 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887768964 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.82746154 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890401517 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892865984 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890279174 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074980929 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15497574 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183183989 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.348305155 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945616124 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090414464 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.532578335 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907790274 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887874608 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89546406 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888741613 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889567748 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.379918568 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.190381268 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861420616 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984461533 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891706002 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021879955 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90328442 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815530477 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888778912 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888381516 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329552236 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.982175743 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.845157098 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.156108147 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.610454943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085441998 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930188877 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.900570721 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8961084 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.539128064 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.000725834 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817396924 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322513751 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995424816 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.489068712 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445015242 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443662937 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176412776 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192853131 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.202982628 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.951469683 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.103935476 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975489287 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945217288 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979333807 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823127746 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.812153137 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532706367 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208923 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161259474 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897091535 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105324655 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536137088 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184946172 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920738039 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.569038064 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260193229 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859767223 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907479264 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.262969159 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077249418 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975755632 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893132988 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841256283 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221456856 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927528153 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.591354632 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905468957 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247897673 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358898288 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.0332285 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.21814555 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107047404 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899516204 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252520554 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.113616737 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001715262 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.895831171 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.863422269 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.109348073 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475528432 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.720818599 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900963301 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.066192423 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24946581 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.793533303 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.892928764 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.064312096 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223177484 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89238515 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.191709443 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254670553 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.994052692 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950953841 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122205339 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.63718721 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252141531 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.437560055 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366196102 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899286437 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.819541332 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.593900662 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.101711225 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898654463 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86495706 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099122619 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125939627 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57652927 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11201523 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136507928 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.903035723 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152094226 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959912945 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.989941134 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.172250434 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.316239282 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141334539 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123651662 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433702788 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10969427 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344255383 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.057309276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897876005 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100769347 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113706416 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.110896855 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.220882623 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063101415 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.603885694 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.901382449 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.103818478 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186902358 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951299475 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.221999549 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.065678476 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.981721156 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903241535 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958193518 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899324597 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906533195 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.226633597 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.423285315 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.911288452 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975360476 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877981503 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.458047816 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.901742323 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.903536602 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15403262 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233263394 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212155561 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870291361 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890917093 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898421696 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029049638 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.820991242 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90125736 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169947023 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.902486701 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3542513 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.118168976 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90885571 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.166147839 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283352229 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.575176801 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.934021292 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903845 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112744349 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194545259 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.096004156 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084374922 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172616733 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226671062 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927395926 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.228619664 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140254244 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901805877 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.771828838 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902112417 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027497915 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.09542342 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162448364 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.398746855 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498372038 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232030845 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.749503594 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903556295 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.555461158 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235566078 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15957883 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94026481 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961541621 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904017424 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326286616 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.688952322 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030079085 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.751849675 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825243192 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.907741361 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182900546 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.141148148 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.609852978 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9052632 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171434289 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19532685 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163753263 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.941283223 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.798102454 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118721599 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906527173 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.909371654 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161321932 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112750734 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145258662 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903626968 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.908540858 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.707159885 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829082745 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.898348961 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952145862 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125681623 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920710067 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.415225721 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.600510449 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178434351 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946812084 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904006755 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165634686 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.401863974 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.439501503 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910574707 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113598231 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.896364781 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278410212 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.904928713 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332489197 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279303456 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.906171646 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43173161 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.220837933 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174636264 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830924247 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906329105 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114621778 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.815086331 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931644506 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.897536906 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343575341 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208429612 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.635562738 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458991249 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.903225756 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.90805683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352442522 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007135927 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35195377 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995380373 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922377249 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.422830506 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.744711164 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.188229521 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148332941 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442844272 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.570289712 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907517325 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.903382953 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906006243 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824935369 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253258461 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.091730302 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182042269 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930881353 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348134939 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007435971 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.23518674 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021937952 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.087809199 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01560655 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424995757 seconds)
  done (took 1669.020611651 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903649261 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.970008404 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.925442883 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.902814303 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.90659478 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903430222 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980883554 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920392759 seconds)
  done (took 57.241187003 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.898917575 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.911495576 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.903143556 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.900580676 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.900547877 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.899408861 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.056722333 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.908322918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.295314237 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.908948581 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.904958006 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.901225425 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.244878534 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.922927028 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.902133428 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.905025374 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.903750928 seconds)
  done (took 75.103958085 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.903419492 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.256527406 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.968336299 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.913460007 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.924804411 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.916648787 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.004477392 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.943007057 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.909288031 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.156324987 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.20692383 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.939403657 seconds)
  done (took 90.871324737 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.919818171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.907129765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.907121159 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.907684319 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.908108586 seconds)
  done (took 11.386445086 seconds)
done (took 2169.426462195 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.14261186 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.966240549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.006873458 seconds)
  done (took 5.803009877 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.057983606 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.099133495 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.211146661 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.974946407 seconds)
  done (took 10.180394555 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.207687845 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.27316875 seconds)
  done (took 6.312160837 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.225108158 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.938270489 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.318393744 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.907943273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.910576797 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.907175808 seconds)
  done (took 22.559244822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.910447239 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.908297152 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.90709615 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911203466 seconds)
  done (took 9.468474409 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.907519328 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.614125793 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.906289379 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.916689953 seconds)
  done (took 21.173478155 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.052983801 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.023133716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.051772952 seconds)
  done (took 7.95949083 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.049080883 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.752561972 seconds)
  done (took 6.633281319 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.060947763 seconds)
  done (took 3.894876517 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.936254148 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.180847529 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398143946 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.426741557 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.541931386 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.72354987 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.241885121 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.128722431 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359750061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.357846469 seconds)
  done (took 25.129838563 seconds)
done (took 134.566228519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.254564683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.939767495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112724875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.277607287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.147371266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.114413254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.126593025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.371298777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.102872766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.950597021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.276741439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146004868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.07090007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93226118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.082205683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932779872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.144019303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.267209354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.946717469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.186529049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.137390595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.910098263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.107199254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.921131285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.142595935 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.065816339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.455908246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93194972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.08478789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.464772734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.067891398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.332588357 seconds)
  done (took 169.836490602 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910997352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910334547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.905606676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907632901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.374152472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.909804828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908389884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.907201427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.299818658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.284357798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911516066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.366515203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908589551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910004639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912383268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912689616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.435866352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.908013976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.914062344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911336518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909029135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.21031507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911625981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.216004193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.422984844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912501115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.907389991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910898918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912499961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.910039004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.909067015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.908074102 seconds)
  done (took 210.288302773 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.915986458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.913571374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912495759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909280973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.911285937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.918705571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909914161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.908387049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.69861921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.686883241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911376403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.912208329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912015357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911949759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912481053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912690075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.91228933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.911720311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.909836515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910901988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913517044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.680857107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913015679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.696206895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.914842827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.917084655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.913887464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913831421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.911227181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.913435907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908877353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914332462 seconds)
  done (took 222.152095085 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.162421799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.918024787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.920283231 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.836365604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.916007818 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.915490122 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.909046795 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.163666252 seconds)
  done (took 19.579271945 seconds)
done (took 623.696791997 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.313159013 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.146451956 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.102288752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.94398598 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.220593578 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.992246502 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.937358006 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005047935 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.77992344 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.016011338 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.571467682 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.956726745 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.670631689 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.965024899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.065985978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.991896806 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.48544336 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.582389964 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.078401006 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.021499701 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.125110747 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.884174444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.014409161 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.809479055 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.60295612 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.928453536 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.990136465 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.490462718 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.948359323 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.104060475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.632733992 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.281599747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.949522913 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940955342 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.990749205 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.969833997 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.188087932 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.94522506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.066629093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672816992 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.024807672 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.692814814 seconds)
  done (took 104.938662751 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.93049947 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.92376958 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.92694341 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.923858178 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.936130488 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.926057286 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.922151167 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925391683 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924508633 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926489101 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927398702 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.935065253 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.925727225 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.935802303 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.922304348 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.925148606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.92363703 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.932488203 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927753182 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.92878316 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.923350658 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.925649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.920760351 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.926048554 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.925970219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.924667751 seconds)
  done (took 51.956083227 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.918219654 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.074827368 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.164214765 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938646027 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.920929185 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.922400446 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938626085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.925305348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.923909088 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.920978861 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.024660189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.925624105 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941570369 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.167518595 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.936259824 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.920107295 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.918108756 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.924165585 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.080865349 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93451247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.939484442 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.921160264 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941642124 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.937308801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.923124437 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923034241 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.922918157 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.364865879 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.930121742 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025066075 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.966287645 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.950860541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.307109404 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174238188 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.977863614 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.931356384 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.927647912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.031200439 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.9265169 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.922496577 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941904861 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.931229204 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172348406 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.453735715 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.934123344 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.921737079 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.377180241 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.040627706 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.967397898 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929644146 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.178025778 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.936487426 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.922799425 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.926572895 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.962204564 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.932789008 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.925710796 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.246085824 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934213766 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.94221053 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.931814738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925719172 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.09319148 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.930351917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.08309321 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.92984461 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.931207567 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.922269595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.174891116 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.93733166 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.470867576 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.939374298 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.919694542 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.032186532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.085351959 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.405152974 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.934571922 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099602475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.324137724 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952684345 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.93767058 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.357905609 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.958222219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.936210466 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.925361498 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.926408154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.924797431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.971797996 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.944046992 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.378280713 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.468181447 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.262574781 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.952366054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.937305726 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.926765994 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.244391703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.934690137 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.928736466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.165275407 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.4776878 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.941485142 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.932368274 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.44607539 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938485622 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.946539636 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.936679468 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.182392785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.942828445 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.971398125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.928624748 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.933092509 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.92600277 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.946889316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.936802071 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.930755476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.434426277 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.046714497 seconds)
  done (took 238.688651216 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925489259 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.92331152 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.923906103 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.925839329 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.923141215 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.928385369 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.923239161 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.929407974 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.928356455 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.92587406 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.925730984 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.9287334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.92723857 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932818639 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.93141888 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.93112885 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.526526699 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926992722 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.930157853 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.922266517 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.568154601 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.93097363 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.923603443 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.922318882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.930965557 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.92816047 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.931360052 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.927062679 seconds)
  done (took 169.053894564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.929141712 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.040904817 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.945677146 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.955377936 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.935388879 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.931379763 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.028223971 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.940249085 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.936423133 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.927731281 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.927228701 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992857867 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942827936 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028304761 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.957899816 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.036774898 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031358445 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.933615169 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.930877315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.928182045 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.959568746 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.941406297 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.990437267 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.052051972 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.945599721 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.045779306 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.944025677 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.931561984 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.930128964 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.041762126 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.943596895 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.993114364 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.956375847 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.952418802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.053883764 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.043621919 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.035065563 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.033651508 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.931924044 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.933119935 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.929152292 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.934350776 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043370224 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.947311992 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.933020134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046802631 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.946986804 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.931068622 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.932458406 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.934732518 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.946124159 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.952897425 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.998701166 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.058268743 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962743586 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.956385026 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.029351437 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.051387055 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.934224664 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.030556087 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.932722725 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.043484678 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.948142978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.931666766 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.93587383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.937501076 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.96197764 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.038193231 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.033835514 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.93558767 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.030262221 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.962396551 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.94122379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.934368212 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.935930297 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046638495 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.044919197 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.961473412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.971084438 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961679912 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.945269678 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.931828452 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.937835188 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.95062663 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.940033121 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.046893047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.044603206 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.938065561 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.932417145 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.932922821 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.935018951 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.95929487 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.055221026 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.966754583 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039825432 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.996868829 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.002428954 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.943031592 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.945445171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.939743058 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.999039711 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.945629201 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.944546993 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.233858106 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.995246308 seconds)
  done (took 209.285184596 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.336821833 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.977638374 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.989493604 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.253873286 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.300763661 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.936915057 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.977209199 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.984788272 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.014835384 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.224094017 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.042049208 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.998581187 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964530943 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.956594531 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.979062867 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.01753288 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.991542652 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313261307 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.187661411 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.170104887 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.973833384 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25546805 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.300610085 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.556135429 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.02526942 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.404494568 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.610440745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.141541791 seconds)
  done (took 63.749892381 seconds)
done (took 839.513949909 seconds)
SAVING RESULT...
DONE!
