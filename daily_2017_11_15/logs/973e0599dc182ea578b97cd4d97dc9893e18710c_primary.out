cset: moving following pidspec: 15982
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "string"... done (took 0.649443375 seconds)
loading group "linalg"... done (took 7.265689168 seconds)
loading group "parallel"... done (took 0.164497169 seconds)
loading group "tuple"... done (took 1.677849932 seconds)
loading group "dates"... done (took 1.203558299 seconds)
loading group "micro"... done (took 0.411180441 seconds)
loading group "io"... done (took 0.408961776 seconds)
loading group "scalar"... done (took 35.676234582 seconds)
loading group "sparse"... done (took 10.83895186 seconds)
loading group "broadcast"... done (took 0.982008653 seconds)
loading group "simd"... done (took 2.459006027 seconds)
loading group "random"... done (took 9.320142235 seconds)
loading group "problem"... done (took 1.731854062 seconds)
loading group "array"... done (took 18.140894501 seconds)
loading group "misc"... done (took 0.879367849 seconds)
loading group "sort"... done (took 3.178392848 seconds)
loading group "nullable"... done (took 5.773554259 seconds)
loading group "shootout"... done (took 0.748451525 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.454620034 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.15426768 seconds)
    (2/2) benchmarking "String"...
    done (took 0.165358717 seconds)
  done (took 1.121384724 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.131194661 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129230287 seconds)
  done (took 1.061533064 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.120578524 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151455141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.122129219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.127036744 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.122434386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.122220303 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.121394686 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.134633835 seconds)
  done (took 1.700801833 seconds)
done (took 5.30592228 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.409188495 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868794607 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513937734 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.177277601 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.32083297 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.25560986 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266394238 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.225486288 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128697386 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.116369219 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.189529297 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.435140696 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.353694795 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.813843982 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.115153236 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136845545 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.158243022 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.812833663 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119969249 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151190855 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462993198 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.176149239 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.158232228 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150478126 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.238810028 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.15541758 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175879971 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.122501445 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.715047075 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139536575 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.226162972 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.12465881 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173964906 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196209976 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208636002 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.142203549 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.730954783 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.22809453 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121548867 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.120521089 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726233223 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119747913 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195236227 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.133377717 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.102818293 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.193438131 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.110978065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.119640494 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148256923 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.120645356 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202947861 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.509037167 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.147474079 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.189467811 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147392424 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.731835566 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143543396 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.291607677 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.16880467 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148002477 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121704954 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120745591 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.193036976 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.126301558 seconds)
  done (took 21.367256358 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.182614302 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.171269901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.121443891 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.173390819 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.164938169 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.12263449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.127745882 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.121551758 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135251364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180648481 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.149829392 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.184563936 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.120025443 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.152557077 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.173129568 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24874572 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131434696 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.137992448 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.130269165 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.133031175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.168969417 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.129598448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.125891536 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.126200252 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.197312519 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.233925329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161906715 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.153547554 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.141312976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125737618 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.169941594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.174856302 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.133738245 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.130277529 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17473525 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.150366751 seconds)
  done (took 6.383073353 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.207660878 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.149442875 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.201830864 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193683447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153343563 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190937477 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162952841 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.274434162 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.201083275 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.466893109 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.198377927 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153748627 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.161312149 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121039933 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.126057085 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.120997497 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.160157629 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.176587402 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190268601 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162305039 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13925565 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.126865261 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.401861343 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122863385 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.134358159 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123074977 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.105361052 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.185539765 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122264493 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.789100302 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122893996 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101120271 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154952559 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.16732985 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.24993529 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127517246 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160516143 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122588396 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.121232947 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.123022405 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.138670628 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.89945434 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.122016959 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142754904 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.181117797 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171193074 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.154038733 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.134479674 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120512732 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221316553 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.12065529 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124316058 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.880755251 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.209669425 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.177345513 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.120685769 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290097887 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.142501278 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13835248 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.121404872 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186508355 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123210065 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.121618436 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.120416489 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122499778 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121142263 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12038347 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.319917385 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124222142 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136955221 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12448804 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.380848054 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127186689 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126222507 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.142303046 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.120535558 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12262827 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.120276494 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.135520297 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.122747885 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12087298 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122992926 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137260821 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.121940776 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183361044 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.12339296 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.142506243 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.161787371 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.122664535 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.120994116 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153682271 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.120980717 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134850913 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.122364402 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.180283312 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101932197 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136828671 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125466723 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.183133706 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.124576515 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201165474 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.123486822 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.142455181 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.134534057 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153465287 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120886775 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121802833 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136505735 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.12238551 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121830342 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.184480959 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.12295751 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122396474 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.121491801 seconds)
  done (took 25.674468502 seconds)
done (took 54.223848314 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.455372492 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103144515 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103657723 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104076768 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103590628 seconds)
  done (took 1.73528429 seconds)
done (took 2.586958961 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.617954496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.798757876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.177346404 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202514919 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32315588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.204908115 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.299014419 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.184347244 seconds)
  done (took 4.726386475 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.19559341 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.138446389 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.139358281 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.137984034 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.136878819 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.150981983 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.137166763 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.140371154 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.135620222 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.134671737 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.135697723 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.152165406 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.136512559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.138192965 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.140297118 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.136544344 seconds)
  done (took 3.171112084 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16981963 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.151884648 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.136399697 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.135844961 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.133594349 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.152933025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.138980228 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.136944203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.132564848 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.133652932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.13980769 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.135019663 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.151384353 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.132490427 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.137135097 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.153947922 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.13386485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.136692181 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16979687 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.137373503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.136665045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.13331115 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.135190699 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.135827616 seconds)
  done (took 4.297635465 seconds)
done (took 13.052861028 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158493916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125938524 seconds)
  done (took 1.139878178 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.172311301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.175065024 seconds)
  done (took 1.211414604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.159482254 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.134235486 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141217937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.136414585 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.134537076 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.134931361 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.156342237 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.13633381 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132288531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.135120765 seconds)
  done (took 2.288026073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.133254083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.133472281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.132397401 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166352939 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.132921862 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.148118676 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.134542899 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.132917104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.134511349 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.130622303 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.130824753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.139841177 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.14779711 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.140178717 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.135066668 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.132282778 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.133034906 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.131063337 seconds)
  done (took 3.334449779 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.131975463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.131807156 seconds)
  done (took 1.129912863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.131038686 seconds)
    (2/7) benchmarking "second"...
    done (took 0.130679281 seconds)
    (3/7) benchmarking "month"...
    done (took 0.130938149 seconds)
    (4/7) benchmarking "year"...
    done (took 0.130759981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.129716667 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131431461 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.144815612 seconds)
  done (took 1.794870282 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498497975 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.286329659 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.346624496 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.132187041 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150536787 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.344771322 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131870826 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.130976638 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.161461952 seconds)
  done (took 3.066821468 seconds)
done (took 14.827392152 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.132231704 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.180971957 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.595570058 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.168357865 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.132457866 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.186502029 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.224842473 seconds)
done (took 2.492929777 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312529338 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.168128197 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.166509721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.174525772 seconds)
  done (took 1.690934511 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.12402953 seconds)
    (2/2) benchmarking "read"...
    done (took 0.138320991 seconds)
  done (took 1.141196641 seconds)
done (took 3.712753098 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.131975475 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.132257218 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.132409378 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.131541612 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.131248937 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.131191638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.148097791 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.131360847 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.131913938 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.1322399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.131168081 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.132119003 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.131749033 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.147770598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132110107 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.132288853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.132285742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131427397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.131689305 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.131678761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.147118717 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160990807 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.132006446 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131514832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.132557261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132147922 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.146668497 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.131502756 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131538104 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.132001096 seconds)
  done (took 4.915669262 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.13655612 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.129676661 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.132115793 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.13784998 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.13168459 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132226499 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.14595224 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135822906 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.133081728 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132418992 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.137048034 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132542385 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.132151833 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.147704538 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.137494872 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.136619104 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.139209285 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132815381 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.132285742 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.14917416 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.133500353 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.13250239 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132042552 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.132315022 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132331124 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.129038979 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.148963554 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.132569355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.132483399 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.132630635 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.132219938 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.13182115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.132649922 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.152286232 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1319524 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.132775507 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.134072556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.12873931 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.133074488 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.145893534 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.131168897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132404056 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.132855785 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.132777387 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.131734303 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133287229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149342719 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.13367994 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.133226763 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.133707406 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.132929103 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133127839 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.150000425 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.13508993 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.133912935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.131027928 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.132703186 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.130705355 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.134041947 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.149852118 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133941064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.131041915 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.135400571 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.13281204 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.137021622 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.133633846 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.148305298 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.134238691 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.134350834 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.132966654 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.133421942 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.136375916 seconds)
  done (took 10.6312917 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.201751761 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.13418386 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.161715613 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.133949791 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.134064989 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.149859426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.135552457 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.13439984 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132848056 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132830147 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132914072 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150127029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135161539 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132549867 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133114164 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.134781948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1322631 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.134014663 seconds)
  done (took 3.425134628 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147721296 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.133313761 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.143734702 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.133721372 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133769732 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.132448237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.149228809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.133553507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.134820107 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.133271799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.132689217 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.132818787 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.133829343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.150467561 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.133863816 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133403485 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134617191 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.133398449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.132901328 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.149274512 seconds)
  done (took 3.633023295 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190166314 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145660236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.145967842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.146045995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145562183 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161454565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146322222 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.146152231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145129873 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145865383 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.145468488 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.163790891 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145741593 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.146169251 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146104731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146649845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145612468 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.16287717 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.145891649 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146937355 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146745897 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145725774 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145017387 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.162314381 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.145985599 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1459676 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146586482 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146001174 seconds)
  done (took 5.086999031 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.137181683 seconds)
    (2/2) benchmarking "in"...
    done (took 0.136036804 seconds)
  done (took 1.168239588 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.17211272 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.179770149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.136068687 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.143787635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.196070013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.167505354 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162767694 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.135924397 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.146752994 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.16400828 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.168527554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.124903512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.147650405 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.127227014 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.131503861 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132980481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.135032397 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.140104071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.13732418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.152740671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137740149 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133723995 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128335671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.137560158 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.126833647 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.151112767 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.131523342 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.138767391 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12737173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.131161638 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.130136395 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.135286003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.153335298 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.136840871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.135010573 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.178697051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131533081 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144899131 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.138039911 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.136375843 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138961624 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.134539251 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.13078801 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.148395376 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132088808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.137789098 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.137270439 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.135489397 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.127459475 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.127627465 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.152240592 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.128303287 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.135598089 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.129653843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.129128541 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.131149466 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.136313015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.145232511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.128373556 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.129635564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.131209694 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.128052989 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.129455158 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.152421855 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.130017319 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.130909277 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130326291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.136123826 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.136282362 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.134570338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.147681805 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14765948 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.130190114 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.13565193 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136899194 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.134482578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144485282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.137469953 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131309779 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.129788345 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.137468748 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138969917 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146131786 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128042875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.127575537 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.140869242 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.136001106 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.135954827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.125629486 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148684547 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.136558889 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.135311241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.12561631 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.128607328 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.129613066 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.152744461 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.127165905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.132145144 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.134799204 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.136463463 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.136827233 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128075872 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.147279237 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.139344675 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.138101738 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.130688829 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.166664255 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.127690451 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.14683907 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.137401341 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.137355155 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.129505391 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.132015034 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.133866483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145184175 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.127936784 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.137091259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.129512448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.13592053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.137299242 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129534016 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.146950537 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.136850687 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.136067864 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.128394023 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.137200527 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.137983579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.145837479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.137422924 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.135763991 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.136037467 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.129311363 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.136830465 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.131089235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.155337382 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128941281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.135706873 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.135596076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.137243951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.129138421 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.129116913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.145838986 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.130042583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.131110363 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.137394273 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.12970286 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.130013174 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.143701658 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.130251722 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.127572121 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.135460866 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1379367 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.1286514 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.137118344 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.147431903 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.138579546 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.129255828 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.13782366 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.136859424 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.13861369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153851242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.128252538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.128199287 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.137445915 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.130887768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.128249775 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.135234887 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.152817986 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.139035519 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.127958137 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.136640324 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.12725127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.128434764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.153866467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.136542583 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.137858102 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.12914359 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147862259 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.142056112 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.13776632 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.147817964 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.13267138 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.137616408 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.130337687 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.137602543 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13770785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.154288258 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.129967136 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.132090595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.139216722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.129183229 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.137384156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130285598 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149257496 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.127841194 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.136879825 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.126913778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.138486697 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.131183984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.155734629 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.137981411 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.137596528 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129175808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.137832518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.129416074 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.137849724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.145515133 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.13945848 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.13985651 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.138975337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.138034589 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.133185824 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146739138 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.137823541 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.138831237 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.137279473 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.132211522 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.136528014 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.127332368 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.145189738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.139439632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.138791768 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.130589015 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.136528437 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.131360135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131694643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14658253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.128662463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.138167531 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131903147 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.129399469 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131740532 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.149007663 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.130922718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.134052466 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.129176166 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.13102937 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.132323015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.138293214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.154348436 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.132086559 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.138460687 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.141487009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.137841062 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.139316695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147148813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.141732626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.132185515 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.136064098 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.12983728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.138859122 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.128429836 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.154879562 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.131317189 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.132347476 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.130258135 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.132906795 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139509527 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.138468749 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149617755 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.138792063 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.138929084 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.139372305 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130363869 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.138703369 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.14811479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.137011532 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.129903027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.128922675 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.138703791 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.130429043 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.138618402 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.148254091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.133332843 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.140155879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.129030506 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.130152829 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.138533854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14649346 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.130747372 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.12846619 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130584243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.130318624 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.130758699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.130437433 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.155230261 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134958936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.139383326 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132042602 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.129847721 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.13682644 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.157602256 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.131937129 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.140832491 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.138978373 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.139223222 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.130052167 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.138640151 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.147918652 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132852836 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.129209184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.132083747 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.133300391 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.130473933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.129983168 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.148437676 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.130990022 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.129599227 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.130103853 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.139791262 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.130530827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.157326259 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.133054569 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.131391364 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.130969016 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.131298365 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.13899747 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.130329055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.159307175 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.138839068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.128827271 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.128691513 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.139123427 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.132501917 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.157385374 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.132237965 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.140390352 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140318017 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.139681187 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.13735715 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.141848886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.159094947 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.140318599 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133677382 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.129075761 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.131150086 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132372347 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.155605514 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.139987029 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.138514023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.130507211 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.133910132 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.140561944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.135495054 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.149556714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.130399032 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.138348231 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.140919854 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.139061692 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.140816209 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.139041279 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.151012267 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.133695908 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140628855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.140571516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.132460887 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.140478964 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.151065389 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.140635431 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.131588171 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.14120119 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.138815677 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.130250559 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.129217854 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.150042128 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.141519163 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.130044408 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.142169153 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.140641706 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.130398298 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.149384996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.142609852 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.131357485 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133822875 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.141504191 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.132085329 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140933433 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.157012169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.13273079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.141209913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.140380066 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.130675642 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.131693592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132183552 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158032834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.131741522 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.140442639 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.132984413 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141044333 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.139144926 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.157707918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.141721185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.140386478 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.130517736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.14138848 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.133716623 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.13950612 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.150134244 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13162686 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.131284021 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.133707024 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.141495713 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.132290127 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.161052503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.142103262 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.13369105 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.1328574 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.141677606 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131955426 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.140256809 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.151139189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.134409414 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.131250108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.134485836 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.133016527 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.140027712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.131857438 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.148900314 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.141575595 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.141097378 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.141126583 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.133296492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.140102326 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.147901145 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.131560827 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.139426152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.131695569 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.141504757 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.134563269 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.132790091 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150856297 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.140219967 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.140664668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.141342073 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.131637516 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.132882377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.151540272 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.135507598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.132721103 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.131207245 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.141143001 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.133264591 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133999312 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.151318547 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.131497591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.133284362 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.141189089 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.132056161 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.132480419 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.132475024 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160353563 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.13417323 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.132977074 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.131386012 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135348625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.133547255 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.159435698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.133066985 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.133536864 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.132999823 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.141058721 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.142149417 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.132448044 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.153162251 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.132703529 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.142733898 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.135085198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.132892852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.132123839 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.160886694 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.142550296 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.135045121 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.140522569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.133979756 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.142234416 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.142018234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.158915527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.132001203 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.131191189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.133300187 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.131514224 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.13925825 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.13422228 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.152122894 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.133094886 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.142654766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14087124 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.139639426 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.139920591 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.149866458 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.14253332 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.13388378 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.135052788 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.131476232 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.131320632 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.140536059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160146648 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.134390658 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.134554788 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.140398935 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.140162408 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.132377244 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.132865823 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.154479407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142227215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.142593608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134554114 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.13291249 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.141508206 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160758332 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.140733074 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.134064109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136980814 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.142042907 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.133195951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.133539424 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154202484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.142617733 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.140872738 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.141753816 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.132721605 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.13328611 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.160551779 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.14419178 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137118417 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.133715918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.131751286 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.142199077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.133996939 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.150787209 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.136404594 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.143687331 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.142405124 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.134387046 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.135143656 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.162880197 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.135938712 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.136595064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.142878998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.133285683 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.142019664 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133284125 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.161342609 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.133248129 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.142790194 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.142167509 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141830631 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.147201304 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.150882455 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.136713068 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1357802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.144969941 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.139965032 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.13165128 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.132124406 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.159906798 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.143203114 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.144425882 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.142686622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.142040267 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.143172859 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.134470994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.15559824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.133971456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.143416642 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.14315532 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.14134842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.13575042 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.152161998 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.135498461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.142135669 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.144368671 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.144075547 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.135500163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.143495597 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.162028469 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.135675643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.135606126 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134920046 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.141739079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.136875526 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.143204918 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.154958918 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.133712 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143633662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.143619426 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134958315 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145089484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161699718 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.135329686 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.136945983 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142926629 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.144266668 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.141228756 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.135368124 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.162448961 seconds)
  done (took 83.448011129 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162456795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14225373 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.142583281 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.141879192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141841441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142775087 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.161246993 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.142754197 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.143052747 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.142059137 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.141476366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143030232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141646276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16241087 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142504556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.143166669 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141703962 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.141800719 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.141422851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.160246257 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142670518 seconds)
  done (took 4.023938114 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.144306922 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.143074961 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.135095272 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.141889879 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.143799176 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.142132925 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.160971763 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.142662739 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.146628452 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.134014777 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.133062345 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.132999166 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.134129401 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.161428425 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.135058078 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.142300581 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.14558852 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.143443859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.143899494 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.16039476 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.134661299 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.142704666 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.143181167 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.133046283 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.143927947 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.144273632 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.162603483 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.144251591 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.134464953 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.14396701 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.141751635 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.134174429 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.191473898 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.152289887 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.134413831 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.143573813 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.143701915 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.142466753 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.142583172 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.151189672 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.143661665 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.144786573 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.134527639 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.142312982 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.142985384 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.135206474 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.163269644 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.142665945 seconds)
  done (took 7.883866957 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.157116387 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161185342 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.142127492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160843427 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142628983 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163107278 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.143023226 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161775239 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.142870486 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.143334801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.141736963 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142958623 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163443238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.144161974 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.143815673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.144236019 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.143057645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.142514737 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163983594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.144616428 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.143228477 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.14320706 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.142703264 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.142743987 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.142443048 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.164214942 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.14356189 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.143445205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143518683 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.143612138 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.142869161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.143598551 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.16330447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.144575543 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.14426527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.143307953 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.142853362 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.142851722 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143792968 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.162168261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.144404278 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143633165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.142918362 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142798589 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.142955366 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.161414675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.145061655 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.145174552 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.143538996 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.143361062 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.14335668 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142577516 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.163827649 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.143519313 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.143042165 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143577636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.142927253 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.143124085 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.143790572 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.16339129 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.144781026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.143748308 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.144130473 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.143301256 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.142702157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.162485199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.145223963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.143692703 seconds)
  done (took 11.051748258 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.178060426 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.14455758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144886966 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.144881788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144965172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.143916238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163653254 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.144889905 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144831288 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145318736 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145507474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.238014877 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.144508975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.144545976 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.144828622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1447278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.14535425 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166307602 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146445057 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.145971578 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.145944765 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.144909389 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.144569834 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.164534298 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.146036787 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.146291881 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.145186416 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144397827 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.144933612 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144539878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.163443663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.145338977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145020184 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.145113296 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.145047804 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.144961342 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144594548 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.163933406 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.145653131 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.146059204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.146215185 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.145579457 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.145208618 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.163719194 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.14612648 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.14563281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.146091448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.145780531 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.145698795 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.145200088 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.164581168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.146799916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.147058039 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.147156432 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144761975 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145712317 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.144891325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164108623 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.146810177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145845097 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144831798 seconds)
  done (took 10.268179165 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.157421332 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.156224519 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192626449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.147134009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.144554652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.170928466 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.144595507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.144777931 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.14423153 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.152158162 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.144906545 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.164926746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.157358644 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.147815588 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.145900507 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.144910795 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.145585818 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.144014034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.165774863 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.195632885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.145414528 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.145295319 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.144506859 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.167655915 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.145447509 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.145248726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.144840817 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.144360225 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.146909134 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.144016456 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.165553545 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.145291087 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.14538132 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.145026953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.14835505 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.146209575 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.145218085 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.167039778 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.145833936 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.145218777 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.144991042 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.144733848 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.145078459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.164920521 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.146867278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.145433032 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.144683326 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.1459977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.146864421 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.145915745 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.164863491 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.149518284 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.145608761 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.145701304 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.144745641 seconds)
  done (took 9.296753704 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.164515231 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.145039965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.161768146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.145228806 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145059258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.145543743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.164187351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.148243395 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144972735 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.147052144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.145736751 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.146623367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164730534 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146157566 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.145271214 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.145366637 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.146251219 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.145767537 seconds)
  done (took 3.695428123 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.157207663 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.197626482 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1471993 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220842805 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.137713309 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.137489811 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.147065304 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.137446024 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150115712 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.138214037 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.159508595 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.138450602 seconds)
  done (took 2.864580747 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171691685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171571266 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.146187188 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14525259 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145373904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145488718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166435147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146803684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146088993 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145731556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146874759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146475837 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166461356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147398712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147153881 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146538361 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146905794 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146169212 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147185312 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1669003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146951634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147583723 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146717426 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146784225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145849954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145800585 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165747333 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146824465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146961511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145829514 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145860572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146208092 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145204302 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166036662 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146607503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14621153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146031725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14555562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145686778 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165989693 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.146681252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146416009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146182599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146078851 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146110032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145633953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16627743 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147293999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146086981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146309173 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146203295 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146400372 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145793983 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166605837 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146950615 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146353232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146271734 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146715679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145772295 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165924962 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147833365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147207147 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146143593 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146574079 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14677793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14589559 seconds)
  done (took 10.890454994 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17137585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.146910589 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146098417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146862682 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146424505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14580918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167404273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147742337 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146540866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146233944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171741665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147650393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166402621 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147838331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147969573 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146931868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147078673 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146739968 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14704426 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16692375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147155424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147069155 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147105841 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145902416 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147496299 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146867776 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166407288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147575577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147572412 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148039162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147124007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146411178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146862254 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.166634491 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14732007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146675014 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14725801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146948684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146652949 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166159078 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148067062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147546779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146652539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146692451 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147126898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146925402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167496177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147397538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147564073 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146668152 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148096182 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147800894 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146373648 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167744404 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148368546 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147471674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146947731 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148404759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147143415 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166586156 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148666227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14733337 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147587087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148041202 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147717293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147728162 seconds)
  done (took 10.947717194 seconds)
done (took 184.107090645 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.19919397 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213846406 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.235957054 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.199610395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.186904065 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.172856771 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.169247706 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.15797272 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.139433556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.139254169 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.204208459 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.139766101 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.20558166 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.138886603 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.240417604 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.139880557 seconds)
  done (took 3.882802538 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.233234516 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310516279 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151370123 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.160396147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.144446813 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.13999995 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.138958485 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.141788621 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.14091464 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.1396035 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160801389 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.140356417 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.140570755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.139035986 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.142827497 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.138991254 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.162024381 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.139458596 seconds)
  done (took 3.879213998 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.160852976 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.184104808 seconds)
  done (took 1.362226747 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.173093533 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.204046761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.328936615 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.197603441 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.157852857 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143465374 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173651206 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.152827698 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232812652 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.141360513 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.140455131 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.142989867 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.159418595 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.139533791 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.154389316 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.16482197 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.161272977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.153789979 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.154886999 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.139945179 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.161242466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.162359687 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.141276131 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.153502062 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.202826618 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139818105 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.140644206 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.160447262 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.140965284 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.15527578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.140145003 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139545729 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.140030557 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.139614084 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.164751674 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.142436669 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.143278068 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.139546678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.154676382 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.139775913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.160246757 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.141234289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.145344045 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.143232091 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.140614796 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.143748711 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.141057129 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.162777029 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.140564765 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14098092 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.1403975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.140206526 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.139429586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.160010384 seconds)
  done (took 9.472480249 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.92756935 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.187403326 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141560122 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.0890703 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143893564 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14259298 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.967831144 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.174277086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23296171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.029171867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155196011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.142503824 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17376413 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238336106 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.076679475 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.258561913 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849291323 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.143466781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1688388 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.170266755 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142187436 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148009901 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148020544 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43988588 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.141032021 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.162203244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141442344 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.14133965 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147476415 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.144237366 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.140949332 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15615305 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270472163 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.14697736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141074176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.14237443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.141003368 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149410607 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213650159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.148678979 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180538778 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142448524 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.141780336 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142076917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14774327 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.16337826 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143957381 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.15472082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152120769 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.141158409 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141119601 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.16345493 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142430552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14360567 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.142673128 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.26053343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.260034294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.141828571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16263091 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142964008 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.192631319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.145852439 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.153234552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154159502 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168061738 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.142885907 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.72447625 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151866608 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.142183945 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.140987029 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.162287117 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142298863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141602602 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172340156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.42378346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141571476 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.142654526 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163051714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178640767 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.14289887 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142882867 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146920165 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141567392 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.163838124 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144923762 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141784095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153443415 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226958303 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14135663 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141520161 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163898535 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147278973 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.141655695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.200683674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.142832133 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143252874 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213239574 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143096791 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144559924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151831793 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142234637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152424435 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141928246 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166651797 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142479957 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.143932789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146743699 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146961239 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.141838703 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16194975 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151173616 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.146925596 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142468686 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153857593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442193981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151972366 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.165619362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.148442905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143076931 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.150238704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143070195 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.1941952 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164151605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152461231 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142307272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.142748733 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142900796 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144496113 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145083998 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163624921 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14244762 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145561461 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235887433 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.14788644 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.14218391 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205245644 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184954134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142948649 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157525507 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14360252 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153737054 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145765907 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163333358 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142334856 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.725533896 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146996094 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.143484641 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143464704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.214407715 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144661439 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.149193038 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143671625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.144353402 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.720165648 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.146548504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.166000565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.149277491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.143230485 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.14388536 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142047055 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.142848433 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16565722 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.155436709 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143669328 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142989325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.14352417 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.150531684 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.142622264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.165838422 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143634575 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.144544872 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.145148451 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.143275959 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.148847936 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174497085 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145845252 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.145910566 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.52711308 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.143620356 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.143681803 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.175966178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144823937 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.235164622 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143993833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.153081691 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147803845 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.143854633 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287016929 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150899462 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193799951 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.147788668 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155665057 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.143754407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163512263 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14573174 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.144732903 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143372873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144962654 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145450839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143558356 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.09691997 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.144796652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.215499012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.143885057 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155261514 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142960995 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143717079 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257787035 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.144470435 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148580331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145036088 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143879826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.144695819 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.96629227 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.145222984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146552145 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.14455028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.146421637 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.150365693 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144216057 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166764085 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144916829 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.147516402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194326069 seconds)
  done (took 47.902255339 seconds)
done (took 67.511837057 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219289999 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184162567 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2344921 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192845816 seconds)
  done (took 1.916514373 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.244269253 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169445856 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.208545959 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.164797687 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.221305382 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.143371302 seconds)
  done (took 2.200425938 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.186827664 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163879202 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165246404 seconds)
  done (took 1.568759263 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212048745 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209898706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.530168381 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.402671657 seconds)
  done (took 2.45972149 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.24067563 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.156463702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.155996889 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226977496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215443893 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.176246879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.183994248 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170530844 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.161908471 seconds)
  done (took 2.762802819 seconds)
done (took 11.956010551 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.216323796 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.147838678 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.151509531 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.155459756 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.230257416 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.162283964 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.167172972 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.152301476 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.162583125 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.15251307 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.166188176 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.166946687 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.152977815 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206358795 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.155822741 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.14365707 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.168124145 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.163991127 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.166406336 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.166844908 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205101987 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170276976 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.163098849 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.143894972 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.204840216 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.148476757 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.151254908 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.179035713 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.165700338 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.152871338 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.156715919 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.144207565 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.166843164 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188924032 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147505229 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.152842293 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.146793065 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.13002761 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.152448664 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.153826228 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.189061824 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.153411101 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.152101546 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.144720431 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.152038377 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.152774598 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168452316 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.157693842 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.145085993 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.156828526 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.14844007 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.166124928 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.152520065 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.166988994 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.144932443 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.144421319 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.162649672 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146987545 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.166343533 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169162183 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.144698366 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147189283 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.152737955 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146907898 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.153006295 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.144029907 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.174040125 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.154010998 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.152815215 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.148845412 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146643588 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.152438858 seconds)
done (took 12.599400409 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.158599946 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178177243 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197530115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.201020087 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.174569783 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145844574 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.155442577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159706279 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.154873746 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147913611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164306592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.184069775 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.21002381 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.153939788 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145530456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.153495219 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.177001858 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.148434792 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208152914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148106899 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156225202 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.153202096 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.183781632 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149332055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.148300305 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15229143 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.147822225 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.153864894 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.171406067 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.152157633 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148947595 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.148641134 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.148167209 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.154938917 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.161011749 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180751347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147708409 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.155607198 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.146696888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.146228408 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.146550585 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.17628108 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.147441716 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.147395788 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.155838735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.155746854 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.156435617 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.155816209 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.171590641 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.157935141 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.150374038 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162349679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.15481161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.155698633 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.15511688 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.178791606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.156359742 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.156205167 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.149765616 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.155779388 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.14702522 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.149524943 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.173283181 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155461252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.159436047 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.155267964 seconds)
  done (took 11.611673042 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.159552491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.170435027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.156685603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.156221177 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1463785 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.147236736 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.168850926 seconds)
  done (took 2.175632457 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.147638168 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214358264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209036566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.232342119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.203096695 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214901323 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.202879767 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.157179727 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.175494674 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.149229697 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.213449633 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.247412618 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.159980262 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14989196 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209919758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.14584435 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.233985788 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.199857521 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.157302087 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.231340531 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.156509097 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.178119839 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.150602681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.147163198 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211703871 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.171392817 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234742894 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15992485 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.159718552 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.229931636 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.156886765 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184213118 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209338775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.149837079 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180505277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206504851 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207363857 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.155681639 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.232084256 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.151374536 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209742928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.156996054 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.157145375 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.183636489 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.161505998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.202787333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.158877232 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.159761604 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.156979181 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241510456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150236659 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210366527 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.160493075 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.182880326 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.150679726 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.159551817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.164554621 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.157204436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218041731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183776881 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209198802 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.207423921 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.237858398 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20887527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.16371797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211904488 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.229230007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.158128933 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.204583748 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.157551938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.23183997 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.159429806 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.151380355 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.205188156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159638787 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.238222611 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21414185 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.157498815 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.152845085 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.147847415 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181219574 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.157137329 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214051612 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.157969544 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.158634107 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152755628 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178126014 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.162545977 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.202117812 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15360677 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.157958425 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.174385955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.158777814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.162781446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151845422 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.213538824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.150303399 seconds)
  done (took 18.777780464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.151774701 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.149907688 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.151734752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.148094677 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.1484449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.148627614 seconds)
  done (took 2.003346109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.174946301 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.160893565 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.173074809 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.15627109 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167637084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.238521045 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218093641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.148164768 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.16579113 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.167731074 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.243014591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.21776816 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.22068343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.157130928 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.244968371 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.167702875 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219804041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.156281186 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192224176 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.158491563 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.155184677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.158262045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.158355498 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205909597 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.18678675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.17021507 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149066757 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.167340382 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.167863001 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.148410948 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.183378138 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.160847891 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.148944574 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.148845822 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22134576 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.148426253 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.18395917 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.160284107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.15917744 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.160370521 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225378678 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.183575442 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.169842815 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.165782978 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.14971982 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.149107569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.160089879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148757955 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.247402018 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.160799535 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.165313345 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.157496865 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.161596913 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.189760942 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.149975372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150544459 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.166289909 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.219260294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.159097688 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.174809644 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.159462509 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.161484322 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149226393 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.162765757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.159435966 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.165303725 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1750939 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.160599567 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.16007104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.158152936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.159804244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.158314706 seconds)
  done (took 13.580594883 seconds)
done (took 49.211768389 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.633800679 seconds)
  done (took 2.729001393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.652362016 seconds)
  done (took 1.743494413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.505992913 seconds)
  done (took 8.62400763 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.43139937 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.36644835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.02256756 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.184526129 seconds)
  done (took 3.098183717 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.090969662 seconds)
  done (took 2.200631906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.350573514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.299170272 seconds)
  done (took 1.743284645 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.747971166 seconds)
  done (took 1.846698942 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.556707235 seconds)
  done (took 2.649630896 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262679474 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228167005 seconds)
  done (took 1.594557687 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.666275507 seconds)
  done (took 2.778103965 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.273391067 seconds)
  done (took 8.391701071 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.286904244 seconds)
  done (took 1.395810548 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295310481 seconds)
  done (took 1.413284572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.158261554 seconds)
  done (took 3.284834475 seconds)
done (took 44.605535851 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.159361973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.163189174 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.16299171 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.160123443 seconds)
  done (took 1.747432095 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.159635038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.149602083 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.15227686 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.152013834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.152236529 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.148660254 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.171867734 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.150187388 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.14963778 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.148806798 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.151316817 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.148249126 seconds)
  done (took 2.954700805 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200746784 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.184837894 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.194896978 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.246202333 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212941069 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306347346 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.247974749 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269344648 seconds)
  done (took 2.98880931 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.151899072 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165577391 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.18741812 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.149516808 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.150200204 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.383086025 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165829185 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.148650223 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.220721263 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149967102 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.172171723 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.4858735 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.148451749 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148379654 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.154175524 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.149257849 seconds)
  done (took 4.25023064 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.524342187 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.463149087 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.157569747 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.242178344 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.210993707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157687675 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.646729134 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.157379413 seconds)
  done (took 10.690371365 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.233548333 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.168197621 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.182815695 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18410014 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181673434 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.209304511 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.204095184 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.158487762 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.168778664 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.167261639 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.161616879 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.182646278 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.201901839 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.166880004 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.162232524 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.157770551 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.161280848 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.193726016 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.20475068 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.161478766 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.165915361 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.168007605 seconds)
  done (took 5.078584633 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.1623023 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.154101957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.155731673 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.15252626 seconds)
  done (took 1.759765756 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.215974875 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.15247059 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.150863513 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.148620817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.159377541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.178833897 seconds)
  done (took 2.137167785 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211789958 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167248147 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240552602 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378787045 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176160992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189262876 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.324639513 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186003048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186648023 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170526919 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222409929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190213272 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183049064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202529765 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193786053 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.184428727 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188837528 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208166913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174658796 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238402921 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184341144 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197054683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199686418 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204810505 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172135169 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175645023 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.165340738 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166164165 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211510041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184973965 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181261361 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180438386 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165857221 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223269234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180747474 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181489799 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311320466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167922784 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201651747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.223437903 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213477268 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170832911 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192664288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202060244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170776504 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204021477 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171468004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187350742 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.194367819 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17596371 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185321102 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20146682 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187109276 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194198205 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310778436 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166612828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.195445651 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196406248 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207606089 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199894198 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211985315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.162951693 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205082332 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219908357 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19605261 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172306997 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180180153 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158420047 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210770561 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205608603 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192355598 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183448202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.195760884 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193607401 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186876745 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186042861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177995436 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195549348 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214311713 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.163180189 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174894308 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165324885 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163918514 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.252669303 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163838031 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209712678 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167210718 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.193323216 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2299893 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181574027 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177430583 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181703454 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210916257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178080262 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.145459397 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176525141 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186096852 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17906953 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189615985 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177390959 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172728151 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.16205504 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176424419 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.164511505 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211976575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16666619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179510587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19158382 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.172144677 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220831086 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176821457 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18671666 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182620433 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227318019 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168462708 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168414871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209177324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191464498 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.19512015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192634408 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200882387 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172503523 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167923304 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178783897 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236794103 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172560699 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229051055 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170811099 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169633732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161044666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19146804 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204184272 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178342396 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16606832 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183019974 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196267963 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.190142422 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172480652 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193159738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163143772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163618757 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193313603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169032724 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17634007 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.180854598 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.17163703 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176805114 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214251902 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189207242 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1726463 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169034885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180743622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191617045 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.192549561 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178108063 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.161853676 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184878826 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225252181 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1667155 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201372995 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.179093881 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238071482 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18937386 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182954157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228076784 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167241546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.164266493 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177220326 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208539735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180733113 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195056055 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232344875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180312244 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184142955 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176184068 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180724185 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.223434212 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18212188 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171222189 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18945015 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185447324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.18889573 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.16139957 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.165078707 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170701016 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165232932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172953626 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207856803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180329091 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208271151 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214389653 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171165429 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201776701 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.16329103 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179135959 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.215282416 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173560632 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198900123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198208202 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194957028 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194728867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176299885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.163912423 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163869751 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165597635 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180944213 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196918057 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168894483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168983817 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200199022 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182536193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199639359 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215830887 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180302095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234454779 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.16349769 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.200751333 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182427776 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19069681 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.236761285 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169222823 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.178468411 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199038327 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17147473 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232272135 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188219416 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190193857 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195033808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19121244 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191998135 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172817308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185787833 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169714498 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182081176 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172662366 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19421758 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171208793 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.171736229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160290166 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185360615 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198154316 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180734022 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.179984575 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178477466 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167118442 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168848485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219981425 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17360409 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.150704168 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181162646 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18702533 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201362091 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17487648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185916024 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168471719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.330751361 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217733609 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186129564 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16934985 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169035991 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195669028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204903753 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176797738 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204038886 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194858202 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198569504 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191946141 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170388233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167927612 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201297557 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178915876 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.164778531 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.162524037 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185121583 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.175403629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212551435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170268674 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192266456 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188932854 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.18387182 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.209373512 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173224157 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215454614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188205343 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189446454 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.21853262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182479905 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203596443 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165811069 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165413038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.191906249 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207289603 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16898991 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215464958 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203812237 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238328104 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195305628 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186976617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200622388 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.16682425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189204197 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175679448 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237214436 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17186046 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.170324453 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196216714 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161676289 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195404345 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186482131 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30219951 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177888081 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210366835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.150802184 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300686385 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167842595 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192979395 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182702966 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186390351 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165467494 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211297611 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191136318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198075392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183682367 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168367735 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234281417 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209047235 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180858601 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183367765 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169895507 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204950007 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176744438 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186492511 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179415006 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178084201 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186785859 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226167519 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195482584 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.168305455 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189743281 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188790581 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216208512 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294261298 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174697378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203405268 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167172227 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205352499 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169768165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163231569 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183012026 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.228966102 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16778847 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186471677 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188337532 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169360739 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192186969 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174151707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190026979 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171904768 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.168456881 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212184945 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.169654194 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191391548 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198520412 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168885149 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190489461 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197684503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16535582 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171757019 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178009256 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170157155 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.207829987 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214526822 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.164318966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186820565 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178836199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181176916 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172695763 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198413057 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.178776841 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.16833638 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20076606 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179260575 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231338917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178658005 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19115621 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191269815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175867888 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179150487 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198901651 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259582626 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1791672 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.189085114 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167951786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202245769 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173134676 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166954891 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178989101 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18907088 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170884077 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.195989849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.187545234 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177879408 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172732404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175562376 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22774989 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182274346 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18845212 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232532422 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172712676 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191329832 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180621522 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167691582 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209854365 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188798256 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176735187 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175205886 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.172097848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.171946845 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227886172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.169858227 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184746477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192495441 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192305334 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217288636 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165478621 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19207731 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174084395 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192254052 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164377496 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.206034281 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196163216 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169939064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.167922164 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19298779 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202815974 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193095121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165967189 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.211756384 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204673044 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.168667298 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196288385 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302817411 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185525366 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240388805 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165487818 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174688718 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177105152 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210192697 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.188425005 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196844455 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.170287114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170499761 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.191742102 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194984418 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166484566 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196729872 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228414913 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180168939 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208667176 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.177360555 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.294815618 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204942301 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195349811 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.156869375 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.168645481 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176233079 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17075309 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201627751 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215135023 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204324318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.221341727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175843223 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166057602 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.171624736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172129468 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186335008 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204184918 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19576029 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175250683 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.152639882 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173876471 seconds)
  done (took 92.576961937 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.206768339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.217153291 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.30811044 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.258105847 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.206571074 seconds)
  done (took 2.415772956 seconds)
done (took 127.703007555 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.168527187 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.170052399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.168175291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.170186469 seconds)
  done (took 1.879734692 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.2238865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150063838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.162777111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.138952951 seconds)
  done (took 1.896123849 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389310145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.144055462 seconds)
  done (took 1.767998869 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.189086063 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.177071253 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.176127358 seconds)
  done (took 1.77013165 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.179219106 seconds)
  done (took 1.403155453 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.166198711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.164951925 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.225705201 seconds)
  done (took 1.778669872 seconds)
done (took 11.719986035 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.263237717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.000068347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.496241766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.233882932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.839512856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.449400567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.490473018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179629855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187179621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.163019584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.175346224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.74151726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.478030166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.927921281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.462227982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.931644786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.745272564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186968196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.162333472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.164796431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.447244728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.161039335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.163585665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185866077 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.745524347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.468571077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.164172023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.931320038 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.161272598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.188989147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.451126536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.163981512 seconds)
  done (took 22.717986378 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180042141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204647333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166911918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161960731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.161417892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.189847958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.165082723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162302318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194593005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.163598916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.202912534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.162400993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168012702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.164890836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.179689525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.163272112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.190038522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1629724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.16271944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.165068262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.177260322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.16237544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.190768196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.163138384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.164299747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.180631836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.164524364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162359679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.190415775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.16542245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.166223266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.165437962 seconds)
  done (took 6.754932106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21554132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.208432113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168220621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.195033314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.224611767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.165607579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223741351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182380302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199674018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.191720999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.178404034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.162801144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.192708514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.166076922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.207169925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.165116193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.166241743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.162978891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.163239353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.166152004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.20545504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.163750388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.165648191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.162819656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.164951965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.182674486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.191369522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.164161253 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.163609315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.165994901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.167912136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.192199527 seconds)
  done (took 7.029448688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.17215729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.173921137 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.204123193 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.20439758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.171491168 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.170154851 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1988539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.171831899 seconds)
  done (took 2.692500099 seconds)
done (took 40.422727256 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.174073745 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.174209113 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.168028376 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.163286644 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.170035443 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.17188027 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.200136757 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.169641481 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.167658331 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.17221407 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.168782928 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.168950545 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.175015958 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.196006882 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.168874866 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.168910771 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.169034514 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.169723617 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.168086958 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.195611897 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.169047669 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.170365962 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.168444312 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.167606156 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.169143797 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.168171368 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.195403289 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.173593617 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.168874995 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.168901013 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.169379063 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.169464096 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.169026073 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.216054348 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.169650666 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.168493352 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.169859312 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.159843514 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.168269527 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.194855452 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.168753348 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.169416191 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.168561156 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.167936899 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.169455664 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.168561334 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.196127277 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.168500189 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.168251862 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.16111593 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.167664747 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.167786918 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.168303568 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.197060701 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.168639351 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.16926882 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.160006053 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.170481113 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.168736078 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.196720073 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.171601969 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.170508471 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.169419836 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.169895553 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.168015038 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.160222092 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.197292018 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.172044297 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.169904009 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.169387528 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.160104038 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.168958953 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.16916261 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.198213602 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.171190012 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.170394686 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.171241816 seconds)
  done (took 14.545901348 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.180838781 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.176700933 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.18230081 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.178086702 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.176154098 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.175692324 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.195219798 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.180437949 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.17488931 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.177571757 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.177124754 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.172151863 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.204532339 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.185108004 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.180831783 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.234328778 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.184110188 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.200776335 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.183571168 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.176861731 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.175554547 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.177999595 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.181167447 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.183114112 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.208778127 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.180612232 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.175546687 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.180951697 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.171246595 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.176271019 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.203791478 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.183707582 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.179694452 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.177408667 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.177461889 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.177184131 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.200720094 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.174247983 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.177211671 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.177186573 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.172799074 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.176704664 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.206025656 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.179809274 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.184913054 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.176570324 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.174080017 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.173963583 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.176945949 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.197920197 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.178249507 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.172389404 seconds)
  done (took 10.75660081 seconds)
done (took 26.539888569 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.373262339 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.194086672 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.251763581 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.239028142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.281394381 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.250641366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.220291353 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.185739896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.111977983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23492064 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.209725164 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.37527351 seconds)
done (took 7.182235568 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.334502701 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.34413747 seconds)
    (2/2) benchmarking "String"...
    done (took 1.460500303 seconds)
  done (took 4.040077294 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.34446104 seconds)
    (2/2) benchmarking "String"...
    done (took 1.390577916 seconds)
  done (took 3.968965741 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.235579838 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.234987802 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.598810472 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.236475397 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.23643913 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.234952107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.239946356 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.234982236 seconds)
  done (took 16.252146974 seconds)
done (took 30.065457193 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.262741681 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.422324255 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.494193891 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.23492851 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.246896007 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.236643134 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.237769886 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.249684613 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.235923764 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.234840951 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.59418459 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490734087 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.242453159 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.619398858 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.236868724 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.250936588 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.24574028 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.471150836 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.238108329 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.290454917 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.235524505 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.239597292 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.260239407 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.256936766 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.339706034 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.249715293 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.303004489 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.238182536 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.442221346 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.273200327 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.286794125 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.237939981 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.299628582 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.250291732 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.234380713 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.238379363 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.455540051 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.342775611 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.238987281 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.245343646 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.432859227 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.251586308 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.235194509 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.23681672 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.236167355 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.293010331 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.239539788 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.331083295 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.238080708 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.23976904 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.257859957 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.655578391 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.236031724 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.236221957 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.24356089 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.489634515 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.246062296 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.279433222 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.254212524 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.23004006 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.230331957 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.23027912 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.269038875 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.230842457 seconds)
  done (took 146.264998751 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.231013346 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.229140478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.229672461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.273503044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228953032 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.229475805 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.230334747 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.229676128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.228643828 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.259721625 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.231061044 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.229846947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228920154 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170569529 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.230547236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.247855926 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.229077543 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.229877094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.231284811 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.228576153 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.229514185 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.23009597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.230167186 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.229906924 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.254102478 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.291818404 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.247223638 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.26136264 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229616401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.230573008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.251834739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.228693073 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.724948315 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.081537847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.238820354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.23854449 seconds)
  done (took 81.057484418 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.230091588 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.22869626 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228695496 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254919392 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.229405232 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.688205901 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.688112192 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.246129912 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.622526561 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336561218 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.261730273 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.364321381 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.228710264 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315441711 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.241460787 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.2295419 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.244811779 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255669777 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229556748 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22937952 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.687887507 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.241704071 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.389194588 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.385744244 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228265182 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255390224 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.634573008 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230096628 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254760939 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.599107872 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255040664 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229701832 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.468070823 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.229223802 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.799790064 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33697642 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231496719 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254606267 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228615684 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497250361 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22950494 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.679137075 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.230082697 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.231662019 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230243935 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.767079211 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.228231927 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.682992833 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.227782739 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.102337519 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.226866464 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228006952 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.076974867 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.705623592 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.227946975 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.227973148 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228782275 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.227736273 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22624735 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.252713355 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.077062707 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.313123239 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228266297 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229767338 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252033112 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226869138 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227697368 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.242453307 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284224386 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.672070647 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226161722 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.237001035 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313299329 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33705012 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.225941882 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.225175667 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225697489 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.226144449 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329265362 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.224998939 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.225589046 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.563049546 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.379756228 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225718739 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.198948378 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313228703 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225118184 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442546101 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.223804054 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.22448763 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807192865 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.223671816 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313027105 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224704697 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.22433003 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224874345 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.560993998 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.668345395 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.330132376 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.224000938 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.198699212 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.225288864 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.557781852 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.659917526 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.757524142 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223950288 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328358075 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377898222 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226363167 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.224815005 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.195653885 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224247905 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.280010874 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218344315 seconds)
  done (took 368.110357124 seconds)
done (took 596.666476915 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.990864135 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.946600354 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.069156063 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.934838062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.949412747 seconds)
  done (took 11.109490317 seconds)
done (took 12.327311172 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237022334 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.290861691 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221006942 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219366334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218419561 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217778554 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220776388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219295255 seconds)
  done (took 11.060090862 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218552489 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218237164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.21478295 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214235563 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214928912 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214254049 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214543185 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21497946 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214227924 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216181437 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211680765 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211085756 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210969942 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212413601 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213018649 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211481106 seconds)
  done (took 20.638440925 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21491118 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211617488 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209933383 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210241179 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208875131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210665596 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210052854 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208837767 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210185196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209343815 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208717796 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207091247 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206591203 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207217349 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208147429 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209422865 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206914875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208124767 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.208354957 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205518718 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20481266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.205669189 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203868164 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204946133 seconds)
  done (took 30.206609806 seconds)
done (took 63.120106177 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.197759294 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.195830713 seconds)
  done (took 5.591652471 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.524171075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.545810468 seconds)
  done (took 4.265281656 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200486919 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.199937622 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.200856999 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.200427275 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200163991 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200423829 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.200239048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.199624546 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200029954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.197840719 seconds)
  done (took 13.19594846 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.197918978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.198048358 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.197711189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.197804078 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.198610926 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200087358 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.196476057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.197431433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.197686067 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.196776351 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.196483279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196370012 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197366402 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196575442 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.19582666 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.196121678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196165153 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.196096125 seconds)
  done (took 22.742285789 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208747517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.215383706 seconds)
  done (took 3.613178529 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331163905 seconds)
    (2/7) benchmarking "second"...
    done (took 1.237794014 seconds)
    (3/7) benchmarking "month"...
    done (took 1.305911189 seconds)
    (4/7) benchmarking "year"...
    done (took 1.293243442 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.236944167 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216220194 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236657471 seconds)
  done (took 10.048021541 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.1964909 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42782355 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.555478574 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771454122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.19458575 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.197260951 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.907289357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.196600111 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.197966306 seconds)
  done (took 13.833229211 seconds)
done (took 74.486277031 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.187465209 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.186796086 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.203143557 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.19312579 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.486642051 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.192545285 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.189040578 seconds)
done (took 15.825852168 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.190089403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.187016741 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.191625393 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.120328397 seconds)
  done (took 9.876458681 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.081670965 seconds)
    (2/2) benchmarking "read"...
    done (took 1.498307528 seconds)
  done (took 4.766750929 seconds)
done (took 15.830433413 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191623005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.191053248 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.190706285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.191062379 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.190621965 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.189903476 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.190505987 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190507984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.191058095 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.191109266 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190629302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.190720409 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.189640187 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.190070147 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190385462 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.190786088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.189376855 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190022846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190096638 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19173395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.189900812 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188754921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.189230884 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189246836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.189203426 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189469019 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.18958087 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.190023906 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189388131 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.189202791 seconds)
  done (took 36.891104463 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.189463672 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.189708269 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.189208879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.189642864 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.189190336 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.188455399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.189297756 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.188938715 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.189990958 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.189849986 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.190148935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.189329028 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.189599995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.190328032 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.190087075 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.189285298 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.189057505 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.189630678 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.189255413 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.189283823 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.189332275 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.189572263 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.188604496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.190326499 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.189135287 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.189733602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.18995934 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.189601225 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.190065179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.189351747 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.190430828 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.189954618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.189275317 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.190178946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.189656841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.190269511 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.1906087 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.189577382 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.189863541 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.189678071 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.189210671 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.189854541 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.190154612 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.188841393 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.18976738 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.190414483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.188842323 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.190591471 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.189250299 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.189752342 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.190169184 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.190243417 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.190181278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.189292511 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.189296654 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.189454867 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.188305546 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189546921 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.190254192 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.188984912 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.189824101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.189759125 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.189208523 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.190190272 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.190543394 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.189320099 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.188376219 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.190525729 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.190029315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.189876258 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.189964794 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.190265778 seconds)
  done (took 86.841228121 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189333078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191311644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.189393612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.1911326 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.191645983 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191101781 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.189917761 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.191098567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189996173 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189888937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189970031 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189127602 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.192364403 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189945732 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190375413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191641219 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18948566 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.192067212 seconds)
  done (took 22.614201439 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189008067 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.188941112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189882551 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.18991243 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.189389486 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.18977422 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.18960155 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.189747935 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.190804626 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.190494348 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190104071 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.189798343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.191558836 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190024283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.189150724 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190299177 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190090196 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.190114607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190452728 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.189290075 seconds)
  done (took 24.981600398 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.18924661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190042962 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19072157 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191148226 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190341981 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.190050128 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191170873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190477214 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190895753 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191260202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.189975123 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190587885 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190205488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.189739109 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.1904779 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189205295 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.19041881 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190560614 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190397895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190542999 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.1902607 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19032233 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189815384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190809956 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191022461 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191128811 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190745436 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190284827 seconds)
  done (took 34.516891142 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233875345 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241391305 seconds)
  done (took 3.659003791 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.192625105 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.191896962 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.189884162 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.189562401 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.189704917 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.192087606 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19816986 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.195383937 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.193288566 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.191515528 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.190986632 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.191947733 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.193869489 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193280721 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.191857379 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196170666 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.192748583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.191059317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.190055245 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.189364002 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190453267 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193461294 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195080673 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.192441679 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.190265576 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.198534141 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.199546496 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.193203118 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191333668 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.195815082 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.192959318 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.191479079 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.189591363 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.19020599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.190285947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.190796865 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198500019 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19592634 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.198010228 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193501208 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189846288 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.190662479 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.190642132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.194717754 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192685331 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.193076292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.190205386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.190181669 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.190718069 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.192148995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.191183658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191488848 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.189712286 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196748678 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.195253286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197894891 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193322985 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.188915384 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.190461201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.195259016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.201985846 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.195254859 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195707177 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.190775667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.191258809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.192504501 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.197142286 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.193961043 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.190218605 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.188275221 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.196973908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.203571141 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.195956866 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.18988824 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189227949 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.187587059 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189773881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188423483 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196164131 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.196411359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.19075288 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187783067 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190835359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189726236 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.188865945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.18858746 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.187526869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.188446839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.18641884 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195080337 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.191043918 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.185790359 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.186903196 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.187194202 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.188848548 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.186933558 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.188352639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.188658172 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.187360474 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.185099153 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186157532 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.18713013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.188907814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189052528 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187289249 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.19482103 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.188070504 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186017808 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.193116013 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.187532888 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184430353 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.18633753 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.190414305 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.184249717 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184090213 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.185973497 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.184151556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186257233 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.185620998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.183063328 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186773097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189716246 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.184538246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.182086464 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.18338876 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.183937017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181718611 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.186961224 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.183978977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.18210686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.180681112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183469543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.183363814 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.183028841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182192529 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184052579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.182055642 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.180560666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.184210832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.182925699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.184238974 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182462471 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.18340423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.185309107 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.182395039 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.18295189 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.192862296 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.182979041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.182335019 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.183561636 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.180382282 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178906077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.182834967 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.181169997 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.180802506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180862044 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.178946713 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.178817247 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17865005 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.178485368 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178251738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.178565941 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178789033 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.17949673 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.181721419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.18041892 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.177407179 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176402544 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.177218821 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.178621906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.177455739 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.176314283 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.17899623 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.176641968 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.175065269 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.176527227 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.180109705 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177981002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175922091 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176311861 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.176948063 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.17629113 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.175673232 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.181539158 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.178892356 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174422679 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.174100137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.175814938 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.175323528 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174903444 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.174576706 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.17426264 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185130675 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180738509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.172993851 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.173002788 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.173789677 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.175331188 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.178222043 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.175477347 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.171804394 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171968132 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173208982 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174255279 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.174722039 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.17373667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.174904675 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.171666583 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.172239508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.171611337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171829424 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.173582007 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.175270043 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.172668157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171342111 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170649372 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.170806688 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.171124871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.17058279 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.171171944 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.170784514 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170937363 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.178367067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.174135574 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169953732 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172520691 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.171864194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.169055033 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.168590733 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171716596 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.171542297 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177921548 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.174481961 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.169619617 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177649256 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.173208482 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.16797849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.173401378 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.172145755 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.170138283 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.169516977 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.167395853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.16670192 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.166168448 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.165442494 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167472426 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166615203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.173785452 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.171165463 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.166638922 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.166914581 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.168691344 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.167747295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.168322749 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171169673 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.170351081 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170240122 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167794282 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.164300988 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.16680953 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.166055544 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.165061082 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.164228792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165156018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.163715711 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.172155915 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.168898918 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.167300443 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.16613197 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.163453377 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.165851226 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.165196265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16598561 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.17642226 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.17079385 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.174108679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.169895198 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.164536796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.169767596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.168495032 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.165292865 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164598792 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.164589308 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.166137775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.163924385 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.164528039 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.166191521 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.165245942 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.165973617 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.16570872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.163824321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.165366791 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.163583071 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.163221753 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.161817499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.162533542 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.162669031 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.162315625 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.165991124 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166698807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.167137256 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.162529217 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170257289 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167680415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.165258764 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.165104859 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.163538013 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.162124683 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.164273516 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.162620492 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.161330414 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.16073878 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.162088571 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.16422243 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.160797024 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.167346093 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.163677018 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.162805088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.161241567 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.159446933 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.161069989 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.161188676 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.159889276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.169209338 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.163887006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.161710382 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.159793255 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159073218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.159166271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.158842237 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.159096046 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.158609784 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.158998839 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168485805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.164882851 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.16019915 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.163178876 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.161557966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.158602735 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.158794327 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.159959832 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165124179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.161268976 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.160779067 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.162752706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.160641102 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.158566292 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.158395082 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.159226055 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.158516746 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.158608037 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166300156 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.165209927 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.159803561 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.158774889 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.167603522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162673001 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167339768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.163724683 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.160562982 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.160593982 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.157412337 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.159966128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.159007733 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.160354322 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.157979422 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.157531274 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.159216301 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.15811799 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.160658035 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.158248139 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.158104373 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.156801959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.159637492 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.157620636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.156190377 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.156195152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.158156895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.154795442 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.154269177 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.154485405 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.154434123 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.155125823 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.155670818 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155149199 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.155010463 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.155981641 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.155243829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.154655075 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.153494328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.153168837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.154310271 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.154016873 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.156295039 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.155183194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.160467801 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.15358935 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.155080042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.156010228 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.153879921 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.159912735 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.155523641 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.154929274 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.155289486 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.152911107 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.152357879 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.153900829 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.151978661 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.153771401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.151321367 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.151899038 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.151693674 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.152116775 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.153617932 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.155961381 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.14901592 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.151339712 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.152503281 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.150492862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.149047109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.149105505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.151417828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.149569354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.150796574 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.148649326 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.148841772 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.15041032 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.14869308 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.149191591 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.14947612 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.150845402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.148490559 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.148702874 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.148635776 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.150738908 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.150738213 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.158252056 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.15338481 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.150434233 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.150004858 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.148916245 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.150380367 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.149906973 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.151397063 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.15076687 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.150735521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.148891195 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.151252687 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.149488742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.150581957 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.148465997 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.155767881 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.153172248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.149827573 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.157782298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.15729556 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.149906694 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.148332379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.149939637 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.151859465 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.149461572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.147492368 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.148417626 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.156916475 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.157303692 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.148768338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.151742579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.151038391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.148703841 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.148218224 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.147363209 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.151891493 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.149747278 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.150202653 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.150428902 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.148082278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.147718035 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.149860523 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.150912241 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.150607436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.149565171 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.149230113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.152560966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.15214922 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.15151175 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.149806043 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.148201912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.14848119 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.148154578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.149209887 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.149546603 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.1499697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.15252511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.151607429 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.149667504 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.148529459 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.149265933 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.149196022 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.149802417 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.149216369 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.148135372 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.149274415 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.151473433 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.154311848 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.151705465 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.148490246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.150555248 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.152682601 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.149513382 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.148080221 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.14821557 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.149796853 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.158517944 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.153196042 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.150508816 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.151347654 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.155259447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.151154316 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.148525867 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.147950852 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.150789177 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.150413094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.149275783 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.147577851 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.156480875 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.153589323 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.148951671 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.14872127 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.148912119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.150789046 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.152795075 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.151113677 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.148907228 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.149274313 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.158079499 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.150997037 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.151339116 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.158489027 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.154810668 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.151917708 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.15052935 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.148942331 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.149081172 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.151266651 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.149819753 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.148458702 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.148638237 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.149174388 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.14937457 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.152016753 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.153904224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.151636908 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.148484368 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.150095442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.15114216 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.14957041 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.148261177 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.150760304 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.147884204 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.147951134 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.148449195 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.150322979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.160864108 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.156808678 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.150732054 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.149249974 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.14898061 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.154282463 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.15141931 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.150716773 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.149313011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.148830087 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.149308895 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.151472217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.15146386 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.148926938 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.150876696 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.150732072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.15003739 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.148995855 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.159318584 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.154645427 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.153854247 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.153463469 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.148841391 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.147869482 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.151288339 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.147124599 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.147144768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.148931564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.148103442 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.146929435 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.146229208 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.146091418 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.149930442 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.144458059 seconds)
  done (took 697.01079103 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.143169202 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.143386119 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142566578 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.142895716 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.143382449 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.142720361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.144334312 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.142691518 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.141628121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.14227195 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.141908167 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142008641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.141791432 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.142069164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.141619588 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.141785135 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.141067928 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.141584806 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.140626598 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.141035619 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.141123982 seconds)
  done (took 25.123705656 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.141363863 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.141590811 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.143032123 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.142513009 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.141018334 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.141687478 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.141119604 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.140082508 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.142065928 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.143331835 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.142650899 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.14310745 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.14224472 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.14250693 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.144111771 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.14204329 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.14132163 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.141437261 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.141678584 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.14126557 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.149287275 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.146007611 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.141367198 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.142687676 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.142345915 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.14048404 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.141583656 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.14158662 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.141263561 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.142567571 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.142515182 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.142551165 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.145703729 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.143736013 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.142491852 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.140843847 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.142952443 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.141933295 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.141387266 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.144223109 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.143821804 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.141366457 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.152479502 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.146141472 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.141143044 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.143774775 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.142902761 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.14093345 seconds)
  done (took 55.987432844 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.141352557 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.142240965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.141643437 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.141527944 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.141236104 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.142189176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.142270003 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.141315517 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.142201688 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.141359244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.141171339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.141318454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.140810005 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.140792538 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.141687195 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.14128644 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.141957894 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.142213674 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.141972123 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.14207068 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.140844773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.141216605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.14165875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.141407475 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.140979796 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.140950557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.142177915 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.142259439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.141910092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.141385387 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.141041488 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.141856856 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.142318876 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.141152693 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.141889252 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.14108124 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.141217117 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.141512341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.140917852 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.14213998 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.141674401 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.141412017 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.141598004 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.141112939 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.140997285 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.141391978 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.141055249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.141242081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.14189203 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.141363342 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.141066165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.141421559 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.141994491 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.139899874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.141464781 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.14184826 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.141851583 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.142007057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.141646101 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.142331607 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.14157071 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.141589354 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.141161059 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.141960334 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.142350825 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.141614315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.141432771 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.14144711 seconds)
  done (took 78.762170732 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142512021 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.1424356 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.142421447 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.142894807 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.142344831 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.142248561 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.142072197 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.141185702 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.141550545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.142318055 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.141497155 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.14107167 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.142090466 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.141829377 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.142568234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.141638426 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.141986081 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.141632973 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.141043329 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.141359466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.141207333 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.14225124 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.142305406 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.141850956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.141627302 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.14209408 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.141949514 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.142563383 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142289704 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.14196386 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.142589064 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.142943129 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.142460417 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.14311061 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.143028309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.142392415 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.142349343 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142168867 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.141641602 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.142300704 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.1420426 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.142915601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.141934779 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.142196118 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.141863624 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.141584492 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.141726106 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.143140776 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.142516156 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.143532315 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.142411867 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.141937358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1427164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.142001942 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.142746463 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.142390307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142176838 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.142687217 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142217686 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.142352609 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.142506158 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.142221762 seconds)
  done (took 71.952800503 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.14165588 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.142242034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.141991704 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.142572514 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.142155685 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.142031215 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.141874931 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.141710945 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.141629304 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.142628656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.142223436 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.14177653 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.141963298 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.141825054 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.141563504 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.14180936 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.141823754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.141005841 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.142303109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.142088467 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.142545756 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.141927927 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.141478284 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.141341998 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.142064367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.142823385 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.141851468 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.142577385 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.141467372 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.142138512 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.142228014 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.143381849 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.141173227 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.142442131 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.142178926 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.14217848 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.142750153 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.142356592 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.142672688 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.142256664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.141954872 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.142867958 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.142048081 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.143174675 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.142278227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.142386575 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.142002595 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.14273502 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.141698214 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.142156487 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.141723294 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.1423987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.141769519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.143031951 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.142463523 seconds)
  done (took 63.954585938 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141907476 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142416141 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.141856382 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.141726158 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.142875238 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.142162887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.141690835 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.144265314 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.142605265 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.142219929 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.142415412 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.142606924 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141688305 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.142244814 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.142665761 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142107851 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.142097644 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.142744648 seconds)
  done (took 21.697995473 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.142506811 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.141265444 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.141514843 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.150666075 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.144449688 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.142108729 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.142250331 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.141749724 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.153743884 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.15801361 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.155765689 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.144690046 seconds)
  done (took 14.894574891 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142371635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142789531 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.141538612 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142073538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141648077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142489113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142945552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142109381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142498091 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141945592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.14197653 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142691675 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142061998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.14236931 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.141771294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141785887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142453828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142292689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142372274 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142408272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143469235 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142802789 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.141855721 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141947194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142576802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142596041 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.141755645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.14231054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142803593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142459235 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142230292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142545601 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142663073 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142682859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142744054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142313804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143280982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142048423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142244826 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142737188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.142761543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142959256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142811383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142068454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141580916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.143036427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142467814 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143016608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.14288759 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.143562633 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142998606 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142395821 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142897454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141810546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142792839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.141914699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142821271 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142811697 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.141485979 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142818702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142274359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142743105 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142197922 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142365769 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14215774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.141944619 seconds)
  done (took 76.539352668 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141697187 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142281665 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.143261482 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143141703 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142122958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142487236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142548591 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142544214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142904172 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142575476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142427463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142560208 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142481265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143156316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143016564 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142887761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14191816 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.143387208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142543201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142824534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142933845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141995627 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142865296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142091264 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142915209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142777411 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.14186067 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.143355638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142247662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142435327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142281232 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142586612 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142405725 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.143143877 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.143914529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143149196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.143079882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142858812 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142625916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141764021 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142293348 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142977654 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142759986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142441995 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142141573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.143137453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142310425 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142185641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142403177 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.14284933 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.143073729 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143217394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.14299852 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.14325744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.14244685 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.141823577 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.14276993 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142632673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142164471 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142909409 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142459333 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142987063 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.144021538 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14320905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.143042481 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.143487661 seconds)
  done (took 76.557292207 seconds)
done (took 1393.169280763 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.310115278 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.264585723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.21058341 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.157248472 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.145637284 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.141334674 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.152478333 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.596784323 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.643075622 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.467446364 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.146454197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.333804846 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.176293954 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.808862089 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.203650921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.242771593 seconds)
  done (took 30.137578578 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.165078249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.150614866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.237905097 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.145328027 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.164278728 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.297785037 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.194082444 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.145633203 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.27763991 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.16919986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.142994723 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.163713929 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.145215106 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.0312233 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.159839952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.299642877 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.361977636 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.142129651 seconds)
  done (took 25.531626246 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.490471727 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.156356776 seconds)
  done (took 4.78329164 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.160629419 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.145672348 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.147263651 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.143330145 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.138543324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.137935899 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.143295435 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.139433073 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.137881475 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.243780736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.146664872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.157835534 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.144588107 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.145723514 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.143746735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.186364211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.272174369 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.144294812 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.142850055 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.14964037 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.144767782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.236345075 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.178389474 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.143256259 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.242416867 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.138468753 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.14722219 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.150999423 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.267442427 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.143401912 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.143953158 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.147117608 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.145702077 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.036140912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.59888849 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.145864599 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.163956333 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.152803646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.142797347 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.285279449 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.145224034 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.149187605 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.138171231 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.575284112 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.241420082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.242843913 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.138661228 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.144826871 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.145709853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.20335115 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.14472401 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.145624421 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.190158331 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.914009438 seconds)
  done (took 74.585416349 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.155318139 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.137692868 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.315508055 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.138198682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145283752 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1370266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.137256529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.361156909 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.196526404 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.137535149 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.436264158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.600863447 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.146033222 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.221960652 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.00590887 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.212099276 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13978468 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.13770702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.136706869 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.144701543 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635775921 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139126851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.137888874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.333901951 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.172816535 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.627031291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.137422392 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.13729889 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.138171451 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.138364226 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.58296376 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.142479914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.202116911 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.137756674 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.387792424 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.452032862 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.429594522 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.140755775 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.153935087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.138887486 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.170173448 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.619960591 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.44967737 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.137749938 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137844356 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.621325171 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.138137084 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.137909255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.14459438 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.379045634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.139016175 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.139143347 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.13734499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.138224695 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.137765159 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.208874653 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.2025425 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.62594843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138075759 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.137671827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.147091148 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.13752653 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.142533359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138168913 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.141900027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.453356189 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.300885887 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.142492568 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.4518929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.573259813 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.13751824 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.647501675 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.138632638 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.159453992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.263417881 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138063052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.145743934 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.616400771 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.154575393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.137422211 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.43113478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.139620921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.435836345 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.139746997 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.140533704 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.650866465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.145202092 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.162172168 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.137969767 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.142735557 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.137852124 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138018623 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.389971705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.179524464 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.139561526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.137623124 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.138562486 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.138369418 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.139044381 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.138595372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.646620525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.148767524 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.138179692 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140343761 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13833827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.13862826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.137736288 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.141887427 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.393244167 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.137786322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.143588078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.137759025 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.137217796 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.149782942 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334619243 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.13968385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.385323636 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.138208395 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137004417 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.14013155 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138321274 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.15547985 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13776472 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.139285851 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019796007 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.445500199 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.139931421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.138065255 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14056737 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138326148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138046195 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138648324 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.164753774 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.13895318 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.799636312 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.140497722 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.146009468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.138054844 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.139250681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137604316 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.140074088 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139394237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.435420906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.386790136 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.301297662 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.140288293 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.138111427 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786394195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.18204826 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.316519917 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.141402616 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.139019225 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433438215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.291321967 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.139416512 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.138694146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.139209016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394404469 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138812547 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.439487973 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.596792594 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.139369494 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.142747503 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793262349 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831281763 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.139278757 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.140256577 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.431692217 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.138328891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.138138039 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.138875275 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.139139057 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.137871856 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.141125934 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.146604487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.138406987 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.138724014 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.287164331 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.326749297 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.138902478 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.140081551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.61742772 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.161239912 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137101699 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.143888347 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.14146199 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.138313412 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.225130584 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.139372544 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.173877536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.138461687 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.146187118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.649558376 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.138973101 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.138791541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.326927818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.719088225 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.139380985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.138627376 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.137757177 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.001514319 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.646738303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.20060405 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.386276848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.140132634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.172982689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137233058 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.14386125 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647275856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139017193 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.138487709 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.712492359 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.138223817 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.94415494 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.138153613 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137855698 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647138853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.138015861 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.143966081 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.145919758 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.139183186 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.419406473 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.138242868 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.14747344 seconds)
  done (took 452.568443493 seconds)
done (took 588.743196606 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.138364255 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.139458013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.139531084 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.139593566 seconds)
  done (took 9.693749975 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.144600826 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.144145548 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.144002926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.144894028 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.144478566 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.143312835 seconds)
  done (took 8.004207943 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.13867281 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.139830681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.13901761 seconds)
  done (took 7.554581783 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.323856982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.112357572 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.428042099 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.143441587 seconds)
  done (took 8.146697049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.14281044 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.143574334 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.144322694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.144870527 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.143748256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.143880154 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.143976577 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.14388046 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.143604837 seconds)
  done (took 11.432117965 seconds)
done (took 45.969353684 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.165562336 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.252280638 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.145838581 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.14651088 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.147643398 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.71773862 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.157404021 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.146661866 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.150630594 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.151397509 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.718131145 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.145516679 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.161633399 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.14683548 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.181019647 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.146323954 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.145764697 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.146986289 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.152233676 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.153202669 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.147046885 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.147580946 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.163710561 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.14523781 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.153149356 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.153622904 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.152899943 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.005262946 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.144444794 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.15131754 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.005236603 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.152322267 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.153655113 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.148155799 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.148196804 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.146643037 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.14766665 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.253141388 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.157968809 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.147554067 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.144690538 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.152795003 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.15115857 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.150762985 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.148269483 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.164316157 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.154501751 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.160518762 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.003351691 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.693785332 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.166575677 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.149064585 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.145871704 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.693792126 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.005326468 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.162102706 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.147071678 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.16696983 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.144273708 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.148250274 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.180710789 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.166148981 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.14938524 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.154357243 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.144090363 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.162308964 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.146084161 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.15338611 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.14571363 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.147937146 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.147156277 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.145147997 seconds)
done (took 89.939863542 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.268417488 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.145341172 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.277812424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.144038784 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.3005966 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.272357334 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.143999008 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.144536814 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.144469056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.051107303 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.14690008 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.203929538 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.144702568 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.146638688 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.2713895 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.143706444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.144585961 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.939857348 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.145159114 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.415736623 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.142797977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.144328843 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.143033834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.054336707 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.142644963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.139775192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411999068 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.144299058 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.946432838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.139937364 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.142871877 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.941933958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.137836668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.154480465 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.144385486 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.153753653 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.300832966 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.144841069 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.269686559 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.269486119 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.277721484 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.163235078 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.140656849 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.138630088 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.144507542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.145763284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.14471158 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.164675447 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.143600147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.144490956 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.944025748 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.144056961 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.153922099 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.145270185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.144007922 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.155837351 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.144202288 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.145268595 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.139495484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.14529645 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.268547424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.055870749 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.052349191 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.144456171 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.142186487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.145749889 seconds)
  done (took 98.483932835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.21987998 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.221754056 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.247572148 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.145529379 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.196474872 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.248009135 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.145050035 seconds)
  done (took 9.562781827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.15168052 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.144611755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.196074105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.195995653 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.144519345 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.326101599 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.145437953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.157322861 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.153281351 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.199170605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.145836027 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.145691167 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.145849899 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.147277412 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.196418541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.157474542 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.228128575 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.147277293 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.14477864 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.324987471 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.143534937 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.154231719 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.198715433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.157318568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.145087426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.1508359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916103804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.146159601 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.144077654 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.145372056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144291602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.22124351 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.144483164 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.139272001 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.144010808 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261226941 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.144638251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.143594462 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.144492174 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.146716813 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.144866952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.144851026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.146037673 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.145644139 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.144707221 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.169858205 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.144566399 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.146399301 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.144973244 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.145125505 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.198606672 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.144560423 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.14541406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.145711465 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.201418609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.153862696 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.145492496 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.145824521 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.144746138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144830562 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325805833 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.196701898 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.144647277 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.19641923 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.144683283 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.145180666 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.145093269 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.145230973 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.205673911 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.145760829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.196441971 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.144762367 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.328327388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.169181505 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.146824166 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.149797547 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.149213054 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.14500761 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.143224791 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.151729227 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.146142415 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.147661231 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.152397474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.144017022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144934601 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309747565 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.25772661 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.145319658 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.164149298 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.15266506 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.145414751 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.199365855 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.144598877 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.145712576 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.2009796 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.228799457 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.198688387 seconds)
  done (took 119.270847794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.157590921 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.157139646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.148479375 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.176703374 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.146216004 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.146353971 seconds)
  done (took 8.07099558 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.147017631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.144999975 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.144674635 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.144993451 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.145376608 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.144381732 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.145212228 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.146703398 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.146155899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.144768545 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.144191247 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.148424043 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.144957586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.146028508 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.144511936 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.144361861 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.143916643 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.144133738 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.145306729 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.145117052 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.773218905 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.145378299 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.145562721 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.145833569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.145572694 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.145374679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.171301948 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.145737987 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.145004637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.152579262 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.146741072 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.145324571 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.146490981 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.148537299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.145115463 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.146262917 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.146448875 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.148950717 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.144440751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.14599436 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.147913879 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.145826885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.145265273 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.149371367 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.145960386 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.146066401 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.150055746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.170476669 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.144343065 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.149451448 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.14944894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.146193053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.144886361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.14845298 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.148103457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.147324925 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.149613662 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.145468206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.145211635 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.145439218 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.145317361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.143837406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.147240612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.145607117 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.144942934 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.148253721 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.14539591 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.145852158 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.145393104 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.144886687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.149045106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.14449216 seconds)
  done (took 84.340706278 seconds)
done (took 320.866817818 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.431592473 seconds)
  done (took 3.570164185 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.165996309 seconds)
  done (took 3.305195073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.590944119 seconds)
  done (took 9.929432496 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.204286008 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.157494692 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.15022288 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.141649594 seconds)
  done (took 9.792563785 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.51855731 seconds)
  done (took 3.657232163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.147988074 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.139831357 seconds)
  done (took 5.427514264 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.207213525 seconds)
  done (took 3.345724117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.609191192 seconds)
  done (took 3.747947094 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.141029821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.161899615 seconds)
  done (took 5.446819311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.139602436 seconds)
  done (took 3.277886563 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.113163713 seconds)
  done (took 8.252293601 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.14094139 seconds)
  done (took 3.281003653 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.18796655 seconds)
  done (took 3.325965603 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.891703995 seconds)
  done (took 4.030890332 seconds)
done (took 71.528587419 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.14003916 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.142081667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.141943761 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.141884063 seconds)
  done (took 9.704666659 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.198639937 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.219684494 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.147420849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.410630619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.494084154 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.145465015 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.145696081 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.248131004 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.470242735 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.548380281 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.177985724 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.188781227 seconds)
  done (took 16.535838135 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.141550833 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.147134879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.149620532 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.155279684 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.147478487 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.231582753 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.201767144 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.164663811 seconds)
  done (took 18.478498982 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.145552687 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.14826683 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.150765721 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.150793145 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.146958199 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.323825433 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.14058415 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.148061221 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.160336328 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.140460618 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.146186942 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.448084809 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.147856314 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.148576961 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.141010163 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.15317878 seconds)
  done (took 27.980247529 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.505923636 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.302869914 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.929423877 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.178912499 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.156895492 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.148351014 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.554156581 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.139617177 seconds)
  done (took 23.055485905 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.153050319 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.162158114 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.14687067 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.147164288 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.147274436 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.148328847 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.161510681 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.149069961 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.153394499 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.145966518 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.146829296 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.147270073 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.160402769 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.14596586 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.145844435 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.152774467 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.149614783 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.152450246 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.156365411 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.145827791 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.146270946 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.153411247 seconds)
  done (took 26.457536617 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.351337986 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.216882197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.299642657 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.195918196 seconds)
  done (took 6.20199608 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.140160413 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.139499553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.490601018 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.393389089 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.139182785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.140338793 seconds)
  done (took 12.58187 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.220260357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14003395 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152673464 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216992551 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139462554 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140192969 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204571232 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521892767 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.145175699 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415183851 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13989035 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222449876 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.385901416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139373166 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140509396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.949246094 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365696521 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600754982 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140507058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140111112 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.172213272 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145071253 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14049426 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.310192618 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14028362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140513896 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.402925437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139526476 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388582215 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364462504 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362786633 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141106728 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415706032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466745306 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.256852417 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307473521 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152413255 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139945083 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.150499899 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.139359805 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153992882 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143330256 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363370825 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14244453 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139813917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141620435 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527219062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.14702942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.139941136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140908809 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364100234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222644148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.144907951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140261264 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165444966 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140094354 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.144951531 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244767066 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787740304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140048656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142117632 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.140581124 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15161279 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140542464 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795923061 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.145406113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.145789776 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.145773879 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140297989 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13946246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.163366115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139350519 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.159733009 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1400148 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866738876 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14004725 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143153655 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667102446 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147460605 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.140301164 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364526371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140277421 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139774 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.141025113 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140674595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782667042 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.147460743 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.140734033 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.171676001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523100944 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.307079534 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.159435956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.169138323 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.360455208 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.139715112 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140096004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.1400345 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143117095 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.161101901 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52819227 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140311839 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.145126555 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385633689 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.350782422 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139476924 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.958948367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531852751 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14044159 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.162569128 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140280234 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.307800165 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.724839736 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364385148 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141424803 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.175420763 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140030727 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838464054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141887536 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.145687384 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140148796 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385482712 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.896146541 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141563821 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.213542233 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145210252 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139439059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139895382 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142601368 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140296384 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.313721993 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140448516 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363465631 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.140835463 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140301105 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.139919696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142587424 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.142882073 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361341357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151000622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414991857 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140215465 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140058982 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140444344 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.359679813 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.144893084 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.146948011 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47967119 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141819445 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141409809 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364291331 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.173959534 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.256289429 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.172929991 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.140010441 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.387323641 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.145772413 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.145753363 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139792708 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142111415 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144514365 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.147932579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144187898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72212267 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114524942 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153054804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140813233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.156334988 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.216362074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.147728812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.308235836 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.139893103 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141929546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.145765991 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.140862259 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361367742 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362698482 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.141469743 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31584612 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.525484711 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.719954666 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.154342174 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.139659669 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.140963356 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.14079353 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142143141 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140569641 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142391051 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307668749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362448854 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144687479 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.72390165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139862961 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140223054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.148104968 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363589592 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.148613625 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141647694 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.141015753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140917398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144481001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361893415 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36435548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.155656315 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141018443 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.702650817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.147423019 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141504807 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141108157 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.170819757 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140903738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611381064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480092591 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156613267 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363110076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142291896 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.157771587 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.141760075 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140562518 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146455126 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.147458663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.147149834 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.307386338 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140286066 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142168012 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778543254 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87383416 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677303926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145788756 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.142933267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140844466 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531204146 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140574776 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140655557 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350408033 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524757491 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140583721 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523445191 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.143089977 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761411378 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36476806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365158471 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141372813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.140705692 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367220744 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.351146721 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.171780161 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144444761 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140580533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.141651554 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607934799 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141501109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320099716 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524760506 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141002251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142872041 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.200114669 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150663349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437801973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140430656 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140794463 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14768008 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140449878 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611658344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153099246 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141163592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790709728 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146361821 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.529308133 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140886034 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.307325009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36284763 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.369906989 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.149766686 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.146079852 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.384403969 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363975854 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141762466 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146140274 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678004543 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.995369059 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.147565015 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141750336 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836743888 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140908147 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386098785 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.144176504 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.140057586 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149695664 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140423125 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140336019 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.140745776 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159144529 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113616994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60282423 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.152047381 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153715662 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143286474 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140758285 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38703716 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.156460342 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721116821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363741024 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150047683 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.173847281 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.14723837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14765855 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.142870197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140871411 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140921173 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162751741 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360817783 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15235295 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.142408418 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210814776 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350622743 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141021331 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140545065 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339558413 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.140956961 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.15192409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87425382 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.169671805 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139879709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143867617 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144223179 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.171692111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.216653474 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308613397 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.364925974 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365890562 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437799518 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141212677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143906053 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.156530703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222343181 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145412562 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.142843187 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.141034061 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721244534 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872466471 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724469967 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364902237 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142741043 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146966881 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140612261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387907899 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140834765 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417981531 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141993363 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.144193547 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.161744518 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149113985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144031287 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351227383 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415368835 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14111365 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152300826 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14084016 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.140691888 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36496645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.352546904 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606661292 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674206376 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142381278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143891746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53002171 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417240183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141084285 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141248551 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141300231 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.160235576 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142385233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.148872305 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150021697 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367869357 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363598766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469203286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.363532168 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.142553002 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.014819678 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141927264 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.388599173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141786717 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.308245144 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72576053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821625591 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390928791 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.216748095 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309280485 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.142080016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388071906 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.14526937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141931554 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142463831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141446862 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.141340389 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.363631111 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725535128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392887198 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.146937815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.146016819 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.171367576 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.308640918 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362194432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784883734 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360764935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364273779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160816776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141178623 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728879637 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365606145 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142049441 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.147708215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334526216 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141250997 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.177433351 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.029486118 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.141502806 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670373521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.353062865 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.162800905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142952385 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820724236 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727722724 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.142667171 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603526771 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142501704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140836795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418668917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.147582147 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147406704 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428166164 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.147396295 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146622935 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309967318 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.720719891 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763788985 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.159370575 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142479583 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.14414185 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141518335 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208254609 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141232928 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150329608 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.452432979 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141443541 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141111851 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.155398361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.147450542 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148732593 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.14100321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141772373 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.149484416 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.157952621 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.144744262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150754089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.245950795 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609919746 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146727529 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.745583895 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.465251038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.38709341 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147085571 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.141454297 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.146527913 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143033886 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14152217 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140983161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143829636 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674803548 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.147256315 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365418867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.148578051 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.353774017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352389802 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142661849 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311102737 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146529512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.160591544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.142922562 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142658857 seconds)
  done (took 860.818643103 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.155243341 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.156057262 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.156372783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.156020654 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.155890711 seconds)
  done (took 6.920557723 seconds)
done (took 1009.875833685 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.147467228 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.146623604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.146828745 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.146619663 seconds)
  done (took 5.728236745 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.14238851 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.142224737 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.141846794 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.154682891 seconds)
  done (took 8.721414853 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.453475779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.584270909 seconds)
  done (took 4.178660698 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.141639383 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.895264403 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.902670778 seconds)
  done (took 7.080068181 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.42555784 seconds)
  done (took 2.566261146 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.472889417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.506569876 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.284657557 seconds)
  done (took 5.403767554 seconds)
done (took 34.817675001 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.141979462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.904868243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.298084917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.141139883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.302968691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.297415648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392656056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.140873532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.145954039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.142003063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.141995286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.302381164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.379907416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.905149391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379084582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.904373291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.302521651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.143401543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.146177684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.140821682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39233654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.142359482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.141581019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.144840708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.302741564 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.286262346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.145478037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.904583576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.152448351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.142209753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.286610138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.141709296 seconds)
  done (took 74.977957769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.141403894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.145531327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.142321381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.14118509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.14270077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.142276966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.141526626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.141530544 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.141384762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.146482817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.141189091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.14112118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.141328331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.142598184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.143650386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.141121546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.140875428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.144421606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.142682449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.141190373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.14349525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.14710741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.146300497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.148735869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.141170056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.14311125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.141227224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.141360992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.142541454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.14333614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.143206695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.142767153 seconds)
  done (took 69.712847829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.141906865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.141690732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.142498729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.142148896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.141198512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.141659019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.144055684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.141467715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.144979873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.141326419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.142640661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.141925335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.145461082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.150767614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.14286593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.141998597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.142003993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.141401331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.141122708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.141638394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.140903622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.142076685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.14265686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.149109084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.149421867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.143621963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.141637111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.141875935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.141843157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.141412547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.142764046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.141069818 seconds)
  done (took 69.715318341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.37030277 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.146454331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.154684609 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.141626748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.15363663 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.146277799 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.141581527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.3824322 seconds)
  done (took 12.778071688 seconds)
done (took 228.324024635 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 1.146940461 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 1.146774155 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 1.147779457 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 1.146008605 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 1.146230098 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 1.146157838 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 1.147096248 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 1.146844326 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 1.14741261 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 1.147520228 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 1.147545697 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 1.146964168 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 1.147285607 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 1.147790741 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 1.14705462 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 1.145951854 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 1.14679632 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 1.147470661 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 1.14780284 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 1.146329142 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 1.146747774 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 1.146573696 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 1.146995436 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 1.147348122 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 1.147545578 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 1.147330326 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 1.14788888 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 1.147015246 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 1.146253289 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 1.147234691 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 1.14634053 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 1.14637003 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 1.146146096 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 1.146420174 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 1.146314425 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 1.146660107 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 1.147131564 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 1.146048453 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 1.14708301 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 1.146874187 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 1.146688332 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 1.146671004 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 1.146709508 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 1.147672177 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 1.147197801 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 1.146594402 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 1.14691201 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 1.146234171 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 1.146887633 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 1.146509829 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 1.146222214 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 1.146146596 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 1.146730322 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 1.147783112 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 1.145237335 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 1.146938997 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 1.145432505 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 1.146136388 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 1.146484773 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 1.1467047 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 1.145952441 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 1.146304105 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 1.146330075 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 1.146040695 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 1.146620012 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 1.146625761 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 1.146168032 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 1.145977437 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 1.146294774 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 1.146433188 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 1.147894738 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 1.146341108 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 1.146124417 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 1.14642664 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 1.146338366 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 1.146521868 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 1.147255707 seconds)
  done (took 89.441312861 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.159955176 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 1.152404144 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.176554406 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.160563732 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.156534196 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 1.152846673 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 2.140808728 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.399946842 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 1.155369746 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 1.154416768 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.164290505 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 2.152822077 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 1.150908858 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.172714397 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.158065567 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 1.151463935 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.159681328 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 1.150756993 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.178494182 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.156282538 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.154815294 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.180395344 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.189785813 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.682292788 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.171582571 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.390744112 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 1.155663248 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.157790752 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 2.143634893 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.16395092 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.157673301 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.161776067 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.172848363 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.159621685 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 1.153209491 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.156458751 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 1.152193722 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 1.154457298 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 1.152639785 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.169614326 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.155880672 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.160830703 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.169002078 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.186839155 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.675314652 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.159262666 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 1.154153551 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 1.153507725 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.15822675 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 2.16163504 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.16111529 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 1.15271559 seconds)
  done (took 66.975895288 seconds)
done (took 157.557579815 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.152299889 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.34146432 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.14227511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.141621933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.164360496 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.146520019 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140929429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.141668144 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.588087372 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.141165785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.142136849 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.149292635 seconds)
done (took 27.532313093 seconds)
SAVING RESULT...
DONE!
