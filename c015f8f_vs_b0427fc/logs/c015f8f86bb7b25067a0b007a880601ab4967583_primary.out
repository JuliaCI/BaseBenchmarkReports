cset: moving following pidspec: 24875
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.357318319 seconds)
loading group "string"... done (took 0.566997434 seconds)
loading group "linalg"... done (took 7.326341813 seconds)
loading group "parallel"... done (took 0.170482534 seconds)
loading group "find"... done (took 1.148796905 seconds)
loading group "tuple"... done (took 2.047058157 seconds)
loading group "dates"... done (took 1.302919434 seconds)
loading group "micro"... done (took 0.239854926 seconds)
loading group "io"... done (took 0.9587727 seconds)
loading group "scalar"... done (took 40.308630732 seconds)
loading group "sparse"... done (took 13.189305715 seconds)
loading group "broadcast"... done (took 1.011723662 seconds)
loading group "union"... done (took 13.951770022 seconds)
loading group "simd"... done (took 4.676875075 seconds)
loading group "random"... done (took 9.554763126 seconds)
loading group "problem"... done (took 1.997543127 seconds)
loading group "array"... done (took 22.253158678 seconds)
loading group "misc"... done (took 2.017921058 seconds)
loading group "sort"... done (took 3.405040701 seconds)
loading group "collection"... done (took 19.449260982 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.564166102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155372495 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147683019 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146603522 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185919625 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154959088 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155465861 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096147775 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968287509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180203178 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150805491 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516648105 seconds)
done (took 5.156687807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.215995427 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093401886 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10343774 seconds)
  done (took 0.87067133 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076010923 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144589727 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096116713 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077559322 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094139321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076379823 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093047971 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076845834 seconds)
  done (took 1.338757926 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.084630041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095469379 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080437898 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095195231 seconds)
  done (took 1.036106853 seconds)
done (took 4.227082679 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.716347106 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271861863 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202770325 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458981974 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193990455 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213906125 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666876813 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32588284 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.248602722 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0990589 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133729535 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389206265 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136080127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675502182 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088905172 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122525305 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176123325 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438290785 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081938612 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108153856 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115268795 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139838283 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126550783 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089724023 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184785048 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081070023 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192641524 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106780234 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079339754 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273331722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199641042 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676543728 seconds)
  done (took 10.73189302 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108689491 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132018314 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096361895 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136337129 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13362149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097985663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083267144 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095489061 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119384298 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173428488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113340724 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134729461 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093628124 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081624875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113255499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243893079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104102489 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116344171 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098512772 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086862638 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136094893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110149162 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091528809 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106863365 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163323664 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207052409 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.125784718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124496498 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096602093 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095151084 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145286847 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15889128 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091491442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079635231 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170041793 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120974045 seconds)
  done (took 5.083384579 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.064334156 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187436512 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118799684 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166968421 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079462163 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141304412 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.092857126 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111399782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252454491 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.168433191 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485374718 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138562798 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098806832 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096002098 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08127453 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095535943 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.435502585 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155825422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132625742 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095783216 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103279891 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09912621 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361435257 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07969364 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093751079 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081023077 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08068945 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161413897 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080597025 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.197689186 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.0994512 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101168328 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132771905 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193567087 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124783522 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127420225 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133236622 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078814978 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095695525 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174985261 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085381147 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096518334 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118934181 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116382641 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131833574 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097737773 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095443938 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.193035505 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078744602 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112243663 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.89993073 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179517305 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106792535 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097071028 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303310569 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0975617 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096075398 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076653246 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258169063 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.192678711 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101171187 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.120918092 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080356694 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097534385 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081813152 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381845729 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095456664 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.665915545 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083317406 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108639877 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082360197 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095257731 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.074967168 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10358476 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101951648 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097512227 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095472068 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075884806 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097278427 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07746778 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095542122 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079762467 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108234948 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213226838 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096300617 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078349135 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095382755 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097598142 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126114442 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09917468 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078393849 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131391253 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097640661 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07933102 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131939354 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096578263 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088871402 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098188078 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141551608 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096256008 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.121929261 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077679417 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122712438 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097356978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112669658 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109173684 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097156683 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166749557 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07708072 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093907493 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078484735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097540805 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082299161 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100776921 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092116157 seconds)
  done (took 22.384478115 seconds)
done (took 39.941566385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315821978 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10107485 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10084742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103646748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082902867 seconds)
  done (took 1.463612247 seconds)
done (took 2.198393399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.161151998 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113169882 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093085138 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126157123 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076620037 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1320012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12849152 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093269778 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129928069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091363818 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109072554 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092343896 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07535943 seconds)
  done (took 2.181119819 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093399024 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112431488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081689073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108691558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075444305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108961717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091866866 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114968534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106879141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084262437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091173702 seconds)
  done (took 1.799138863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092531491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11089444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082554396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108200645 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075754064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108388994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091558145 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114208511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107849328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085082579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091625694 seconds)
  done (took 1.796588621 seconds)
done (took 6.50330884 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09068313 seconds)
  done (took 0.814848678 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.91296013 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.740488767 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110324356 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148779565 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313283061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.169088989 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488225792 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.104151745 seconds)
  done (took 10.891142329 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.142239609 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081513948 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101310061 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081237888 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101077876 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082760047 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099421399 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099608888 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08279441 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095760938 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080345252 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098355176 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082849548 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100737496 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09600224 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083268479 seconds)
  done (took 2.30048614 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117461225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114833918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10316798 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105812902 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08426691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102288376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103016231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086651265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099611873 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099900486 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088054757 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103902572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100251249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077961999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103016946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10364282 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08395875 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103901392 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087029714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104529242 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104414228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.076603285 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100433568 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103699246 seconds)
  done (took 3.195510906 seconds)
done (took 17.929951954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155886361 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105840972 seconds)
  done (took 0.99388559 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093577288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110960531 seconds)
  done (took 0.942245374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095585815 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094853447 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.11866615 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106849962 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079030019 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09426941 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116314335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07824542 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094655779 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078093713 seconds)
  done (took 1.698109656 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081246063 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107528344 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099049606 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092916089 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102275183 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093037362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08587388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097529923 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1069057 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075090046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099567494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111460481 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083570657 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113309203 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102621094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.080981443 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099710196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095992398 seconds)
  done (took 2.471821305 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078472578 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096402005 seconds)
  done (took 0.913123389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080417294 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092108022 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078403455 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095706466 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092950926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07580734 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09161552 seconds)
  done (took 1.344723804 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422161888 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11714324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.274600716 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082513201 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.116174001 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291495552 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095986157 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081921669 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100511395 seconds)
  done (took 2.377188066 seconds)
done (took 11.477650293 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09141972 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113297267 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109542072 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449460386 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104685164 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096639942 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144332119 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.240272428 seconds)
done (took 2.096208452 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.140774307 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559615909 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41742712 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227139147 seconds)
  done (took 1.948949301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.390297522 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096765245 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081009848 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078665397 seconds)
  done (took 1.395134145 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078546482 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09787186 seconds)
  done (took 0.926428866 seconds)
done (took 5.161852539 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07874893 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097573805 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109493793 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094381084 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078845343 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094675525 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075293475 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096621036 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077767508 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.094742525 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.079168456 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09474067 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076305443 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093176467 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078659696 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095240199 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079193177 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092741553 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076271196 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092723445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091866771 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07912495 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092597088 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076807818 seconds)
  done (took 2.881571854 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097614723 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096958815 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100807537 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084487445 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099775458 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084400881 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100423964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095732492 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083921429 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09721498 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084070071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09887545 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096339583 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08295596 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097685226 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082584792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100431649 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09599332 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081061007 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099149601 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083652171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097239682 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100145186 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083968827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099200373 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098670021 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080630772 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096462876 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083735954 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099754596 seconds)
  done (took 3.536892085 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084182002 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092722322 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077133346 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100642554 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076568503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095376124 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075794639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093985089 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076818492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093472945 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078138387 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093376156 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076280831 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095192967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07753588 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097244437 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110077171 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076962699 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093143384 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077325736 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096696157 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076948686 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093853259 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076839476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092717288 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075785591 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093507476 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077042927 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095050564 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076069196 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09719275 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079537476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093359718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082710288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097555363 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076268628 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097419077 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07589284 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094411688 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07584416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093381408 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076791861 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093489691 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083495 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093744353 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094813192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077038178 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094601079 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077166297 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096259118 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075966049 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093706373 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077827564 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094404196 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080243049 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093290218 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078381326 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092952978 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077525607 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093228301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075954789 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093055711 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078573312 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093684279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10917862 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08414633 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093142995 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077732789 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094099671 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078547977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096132491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091207869 seconds)
  done (took 7.024819794 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128765671 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122979841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078841183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096081151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075569702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094512151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080928585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095178936 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07792411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101186463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0940217 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078210281 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095411366 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092266649 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094514261 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078395846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099955652 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091785569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077102733 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097943638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076794983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097820298 seconds)
  done (took 2.785545174 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.201606835 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100992562 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13949061 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104083272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080511639 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103925057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099636825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083140223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100639401 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081933547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099096105 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100099662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081084386 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098676528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08101375 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099273585 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100250231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081636838 seconds)
  done (took 2.598725508 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090799822 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096858347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09675673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096562828 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.206866904 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08154345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101125227 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088469779 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098774823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09592988 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089759598 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099903289 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081391549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095991512 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099007864 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080311781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099814683 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080131586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105838235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101891947 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08530913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106717196 seconds)
  done (took 2.945775138 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095493062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099102166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116228717 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08282285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093245197 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07776939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103683817 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079293086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103504244 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098140042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080411305 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095183467 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085159797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097238779 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085128177 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097214881 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098707404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080113148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098927536 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076010734 seconds)
  done (took 2.608161098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100592635 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098409335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080248132 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106270928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09841698 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080968933 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106215798 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098684829 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080563757 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121205332 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098877725 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081703924 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106128002 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104736998 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080970405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106390435 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106757443 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10622945 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081260751 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098933524 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122559446 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080708918 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10658872 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097380555 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081341811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098386829 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080771921 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103198456 seconds)
  done (took 3.483804042 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079675896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09647897 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.076975349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094048777 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077357844 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094618123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077720718 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093523793 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079964389 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09451339 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079234525 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096716615 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079864344 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096719665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080548434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097841501 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079862557 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094513434 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077943366 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094568778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079488509 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096778682 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079373342 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0941926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077010235 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096886061 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076842998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094605803 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079496166 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094918876 seconds)
  done (took 3.38143454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088125103 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104918019 seconds)
  done (took 0.962873343 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077313853 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112538359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076997262 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.1016006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083889052 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099477753 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104490245 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084199753 seconds)
  done (took 1.511203817 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09409354 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108547735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081235428 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110161637 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107133195 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096033656 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167448302 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099401697 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085625983 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096175153 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111137144 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07920081 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104010911 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080242127 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103129951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086353125 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095498391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085029581 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100154489 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096153984 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081593806 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107901168 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082829728 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094974973 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083705961 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107346168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110284491 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080984731 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101548131 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105190681 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086912408 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092092544 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080363123 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098499358 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078557112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106618402 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113106717 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083354801 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107788857 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081312465 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108322064 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092835758 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084662072 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104381486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089956749 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098387642 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08090438 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093573892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081143929 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.100107051 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092848505 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080479472 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092478879 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08717891 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100904121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090773005 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097398924 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098636699 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083791444 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10135503 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087676078 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100399476 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082657754 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098497874 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090460844 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.102550288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108308491 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076844964 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093050491 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079013981 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108133814 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121533405 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087741393 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09881758 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081266064 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09674706 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084078442 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100020063 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104443712 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086860153 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099399649 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089086991 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108035124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099886264 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085421695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10907852 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080667866 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104202343 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079797315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118364073 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098434656 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079991893 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097374668 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091649875 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101020935 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097153058 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078441345 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105480052 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074322154 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099035845 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082473439 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099280824 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108849863 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086127371 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104253616 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088691294 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105837187 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098159436 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084554983 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095812039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081718928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09700732 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088290268 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092769886 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082868733 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099558285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081360907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107594194 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097938559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080500484 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106354893 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.085557742 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099725733 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078812159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103974464 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098095631 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084052404 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106537931 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079332738 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094261813 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075400505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101609397 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098309773 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084660553 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103675215 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084174802 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093512579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078857204 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102585046 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107858188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08105508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099918572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087048244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100400981 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080070299 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105147425 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100840116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079828098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105396296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081095235 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094809613 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083528634 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101043301 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096555536 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08425904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102195018 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083372718 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099727307 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079278516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103819893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099507368 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080040732 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098055125 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079196456 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109984019 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082872073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093670277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077899728 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106285511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097115217 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080851395 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097368789 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082883074 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099598525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078791277 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098544633 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082607322 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11097925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103507344 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081917016 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10378353 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109895876 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080872672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101611667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081353899 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100371132 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.081331422 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107663231 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104359701 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08652629 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101793513 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077706053 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106393558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089876478 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102517582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080746146 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101749716 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106736442 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088674739 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105376133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08309792 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099534232 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083231237 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105192295 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101093632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080701442 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097894555 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086551022 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10085068 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106872777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082699769 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110721693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0841029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094638827 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102057918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079077098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105208633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07644825 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096093087 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079760862 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099763028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080056326 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102450156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076048444 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106822245 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10657819 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081587187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098222815 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08141658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105311804 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082848017 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103989541 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084315184 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105522823 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11010776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080774677 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104254174 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093003414 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101815237 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075669206 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104337714 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097362189 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080370431 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097939355 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079204874 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102688619 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088748324 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106969032 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093471067 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083637016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097699621 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079612162 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095081848 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085479221 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103128222 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081551893 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105465914 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10152209 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081714538 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103157828 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08078131 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100605849 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082765819 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10315098 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100931294 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084104251 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098233966 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084636925 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097839184 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079770122 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101552417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081858786 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099516499 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104761737 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080902434 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099560239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083926951 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100402965 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081478442 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100495866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080520625 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102925678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08240824 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099483877 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102247593 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076669659 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107059224 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081241513 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107520708 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080985822 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09622003 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104237382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084146595 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104364518 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081920445 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100955598 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08222504 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099083138 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101739857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088466283 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097287073 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092707312 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108262696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081589555 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10350782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100187733 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083097195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098797461 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082943334 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100474151 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081565715 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099857936 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086202775 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102530709 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081552204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101954788 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1003756 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081895398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100971385 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075815126 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098798284 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080568434 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101261449 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110058469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083001962 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099377125 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080338845 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101233341 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08086962 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096376566 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088753492 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109472549 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101509348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088522593 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099862141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08231973 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111211536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094617806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079835491 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097630633 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079392898 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107147924 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082006245 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109043356 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099574862 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080906903 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096901139 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083433082 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098201094 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076476874 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097449551 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093059809 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099041564 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080843655 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100150262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084190008 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101343158 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110573785 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081954392 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101376708 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.081238715 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09838698 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080424811 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099971854 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084329777 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101037263 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098011633 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07958948 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100162776 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082185829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102403697 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081956054 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101856652 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090661884 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099655636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102661893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08494971 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094682408 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085021112 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099695315 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081272073 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.0997256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084714846 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103116648 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100872482 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090522906 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100151118 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081980237 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100277466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079327653 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100481519 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099119368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082751091 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098758738 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083209232 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108428662 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081513899 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104969941 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081336669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103654006 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107493704 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.082667009 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103143268 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089592932 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101634904 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082961361 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107630469 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103432404 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084492155 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101449563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083286966 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106607225 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.0986538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087791065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101618339 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083267085 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101823031 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079529168 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10097304 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.080853141 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099306055 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105438794 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082818465 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099712847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080643588 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09750851 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082632589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103843359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089313405 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103580557 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103043867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078170559 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097845532 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083922614 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097382331 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083732913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104037265 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087538522 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103080303 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082161123 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099059906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109100544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088325921 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103760599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079637303 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104809626 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082000607 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104327021 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101280004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082023746 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101713208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085480157 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102088157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080554454 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108583279 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102620283 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083376407 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101856465 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083137001 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100658918 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077381232 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101055538 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083872494 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106509406 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083248831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10100611 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111552512 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079828866 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10088025 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086221404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10007167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0859312 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096500082 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101347366 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083386307 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101661779 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077893764 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099638759 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079949417 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103677092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080761301 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097117879 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111885854 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091497216 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104188604 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081255229 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099696722 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07727017 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096670865 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081621062 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102590026 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101889662 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092720379 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100982681 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080845537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096745007 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082165881 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103589687 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0848259 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098412572 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076525567 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099852177 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103594457 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087328699 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099179804 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081818544 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105088299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08367667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099233197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104606579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078808008 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104473106 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095078287 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101998127 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082340891 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107386319 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108696775 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08322746 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096078942 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082939554 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105191124 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082723579 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10161072 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10182745 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097300294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105115967 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.080314464 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099744899 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084619817 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100585163 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109089422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08347479 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102353253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086484527 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10357955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109646059 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085396172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109812693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085639228 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10436618 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080753384 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102164532 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098971697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081527173 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103657361 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084286496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106071212 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108738068 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083444833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112475068 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092026722 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103996844 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079917643 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101288399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081008226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097360223 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101851539 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081745969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099405165 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080796402 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100092214 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083162243 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106968137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082363249 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102124393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082480928 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095847823 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.083908788 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104107884 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101764141 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080182463 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101084436 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.083484286 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104946007 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085562559 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099415069 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08318942 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104107105 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101706306 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077868653 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107532653 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081712642 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.1038155 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081856396 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101859007 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.082664091 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104708913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105825503 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083596666 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103558269 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091169012 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10413284 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079099632 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099202616 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106399182 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080770942 seconds)
  done (took 56.772181539 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142930205 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078357252 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097002128 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078272032 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109324947 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096798236 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078464867 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098498277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079416637 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100298086 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077684453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0966203 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106592421 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101291509 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110404216 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101932563 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077055209 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099542355 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077624614 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098607303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106651634 seconds)
  done (took 2.838674597 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101617302 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118419529 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113793173 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115303086 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088053483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112875518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112451787 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092414712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115090673 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109414223 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1159886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111723235 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089692899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109416318 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108802275 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09154544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115980502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107295892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094064679 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11230366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109739004 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112672374 seconds)
  done (took 3.181594451 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083200417 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100102787 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083773644 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096987893 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082128097 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096012762 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.085987269 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099801558 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084442335 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100281601 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080024159 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100241589 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083585408 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.097527538 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.099866357 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080229919 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148101451 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105272702 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08142671 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102854519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077208371 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104668839 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076758436 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.097873672 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100433973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086258467 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102054337 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079861418 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101202935 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081461804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101368819 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08024282 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103227166 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082903344 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.100875736 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080913247 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101530524 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08172378 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.098190051 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099019844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082993576 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096889035 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083008118 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103134187 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080795907 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.09962636 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083684576 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101833817 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077532143 seconds)
  done (took 5.363295368 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10046222 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157152853 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084913684 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140968926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117901288 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110311006 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08570012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138767599 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100622166 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083533341 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120430559 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117786228 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101436156 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088034808 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108957626 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081854664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103887793 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099313556 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086448921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10105032 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106139462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089488678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116077011 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115560545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085959569 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102130711 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10115854 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087320346 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114911574 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.1064592 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086561637 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107663168 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117293561 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107692299 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081782474 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103917662 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117675656 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084165385 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104037792 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080615914 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104793667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105908623 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088393843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118417527 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102632077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087739514 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102384354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079134041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116261293 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104657923 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109416617 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097811531 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106483994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10225598 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087737757 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116936523 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100785284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081954611 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10496047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113721951 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08046441 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10598322 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116413225 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084929926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10963422 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116354997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087748052 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105923316 seconds)
  done (took 7.957427741 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091800555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10914424 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117798347 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118339399 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089347869 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.10950326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10886509 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088814339 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107989224 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11514363 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108395215 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109466097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104197996 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112450378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108445007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089679151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108186429 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107948302 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08886508 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107875776 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108815975 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117282876 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089352445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117406289 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138423913 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103364569 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089291807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108038262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117607938 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089026998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120992976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108875883 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108614626 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117266551 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10145026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109939576 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100596399 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088982607 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108658885 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108764908 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084245555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118393395 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108964909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083411612 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109761439 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109246266 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117458747 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12111875 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092998773 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114022226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108681836 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117502609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089063388 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109364183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117412895 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144300353 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118343881 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097556281 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109761419 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116579812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118454019 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12527199 seconds)
  done (took 7.520968086 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10417997 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11316694 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.114810317 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077796182 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102094214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107016631 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081378345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101434485 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091465558 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112236272 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114349251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107133936 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089770893 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115146216 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106754507 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109864936 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088334929 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106789436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111407767 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087282829 seconds)
  done (took 2.879926332 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092398902 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121703091 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084055951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110507537 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106948139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089848023 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106242997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086108532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104745118 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106437043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09419715 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113817344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104196201 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0895326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114394778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109332833 seconds)
  done (took 2.476451722 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095400077 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114814768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118421871 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083761807 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102681427 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079548789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105080702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099304925 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079797582 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118427775 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083461587 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107022586 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103561982 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082312992 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100730457 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085965626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099664125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080903073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103609259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117144828 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095225473 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103074033 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083581789 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10561926 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10403613 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089951353 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104039853 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080830818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102718912 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103782616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083920247 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111356416 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080455515 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102576419 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101721466 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081231906 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10290598 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083673278 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106664946 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083056824 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10287968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102815277 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084485898 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104521922 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080088633 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104153475 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080121033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109217127 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080618061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104936568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102854482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085815493 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104773723 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.092750318 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107261314 seconds)
  done (took 6.161005309 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09718077 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106956055 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07945421 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101750733 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086702562 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10574534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087292124 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105374015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10470197 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081169377 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105144032 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086636748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10570525 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086869945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106162766 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107610371 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079942487 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105614763 seconds)
  done (took 2.587259199 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089051375 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104116034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090618036 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10396692 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.082916501 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106600555 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078764233 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103758546 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082023854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10431033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10337342 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086440929 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102572527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086637089 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1032702 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083989927 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106506118 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082485191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104159207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079680962 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10683754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102027197 seconds)
  done (took 2.94048978 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.110094911 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.118676246 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.088764609 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.221105605 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.09812253 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.126633241 seconds)
  done (took 1.609029628 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108201142 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11837248 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104942761 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106059957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114114448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084957167 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106676401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106638171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116759209 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099514816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106672232 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114759108 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114707859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093801666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112779722 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112218521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085165294 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106259205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104457635 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12565963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085858313 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115315711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106220372 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085903281 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106503052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114350089 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094606474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12037016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10570107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115553456 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09160071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106637854 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11565481 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119605532 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08820177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115464108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105582566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125333546 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092523678 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114948313 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10726523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091820139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116123135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111567402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116213805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087401996 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111032545 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106226599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08645129 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132243243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112294805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115483033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112922312 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095333892 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116790617 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131971148 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121747279 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115078364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09140513 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120998663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115657319 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113585389 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114889591 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09899487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113609547 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116758387 seconds)
  done (took 7.992982487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100500304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124144343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107045435 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098554948 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114910954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105383086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106696214 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085919825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106556806 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08583399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15000301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108397888 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115633207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115404272 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086134657 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106882915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106976926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093941739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106468551 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13215124 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107335744 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114686976 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095255613 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114884086 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120240663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112782031 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08609545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10636165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106068806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085451143 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111791701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106925255 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115249295 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0850482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115867475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106504173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085624177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112373977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107522796 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092395835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115407566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125364551 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106631713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086587916 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121384396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107099161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085304484 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106268141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106529102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085716973 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120341832 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120697533 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119901318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115184268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086056472 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106475582 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10702046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086029198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106831531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113126734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094537731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10625415 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132434197 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10724025 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085517203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115895695 seconds)
  done (took 7.871391421 seconds)
done (took 152.620365473 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212786212 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198402594 seconds)
  done (took 1.262341651 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.085419478 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134608668 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094853243 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166875168 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084214567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13929107 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137446496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095913773 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105267578 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085009355 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105771035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085764921 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170624389 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084209608 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105659838 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085533367 seconds)
  done (took 2.624791271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112161258 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2538559 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120511826 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103399154 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088293713 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108526525 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082520406 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.1092982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088055038 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104157784 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086580293 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.105063741 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082561003 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105739162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088549463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108166698 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082713433 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107580773 seconds)
  done (took 2.796313863 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111452823 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145667723 seconds)
  done (took 1.114299704 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.238801711 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160213452 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225009448 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.47134901 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274919559 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.353142443 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196761815 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.207428603 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163672106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.192200551 seconds)
  done (took 3.337277294 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116909902 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180798945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314683359 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154580079 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104012373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12504804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154084203 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129130058 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.120710206 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099231828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120836789 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11679412 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136229744 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093246855 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114238401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094879309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139343175 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113073994 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092420925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114630319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135997169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083970789 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114290048 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111603549 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09548193 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117716443 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105366565 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084509026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114649476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092595399 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112265355 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123186567 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095678158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171577133 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09996403 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173297424 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096073095 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111174964 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092517695 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110394875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116361069 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094624049 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123340787 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116178576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083704741 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116550028 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082779774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105407423 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112888382 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094931565 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112665029 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111326876 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149757427 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.115427963 seconds)
  done (took 7.277780738 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.780467078 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153837124 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088935839 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.870038059 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110494598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125646991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768293589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110484857 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256105053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744398044 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130842475 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095380923 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223684104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235041694 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962224811 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308583871 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632578175 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124154952 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125495568 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.172820521 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095353885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134318861 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129665058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427305451 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092418191 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111247217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115723825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094646607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178511907 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101251879 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112844903 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173517716 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267521038 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178558433 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113732759 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087653864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109869011 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167496398 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265851409 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208412846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176766075 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085704875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109795813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097423216 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131063222 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107147073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158909795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170427923 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189762584 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091854041 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117335908 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118830921 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097375699 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180972268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0975779 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310242932 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314840845 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087811082 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120534062 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124888334 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259299907 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099725396 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220186873 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138735013 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.207619253 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089090746 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822823264 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165874952 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10974458 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094483079 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118112465 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114624988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097181828 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164531805 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402947204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121225686 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112124468 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088468255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223685545 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100136051 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11010918 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159472691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114899463 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097687843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12074683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167245508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230488051 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121726755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117893578 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091775968 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123162103 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114127564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215053865 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214551883 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158941024 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210749967 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121724395 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159543364 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187741631 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095510738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189828962 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09642162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121698732 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119374889 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187856853 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.142935747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121246912 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113768426 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093666847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144867052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125521704 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117172929 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168370638 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473692145 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169469574 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085012982 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125707574 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118929505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158453858 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115973374 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237860387 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121796294 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166036917 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11957654 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107613864 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09637412 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180631671 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098999533 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120674293 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120216686 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096262472 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256503272 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189886823 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120251984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240471783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181243104 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095778519 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168555911 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120124885 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16439794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118746613 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123425037 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09217266 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812472602 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123086099 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096251937 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114085172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184989651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110374169 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101146466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122674364 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107487343 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81075007 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126345141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119683475 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100475311 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116510968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120086783 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094826364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114219612 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159638274 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224944799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117900101 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096056237 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122644845 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157616043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115547821 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.122691705 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100894314 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123257955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119759563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113481504 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101584115 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165174243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18065787 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.213760149 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577822142 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1110087 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100999165 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224192191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111065552 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286249306 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096177336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220035959 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159798162 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11909766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316295033 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161841704 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183628063 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125612906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169214116 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107440517 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09380589 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182280176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088659165 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116504254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161189268 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123293264 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098932559 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.987276519 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1117441 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227996534 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107936704 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167798987 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091434415 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118733239 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28623941 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110129568 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103919935 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181804915 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091382946 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122808881 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.839001218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123263883 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12069431 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116310424 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194176732 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181840255 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095739495 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117162881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117830224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159062809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209101762 seconds)
  done (took 43.613380407 seconds)
done (took 62.884235571 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2757016 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214868629 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265857996 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167960606 seconds)
  done (took 1.88876617 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170227981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14828424 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119944691 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107108292 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149749661 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083074763 seconds)
  done (took 1.664962422 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35693832 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273189765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240536939 seconds)
  done (took 1.764593389 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288106196 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242397892 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466600274 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.3197252 seconds)
  done (took 2.329581308 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204833069 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130947358 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109928623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.101944796 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194331963 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.240876607 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139497719 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198393896 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.096961701 seconds)
  done (took 2.351617566 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194449565 seconds)
done (took 11.086589084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.287888794 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.218323531 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.160176997 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.244033346 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.238970159 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.16547613 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154691358 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.240240319 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.14700852 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 0.195436008 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.147822216 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124774364 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.259239529 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121551256 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.083558801 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.159653666 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091907745 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119584823 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064621634 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210741433 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114522457 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.15659522 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109051316 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121563663 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132218487 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172382107 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09362989 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197556872 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150030176 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11468552 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.086503561 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17373576 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.241260053 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091471796 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11461658 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.186111778 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.114510768 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.196954291 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120626658 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.107382389 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120598129 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142307862 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096259004 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.182465808 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.226000525 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.248089083 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.190070718 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150796762 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093485065 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090393225 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11126998 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11549091 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084429714 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122307226 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092150667 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.097936311 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065656151 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.170189621 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139954579 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116221259 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118127764 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.113697152 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.175375422 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090281563 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.218721928 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113910908 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08527243 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110669668 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136114455 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082962554 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.123197109 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184456619 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120569734 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.223345002 seconds)
    (75/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.075814964 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119275224 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 0.236839951 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.210481782 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075015096 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134084459 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.15827482 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095330544 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.210401342 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.120938666 seconds)
    (85/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100775978 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09622684 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121399641 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113908069 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113129141 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107640046 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066651076 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136872864 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.085268478 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123475645 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122063228 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082744796 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118201465 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09399599 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.176351894 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190044876 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135373867 seconds)
    (102/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161171655 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.179273259 seconds)
    (104/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117982065 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095397545 seconds)
    (106/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118531758 seconds)
    (107/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082609114 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111021603 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116776133 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118224566 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191500271 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095891264 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113751441 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076281527 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177300069 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.185532997 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066111343 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190241273 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116201617 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084621749 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193555974 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09290194 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108251417 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218848815 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18736595 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068525098 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137052246 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.303908978 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116475256 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211548453 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.180697707 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093560865 seconds)
    (133/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128893584 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066236646 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116497216 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113243844 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.138511791 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090152832 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.115195237 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107550218 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084819722 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118700022 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065058051 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.130877891 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065534959 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115983783 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.105970828 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091276174 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140666328 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135060472 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108378061 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092320315 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138248041 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.122016771 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109041943 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112814319 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19438769 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090131102 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.084636086 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133057475 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185723524 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093441804 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.098356717 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088722403 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178184348 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.190967857 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082950521 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131265298 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085239527 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135035408 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08714174 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108505827 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066719971 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131960747 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065558303 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19240094 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066863265 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177865574 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066345542 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182128282 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115719816 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066097911 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115432864 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133407859 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090433543 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092385485 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118273419 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116025069 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.147910013 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136360548 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086941208 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089449323 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084812422 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107126421 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090323089 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216060427 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217437842 seconds)
    (198/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138198174 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111516437 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08992024 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115243743 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.171008686 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099295428 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090286029 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.084946307 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089442751 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092103436 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10794542 seconds)
    (209/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06705937 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094230273 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108551498 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092534973 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107884318 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.106652552 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085777204 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170585655 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152575637 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113190553 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178449511 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091325255 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090255087 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067150161 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178772365 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110976355 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107977862 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110105381 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089845785 seconds)
    (228/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066455031 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.17056859 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123592598 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.147591702 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186921403 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178735962 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086907523 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091099707 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112305488 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09203167 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087295801 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117200903 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067413748 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084331844 seconds)
    (242/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109582887 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06655391 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.1146735 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066037302 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.135456134 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066825252 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115636212 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066982582 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150922565 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129890814 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120369427 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066881918 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119050483 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066184219 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111272512 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067459832 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110652751 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152288271 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091343033 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076639199 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109106193 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.113852941 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138174776 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06847913 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111946226 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067960596 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129517031 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091608846 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115993406 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106119335 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090329822 seconds)
    (273/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07563355 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112189075 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067236594 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06612693 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120341154 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083470003 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1107222 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08366695 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176073891 seconds)
    (282/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122298061 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087584005 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108475675 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093053471 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110338778 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214496586 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066133209 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179013459 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107581657 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117200875 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085600993 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09109128 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09167356 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.100974487 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066050744 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067196408 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092805715 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087228987 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109636627 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091263689 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126124801 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213650123 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066735963 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066673052 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111527391 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111430046 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108982037 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090730304 seconds)
  done (took 39.479474167 seconds)
done (took 40.37300621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099134901 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134741012 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094476185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134444349 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122063671 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089959035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117458 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096084358 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122353524 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123709826 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09683969 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069527745 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118651775 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119141371 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094951917 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134442371 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12278443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093155103 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118053845 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084256279 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118013551 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084521225 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111122341 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068639043 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120569278 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092382217 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115794841 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094667546 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.109835155 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085558833 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113548844 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093423984 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108636944 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122461065 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092765764 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117239576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096515871 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119491531 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086631581 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109703656 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093156767 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.109753668 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091758187 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.117144482 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.091627241 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.114682631 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093314902 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12202034 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135342315 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087830628 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11876897 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095566264 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119983275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092685717 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114597953 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118396937 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090921942 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134947467 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093672517 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115070422 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094671303 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120267131 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116465112 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09372508 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118129565 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095493926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12209652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091068579 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119565638 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091956637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.109618448 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117876084 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089490997 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11013957 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094997354 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121571418 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084644047 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116300938 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091994012 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115317977 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085354666 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112989185 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.086993667 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11640577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087422176 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09379334 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090528602 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116184198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085083264 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119683101 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091866535 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117365239 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087812011 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121169648 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085646042 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115179256 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086043673 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110036518 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087712432 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113527049 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085823251 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111769687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.094855806 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111305379 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092052612 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121467865 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110414482 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091710302 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109176371 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08568143 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124513525 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096050059 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110343865 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088639408 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109239739 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093160714 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109411298 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085176948 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109980372 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08522042 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116819045 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08587643 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112065265 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.092621595 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124667404 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110332068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.089216302 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111627752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.085773122 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115832876 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086154195 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110358832 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087590404 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10185389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087525662 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110197074 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.093507985 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11214085 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094000274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112235098 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094111001 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115957211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.091183846 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116571794 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085010467 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098324981 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088162571 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112438664 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087349254 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110547727 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087593132 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110191643 seconds)
done (took 16.739596493 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085849349 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182929975 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15079732 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14038625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105635061 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110917039 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120957949 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11745234 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113604047 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141791452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109330972 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131402992 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147105274 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084944559 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110990177 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.089736997 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112158749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101390845 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145489751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132205879 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163007122 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084908807 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144568978 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135128345 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095482493 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136997363 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111294836 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090235053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114337269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102422585 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131982298 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089424577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111438092 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132442157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104615863 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119800442 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085360569 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118012114 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0856041 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111048031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139849851 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108433116 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116681962 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.09118322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11479113 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.088494701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111694983 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119248343 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097529976 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116307258 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101101565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154388386 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114480672 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120397144 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088091487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122038167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.096181209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.113380129 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.086437352 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114187243 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086054724 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114559264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125560936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115156031 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.114809007 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120755508 seconds)
  done (took 8.544375821 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103110037 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13901595 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10425087 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129368317 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111378707 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087490624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112649853 seconds)
  done (took 1.749058695 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087231566 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133380581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109581529 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134972045 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131195386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1082284 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139328042 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086749603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130933978 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088253339 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133523421 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151280707 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08886834 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119321058 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136778361 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087350353 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136878686 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087026299 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115577227 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109995769 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11497153 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132871535 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089597496 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11259382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101041215 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113189552 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160738165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09244589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113495722 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090723033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110986585 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162337209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101059198 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123673642 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087114192 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127648296 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126742639 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085384154 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128706654 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093093965 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126929182 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089153527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114663653 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085428133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118100897 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097907902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.114912859 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088674639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115382498 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132879366 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088501398 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126665105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087607215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116571247 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088600484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11920373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097367993 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114053858 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107966338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115015346 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129726897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103843493 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127785797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103604778 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116862495 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127814555 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101959649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116537639 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089771991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117179644 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105116746 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112082773 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089642868 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123757962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.08992523 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.136710814 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136546337 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08856282 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124650814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087306068 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11410961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087950163 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137126966 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116430085 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088582347 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117600901 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091214878 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1113871 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087031465 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116582211 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086240105 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114880784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090562051 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113737864 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090870035 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130825047 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.088356838 seconds)
  done (took 11.708185169 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089540213 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114247865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090182885 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114706077 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.088752561 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114618759 seconds)
  done (took 1.587618894 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112726293 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11763241 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102916949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120195015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15544498 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102548146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129322395 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122424186 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106294823 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126875426 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127579953 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.102919517 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134343247 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120904749 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103035327 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12046507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10306386 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123436606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127913124 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095288012 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136751828 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12031773 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095791291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131705772 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091827589 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121216455 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124543675 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101109938 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127586654 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096392551 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120716238 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118123184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095129235 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123796634 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129576132 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09497026 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120005888 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.092824936 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124813071 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117355502 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103283728 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122346911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100422017 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118317726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122747887 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09446373 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118936068 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123977287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102962473 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119309396 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092736923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120771018 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118260252 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093463552 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120662671 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096667078 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.11919419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129361255 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095252167 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122791157 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091288006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118578514 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122605035 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092306847 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129439767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092562895 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120247221 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120918276 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095436059 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121153719 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093463005 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117136006 seconds)
  done (took 9.164118553 seconds)
done (took 33.706713004 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685928048 seconds)
  done (took 1.655417489 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.717506014 seconds)
  done (took 1.689266725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.090729258 seconds)
  done (took 18.065321643 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49751949 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579193735 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808839752 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178913791 seconds)
  done (took 3.037931876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93998143 seconds)
  done (took 1.930717778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24335008 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229282501 seconds)
  done (took 1.449481109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769471047 seconds)
  done (took 1.753633987 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.342660537 seconds)
  done (took 2.320740557 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328262146 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185226378 seconds)
  done (took 1.497172459 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.5506544 seconds)
  done (took 1.533744632 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.752650741 seconds)
  done (took 7.742234764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255698712 seconds)
  done (took 1.253263826 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299082757 seconds)
  done (took 1.284718396 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516499849 seconds)
  done (took 4.506640939 seconds)
done (took 50.700593875 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097657173 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125875571 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100233636 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123654302 seconds)
  done (took 1.430688389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099349863 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120475373 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09964207 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120077594 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099415871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120078994 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121880103 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099962117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119090399 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095297058 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121395929 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094558542 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123368046 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121519651 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092421607 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122240336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098201973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12057246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122963338 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095452043 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118606199 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096902636 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123373272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093811617 seconds)
  done (took 3.63244139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097821322 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118445759 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09510509 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117255646 seconds)
  done (took 1.42649341 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098881506 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141736439 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137718146 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099213545 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142535035 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134743032 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091330999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116509938 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092988473 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123625191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089890562 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148486302 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136515445 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.0988818 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127271192 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088252334 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116911735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135853891 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098972933 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125486434 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09153747 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124564239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08912886 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138762856 seconds)
  done (took 3.782440711 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.156000218 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152679423 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137320544 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094463562 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155136191 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140918319 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086783445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139494937 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086748053 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128864283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117329012 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131723571 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127216788 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087031211 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113225997 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086684687 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127585393 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127123801 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089664418 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144234792 seconds)
  done (took 3.428270744 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096336124 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116735304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087552632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115239465 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097764182 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120098157 seconds)
  done (took 1.632801567 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089958412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11369948 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089347651 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113232791 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093186562 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114549697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087994259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114786638 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088718627 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114270436 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088068569 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113024362 seconds)
  done (took 2.219347349 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46018225 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092335679 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120273141 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111162007 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096365299 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114105838 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101966425 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117944614 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.112163707 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114691544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087979867 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117002839 seconds)
  done (took 2.645565875 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233257644 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125121841 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288120279 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189451781 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157520297 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168656731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150462022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163170621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19504617 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154316934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230422329 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192889363 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149350186 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1877435 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136813068 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142704502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194819828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240985693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153681151 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202522253 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223979376 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162911022 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176682786 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149152306 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110356839 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19303591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094328905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129002436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204763733 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20172051 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186799235 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162466253 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144850317 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236612632 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244906706 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193864799 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184975297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135657169 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144608377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161646995 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264302933 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136054929 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231728163 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129598836 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13003996 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190056752 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192774135 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172816327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148345591 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110678602 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22337982 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209518843 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.217151545 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136193147 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132721933 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184386527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164380387 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123144976 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247279389 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222186844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179476033 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093212316 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14474724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188076604 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207101307 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166148563 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179503497 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144447343 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188425469 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185348804 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189627962 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188739391 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180459178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137378263 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16751337 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172161287 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168834955 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255273778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175447944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120517077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165304862 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148213624 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128738981 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16640426 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124436019 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210914521 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149076275 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133778674 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161308864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159483574 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159378334 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196338701 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215506829 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11893306 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110423382 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153989238 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126216134 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213251248 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138439083 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157230045 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159235097 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10150514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173852751 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123837112 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174657343 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116868971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175296122 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181147479 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125627877 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15580585 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127296513 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147838744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174570738 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224484451 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111961793 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132432183 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203332079 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198492609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147393222 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176038604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197993427 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142141947 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147094375 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196604361 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242076898 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111990348 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228538995 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154068342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133207229 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10594441 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177423247 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15351292 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159141592 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133383291 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178481185 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234204419 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098090055 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137385774 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185401106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132006836 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131115362 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159782351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146272612 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11117716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145203193 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150237115 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178885143 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177333858 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151527899 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164526245 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150055293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24848808 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139799222 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148860029 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145407675 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093300126 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191281253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222258202 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102101836 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22920481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171605549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154666645 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169875764 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132979831 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174932679 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102399573 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119876178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191029183 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164086068 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160508146 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219195306 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126455789 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206087964 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181499787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170278028 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172018871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16315569 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157764461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137775583 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157202535 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163472871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095395108 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141953462 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132478255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156093858 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141774205 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105443753 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223274113 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167639095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146795152 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12927222 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147722024 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178094568 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126955768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173720039 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17442186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144635373 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220570805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190929203 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18425268 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142140291 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229398189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093117239 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124635434 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141776221 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167560375 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105711705 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136056627 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164857141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179211574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181032757 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201119104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134115533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20122933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18900183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093782305 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168524231 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183727983 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173262816 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18368603 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138570852 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151099357 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174099008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155328859 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25033471 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164495811 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174601751 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204618567 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149309538 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130565402 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151323839 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183758218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153159669 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175243479 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146855933 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138389244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159412172 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103561428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156665991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208746779 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16045251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186336435 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149197675 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184365155 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126929824 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164271297 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15752901 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163755236 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081091409 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172501007 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228352043 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146126134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168016568 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190081368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131091776 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.17626771 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208473739 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219675173 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136830559 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155940859 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130356032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162266142 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170924148 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175229648 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185310125 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186827509 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156514012 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.10880494 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137882815 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149045373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14965615 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104759798 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146812009 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172906793 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138430638 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1843603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158587217 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156127476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168912095 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150092535 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143453337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149217959 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213337812 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173298504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238686478 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146986657 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177100178 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202882466 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126414068 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131116791 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10455166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175684144 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135113816 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185707814 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.146274883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156622186 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179030566 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18944489 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139095457 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119572721 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127290648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19781643 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16189199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122222623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.155887139 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230585847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112565321 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131386684 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170208808 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15613663 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146483492 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193853783 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078735847 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146627373 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126789427 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10358586 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163065546 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232568914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134722162 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157966262 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164498906 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195089276 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163571456 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119663826 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147907119 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164545599 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22480048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183382275 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102557649 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15505625 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20095111 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193378101 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160225583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138042634 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20141602 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19088023 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221682539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112636112 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165166159 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155120095 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210310167 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105675257 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231068686 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133538972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196075703 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151652857 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141222484 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172539003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.146643855 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140085576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186332033 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172296914 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134740558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103900952 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192433694 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175437664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152897127 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098599948 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204440565 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097171991 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186404808 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255910269 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132726587 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151654833 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145522029 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107045927 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155427377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156643033 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139269607 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.160375465 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203555582 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13252042 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189071233 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226991794 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16805014 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172146905 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14268908 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692812783 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10193618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219062164 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151928117 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20344919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14936308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173284226 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157316492 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166726517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189957813 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157596848 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231217177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217771696 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175370055 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130961776 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156292771 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159258702 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114850618 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150330506 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165019469 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15701099 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151198682 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173692039 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195562807 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105192071 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140003034 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194993218 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152783119 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183415339 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177097572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138716095 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170128443 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181032163 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132758987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177358368 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233042293 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140114975 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148197398 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105210159 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153743351 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257971761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123530179 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196726414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173528008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157079194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164445373 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14599256 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186547016 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155629967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202886245 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116231713 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156166552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154069061 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137003029 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129681571 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153392136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164588329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118659641 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157685274 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165632065 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189663076 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122723641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14353208 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126547954 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214347961 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212492794 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136008899 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106163403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160019493 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148994884 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172359867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201823663 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106020216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135275343 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135572899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130631413 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137445859 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151896944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153326967 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162148509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201888484 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135364492 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277682932 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111002944 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151744919 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114034579 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103730656 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150500774 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144010575 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155077497 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149754949 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228123399 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144978024 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130822573 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145400679 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097695652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134908029 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162996175 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163256397 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173927541 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143156275 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080684643 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15700379 seconds)
  done (took 79.657802672 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169367265 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142524172 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155595822 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.214878627 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18493857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281767081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.218935574 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263677233 seconds)
  done (took 2.708848606 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092547937 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14357 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150710371 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131301993 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090695494 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118023811 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.327114322 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130988848 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089557417 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139982894 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.145268676 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115712845 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.505487745 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.088111254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121084492 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108040087 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11612828 seconds)
  done (took 3.689341171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.456450497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708720199 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.474147284 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.123783929 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.07942407 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13390507 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.691947458 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209201507 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093254055 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48306905 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771725828 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178294059 seconds)
  done (took 18.481957674 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09790542 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119793125 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106366466 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134732238 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09516185 seconds)
  done (took 1.635345863 seconds)
done (took 127.355199877 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103576033 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398470673 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071701406 seconds)
  done (took 1.588891573 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105837272 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135432303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10752647 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13496328 seconds)
  done (took 1.57639164 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096481252 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125630945 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107578795 seconds)
  done (took 1.416349867 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320824967 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188457535 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141183788 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104603356 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128959035 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102084335 seconds)
  done (took 1.424367748 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095660323 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125769736 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096624229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129126071 seconds)
  done (took 1.539751706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094127883 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07032098 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100490278 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074585577 seconds)
  done (took 1.428183324 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112159255 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130581728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10294778 seconds)
  done (took 1.439330122 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128321828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137882368 seconds)
  done (took 1.359642674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103604901 seconds)
  done (took 1.192542897 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.116598494 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167910991 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187046246 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162830664 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22457283 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163068466 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.111449996 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.139511941 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129943092 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142454141 seconds)
  done (took 2.63924051 seconds)
done (took 17.445963273 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102096139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421085384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384030716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721405543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378822232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029224167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14530209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16385228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09265667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138757852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673333346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022248256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37746594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980625519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372804717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677165693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120420573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091258385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120897773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016279897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090817315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121324793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092796555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702436561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397117889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12111332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372074634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091825354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124852021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382365613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121761744 seconds)
  done (took 16.875300919 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093867446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172603628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097612603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136956176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123634717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093355722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12390971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092495654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178060681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121847674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110141861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120330255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124915373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09440518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14111776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09220753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124377653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092184144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12128989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093225571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138495456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119941078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093393128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120841369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092658993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1349811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094233545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120392019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092149258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126259757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127432789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0945484 seconds)
  done (took 4.795286472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13937419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182094449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128165391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125763039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167402298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123583242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198708035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117671347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181055403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122794252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13948237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092109958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156151766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095048987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142239576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120498982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096366387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121354249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092053326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122210958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110455694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120970314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122042715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093244592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122391094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106864435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123651246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092289489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120699514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126480974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09926346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122882499 seconds)
  done (took 5.125874617 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096156502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127270293 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107444153 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137492305 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094609332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124379413 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096369862 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124010563 seconds)
  done (took 2.004901738 seconds)
done (took 29.89140517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102400042 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122089436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097180699 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134761129 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096264349 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130460941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091533346 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128138725 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098562093 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126243949 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.099606933 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.120444663 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12311967 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090926989 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128218875 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092041831 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132741406 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0964409 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132391021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102294741 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.122665166 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099424251 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127324958 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131352916 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102681343 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131895959 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102806321 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126707534 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092579112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12300281 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.094252297 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.131518293 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091869038 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131736418 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120788694 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092258835 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120739674 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092388645 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131499453 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098422822 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123601638 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098554534 seconds)
  done (took 5.824618163 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106469298 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140068773 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103726909 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081305266 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116769665 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082765139 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137624297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079035141 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110002228 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107528736 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074410968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106643584 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079081914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101371011 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076981048 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074964019 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108675965 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075220182 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075956747 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106250559 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080165111 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072094018 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109059143 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078138886 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074785768 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109832585 seconds)
  done (took 3.579554875 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098861732 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135224524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111884307 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182893128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15961839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099439832 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132348005 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110530196 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137656406 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120051637 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095775413 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14859182 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110256496 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128101431 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090679059 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.1363594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.105923567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.122126275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126943625 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112688659 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138490255 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102179874 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142565825 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102816568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119881671 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092917152 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124264451 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133891476 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096989843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129926102 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095127068 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124791406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093236963 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.131809914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133041451 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094035821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140498104 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100854478 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130358967 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09196437 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124808777 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0922549 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140887779 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166867095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091217908 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128490701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09860728 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130888889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120621492 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110615716 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130731431 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090919557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123950829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091806535 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120712925 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106078619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123287528 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09366018 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13128724 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094172848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133588042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095974826 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136712029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120755303 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099313121 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120535728 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091957761 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120560105 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113876345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122747926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162835515 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093013829 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122072274 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101672518 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129714795 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097450114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122259241 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10739725 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130947872 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124808697 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101398539 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124035731 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094592688 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139850018 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093945168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123872031 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092130038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128414334 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093627682 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122747933 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105803959 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121724735 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123618148 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109515398 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120139342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093073343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127749786 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096770832 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121512466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105344724 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127071816 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121874402 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101432236 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1212289 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095047379 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131752121 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.096580982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120677904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.096217447 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127686708 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092679174 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122909515 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095017506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123445871 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131113742 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09821075 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126092141 seconds)
  done (took 14.729452663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225414513 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215445142 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.123794397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.207145653 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.104613816 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.133992333 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212251896 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15471212 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.091754926 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.122363132 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.092686405 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.161019807 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.155454887 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135017476 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.131712646 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121959354 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110267854 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163920997 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21219314 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.205744392 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142742465 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100101566 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.125475307 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.093871336 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.124829041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101777927 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139734591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13259108 seconds)
  done (took 5.162346071 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105902602 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155803853 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097639388 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143627095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147863771 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091997689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126885605 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093159575 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134361443 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134300102 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092594577 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128221118 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100075828 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132283128 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.093489696 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.131299067 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132100311 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094482613 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124489177 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096424992 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128719616 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100830373 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126026151 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090839477 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129556339 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092687461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.114418408 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140611544 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092231888 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144634902 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120444324 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098539093 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132392799 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093143449 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12212075 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094294639 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124125275 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094618279 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123974449 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090813795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120554058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077619299 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121149464 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105635823 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128443546 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080304738 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128832525 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097347314 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128368963 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.089782136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125412997 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094749996 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.125282323 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100454833 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127707605 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127183815 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095816237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085426123 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129314001 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.094160452 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114415982 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090857647 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127126517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086979368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129886425 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126729419 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092135091 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124186767 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097829844 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128454167 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095241106 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124886166 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09063522 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124220082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097448832 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126886554 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096226255 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121836173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092470945 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122696287 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075395502 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12278326 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0740008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125113917 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091326406 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12093743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095527659 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127886302 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106722052 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.123903143 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099296317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123351896 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.09250757 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12545557 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083550971 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125322787 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137993133 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109591666 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122905123 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.090401328 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13654356 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097780443 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121895026 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076061127 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129860941 seconds)
  done (took 12.871204335 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.115275759 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.148482248 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094914612 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137353705 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.148607915 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.11603112 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130578446 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098659194 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.124315085 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109545138 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123522301 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.100947831 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126715381 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.101428728 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.14586625 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131021437 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094724448 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13182317 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.100770244 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.157847464 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.106349325 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.137561066 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.133295675 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093568183 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127633767 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105425481 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.149474857 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10243345 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131708231 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107676556 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132976442 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.148478416 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108471248 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127296952 seconds)
  done (took 5.282157095 seconds)
done (took 48.546215678 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.200928761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440455163 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198151042 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.090243955 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.206998953 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21798121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205244131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194381079 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.819916652 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197808911 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.434401083 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.858393304 seconds)
done (took 60.194549675 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.356570472 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333005619 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46381424 seconds)
  done (took 3.932069855 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.549278912 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.133316518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457620835 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195792587 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199596693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486560717 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.845540829 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.557007635 seconds)
  done (took 28.001438279 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196040753 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.605838264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.882688828 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.881986433 seconds)
  done (took 18.695456939 seconds)
done (took 60.661691184 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.203059331 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.273079617 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219284351 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175769875 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.329717954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219249591 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.267180452 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.199852504 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.21264535 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178024216 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220071089 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204542485 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20247883 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.30201167 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198588983 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200616066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238446709 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.780442169 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605839078 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206681674 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22332513 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249344647 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.196263812 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198965894 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258026232 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205122185 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199353836 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206096534 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.761440246 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199404417 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204269012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.447259221 seconds)
  done (took 189.914157261 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197704442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.379715057 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.439073525 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.256491139 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.855648444 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.395346864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333295541 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.912959651 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216173733 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.197906335 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.527662171 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199745073 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.603843796 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.249215703 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207219753 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291557824 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.426564098 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.551751916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217628849 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.470713763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.2025576 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.669739798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.61047897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.437561676 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.232147732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.264242164 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.205234968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.244413535 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.38823778 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.359855016 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.205450892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.22018882 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824848313 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061898306 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204905384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.199057039 seconds)
  done (took 151.393178033 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.498107493 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.199764643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199095212 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200153883 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232591722 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200554528 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.781976455 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785689533 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.747158133 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586923703 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265187587 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456069577 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201170091 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29631956 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212370854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201309641 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215761548 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243344075 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20505411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201526871 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780079188 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.217038283 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.731270839 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208387805 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201502732 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234060622 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592722138 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201634228 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234081031 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525414287 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251514697 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201063404 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.544976943 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.442283664 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310853569 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.202063706 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204298569 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234114243 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202205841 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475603863 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202150853 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203509787 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204707496 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.826222197 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206649638 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785587209 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206889462 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142974834 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202366134 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2027404 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.178996745 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.759451617 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222343778 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202858557 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205499616 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20220418 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202483073 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.235865605 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.862898045 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304023158 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219628402 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202735512 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206994954 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23628632 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202830238 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.517796961 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203579427 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.225346038 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27666792 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.421414479 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785086538 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208167825 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204628401 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298767778 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323913222 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204573968 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203009744 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20429836 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203756696 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205470801 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312603614 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204695858 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.638561735 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21095152 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205435562 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265063036 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300190057 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205657567 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556050914 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208225586 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205451457 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940555043 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299968639 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205618014 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204505337 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205970138 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63999191 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78885988 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.428418537 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.209212511 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.998815129 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208889135 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.65753159 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765480922 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.835790775 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209894473 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314379817 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210384448 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207745499 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205347102 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.235697326 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.22401343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264870088 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206506416 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604400216 seconds)
  done (took 348.068025221 seconds)
done (took 691.999463671 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914468361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859761032 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.995299648 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874930147 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.855089099 seconds)
  done (took 10.637067593 seconds)
done (took 11.772404209 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.396047567 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396956127 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268050748 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3983587 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236502492 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.415503503 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378507424 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227504596 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310699748 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290671386 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309487679 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261507595 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23486924 seconds)
  done (took 18.262701115 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526729256 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524117567 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271263259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526370512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248021909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535843652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409556083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425212006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422232396 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241327816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221796791 seconds)
  done (took 16.492270386 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536339257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547784741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276851439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531113814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250128696 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533798099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413781556 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424702325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423215798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241678811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222677761 seconds)
  done (took 16.54156293 seconds)
done (took 52.431767444 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21702799 seconds)
  done (took 2.355658248 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252332471 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419022201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234107727 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221583099 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21800244 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21916894 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221399875 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218034531 seconds)
  done (took 11.145023787 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217475427 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214405075 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217989181 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214074414 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217315121 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217383076 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216528417 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218195678 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216449582 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215213847 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214656793 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215794861 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216086088 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218448124 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215634666 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217473543 seconds)
  done (took 20.603728645 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218221433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215436851 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215285544 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216348023 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215231012 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.216929497 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216425876 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215989271 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21564354 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217174983 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216703484 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216540822 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215834329 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215785481 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216287209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216422457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217909833 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217410151 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220677125 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215717149 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217544117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217160662 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216790112 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.217220061 seconds)
  done (took 30.345075787 seconds)
done (took 65.586579379 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 6.212113812 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.897359896 seconds)
  done (took 11.251954476 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219218055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219679599 seconds)
  done (took 3.582061293 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219230338 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218893828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219439239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219384027 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220394485 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21939299 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219966909 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219713368 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220831488 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22026653 seconds)
  done (took 13.340566721 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.220205073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220695226 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217581015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219796635 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219584622 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21771635 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219535767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220732314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220641094 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218362554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220295827 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217603894 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221339071 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220240978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221423016 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219677563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218390178 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219714212 seconds)
  done (took 23.096573394 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221758089 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.221976951 seconds)
  done (took 3.587029351 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.219453052 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219746959 seconds)
    (3/7) benchmarking "month"...
    done (took 1.218676547 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218411747 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.220116474 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219369476 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218810202 seconds)
  done (took 9.678716423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223209337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392370854 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.473586649 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827258898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224031159 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22576847 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.097804641 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225724828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228718343 seconds)
  done (took 14.063086286 seconds)
done (took 79.740106058 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.23915214 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.232711765 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.420618413 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.228438487 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231713219 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514767456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.257404765 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343544905 seconds)
done (took 37.61228236 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.226240425 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.984549777 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.00064101 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.220182921 seconds)
  done (took 11.350435728 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.200430279 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.180624769 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.220011696 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256956015 seconds)
  done (took 18.004121177 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269893833 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553003671 seconds)
  done (took 4.969819491 seconds)
done (took 41.693867276 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225131822 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224778815 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221968611 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221609961 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223946551 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.221697901 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221554441 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225337417 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225292652 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.223958321 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.224773367 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224505717 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222769559 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222804227 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225951677 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226014094 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225873175 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223276892 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223403621 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222660902 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221756777 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22594595 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.222081172 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222350808 seconds)
  done (took 30.516213351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225212436 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223844257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224840779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225620327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222997172 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224995415 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225905541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222957875 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.225374562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225054156 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224320615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223262897 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226045813 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224426089 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224692365 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223202499 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226871339 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224604899 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226268499 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223025028 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225730079 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225398265 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224443964 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226381952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22437164 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224740589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226618822 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224538912 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226375535 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223591007 seconds)
  done (took 37.894863886 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231228292 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234375644 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227449392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228094947 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227482498 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226910657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227628361 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227071744 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227514872 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227926639 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227917669 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226994659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227929477 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227684936 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228102068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228168833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228356083 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228801332 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227732466 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227564772 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228359421 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228113263 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228270023 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227777357 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228372664 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228240209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22871719 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227784875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229079859 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228912044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228438334 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230060958 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229467133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228724991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231072099 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227818203 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234260717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236284368 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229172302 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230531729 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229806762 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229428113 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22950519 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229967262 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230537784 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229929729 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229814941 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230127447 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230779715 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228940741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229939565 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230113612 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229474301 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230975248 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231066322 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230084066 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230234267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23016062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230326748 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23175289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.229824175 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231361173 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231768581 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.230631294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230898571 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231169687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231472668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.231122173 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232173404 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231015457 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231604974 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230845573 seconds)
  done (took 89.682274387 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230692993 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228761733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229039333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228993816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229199145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230676104 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228772868 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2318517 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229318375 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23109168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230976503 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229397083 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228825335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232814507 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231230413 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229718049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232201589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228701546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232050858 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234116295 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232418061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230258683 seconds)
  done (took 28.226249674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23354175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232999683 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230028861 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23249163 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230687224 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233938854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238830125 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231664074 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233352421 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230620732 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230408705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233600008 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231114191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23035231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231156247 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231650812 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234593774 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231473606 seconds)
  done (took 23.337284687 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23199348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230564726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.234787323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231180069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231643392 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234727914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231516492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234747054 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232884122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232510189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235344151 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23583754 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234913157 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232498296 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234918192 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232856516 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.234802876 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233163844 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235231773 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233100711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232451528 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235208373 seconds)
  done (took 28.293674933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234482018 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234787018 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232584441 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232806483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.232373367 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234831633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235927379 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2326347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234991511 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236046646 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233300167 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235507073 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232731175 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234459378 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233003886 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233896136 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236487234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234470729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235180368 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233592958 seconds)
  done (took 25.841904336 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23790144 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236858215 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236986018 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236532134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237661293 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237729224 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237898422 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237211009 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238413211 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2370558 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238031413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237473686 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238473484 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237724534 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238899356 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238322122 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237427779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238486511 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237200003 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238136318 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238328456 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237917563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238855119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239464511 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238997287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238987244 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239250423 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239125686 seconds)
  done (took 35.824209605 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238325963 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239743431 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236806178 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236262356 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237680419 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236352448 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238160955 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237095874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238742172 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236424669 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.239803891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239700691 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240220506 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239697446 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240127131 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239501584 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239594064 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237193501 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237628663 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236929738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241858304 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239540944 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241472288 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237156029 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237619117 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.24179114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239102995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23862974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241974484 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238167708 seconds)
  done (took 38.325180088 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259362921 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2588554 seconds)
  done (took 3.680128898 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23781001 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241429043 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.239096232 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238807965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238421368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241255942 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241187374 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238483375 seconds)
  done (took 11.079068668 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241004067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2413636 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241679788 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242003746 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24141348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242843623 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247619248 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261739904 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241983401 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242938392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249963876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251407984 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244932696 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241757254 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241817636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24373071 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242191591 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.242314786 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243114821 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243479966 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241963917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245255846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244768764 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2401086 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.243675452 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25415877 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266733974 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243799931 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243114252 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246581634 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243684662 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240370346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243790503 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242430691 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244324066 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244424094 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252834376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264398715 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250026691 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262739084 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24528915 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242442689 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246085391 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246022026 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245325825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244643187 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246312294 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242537573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244109344 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24866696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249542416 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244348601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242257743 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249552155 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24765081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252164548 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264293428 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249139358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255293673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256703039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278199009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.270307491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248189314 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245849687 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256664444 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270174349 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253495382 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263184168 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243129709 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245922048 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252350494 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2804271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270852507 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245725801 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246443695 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246550177 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246463188 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24797251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253439095 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269033342 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246867912 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245801456 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257307618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270277048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247199775 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247294785 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248063729 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.246681175 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249162744 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257861848 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26728787 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247965566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.246315437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248978954 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249132387 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248155865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247846783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248969383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246098527 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24882899 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24857875 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252256395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258034771 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248985467 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24903185 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25531159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268091481 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248428791 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254408808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249863727 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248153715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250048037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.2546778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246759833 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252442457 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257949605 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249869646 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25078257 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250046888 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249353662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259391498 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276340669 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24947409 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250020534 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254164669 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26189814 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249799625 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253371552 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249887646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248082173 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248951455 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252671489 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25066988 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25124535 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250555884 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251324032 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248197149 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2506141 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250577521 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252163015 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.251920379 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251313404 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252655871 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253128091 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251144642 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252710399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257052883 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269540097 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252575236 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.251886903 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24946923 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252595203 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252649793 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251365308 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251220474 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251213307 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25162003 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250447132 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250984037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252427041 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252249245 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2536922 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256834723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253185918 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255634759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.251969762 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250678402 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252687711 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252618008 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252447157 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252613719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251811534 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25602551 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261544795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253026507 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25275292 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255956933 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253282065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253326106 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252588139 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25699576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262556996 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25343007 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259244337 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.272418316 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25305204 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25361867 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25404427 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253289798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25293747 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257384275 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262720126 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266992459 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280262378 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.255202762 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258640943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255504368 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258940886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258354972 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253442125 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254088549 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25405331 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253789719 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254784787 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25599989 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255573181 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254448762 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255753892 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255304847 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255393747 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255875304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.256047127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256584741 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253641991 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255483848 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255226272 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256327188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253692865 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254913913 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.256409865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256880175 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256098179 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262595701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.253940474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25840672 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257127173 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25667194 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255607556 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256519045 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258452525 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256005609 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264001997 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.276433389 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257310274 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264817244 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275466043 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256986394 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258716338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256814034 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255098568 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260955113 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265874438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257897109 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258046739 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259400302 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257653423 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257693747 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264047943 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.27307037 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258489823 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25836442 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259866534 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25540856 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258745021 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259532993 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259118882 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261771425 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259612443 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259668859 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259659447 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259636067 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258802986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257975364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262498042 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266942954 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26307141 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258648112 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261081939 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260329955 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263367243 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25847022 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258455037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258598834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272318924 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285070759 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265369869 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279803507 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259944479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264884255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281724579 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262957568 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260037672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261164221 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258773384 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260810568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25893063 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260268053 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260795309 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261153477 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.262143817 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265591938 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26053159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260747284 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261780217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260836493 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260038272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260066634 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261723388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263270392 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262977288 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261774888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261142065 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267463677 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282291045 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263626005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261491954 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261712955 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261630897 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263784471 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262249765 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264434127 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270191061 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266392908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272011007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264632824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271455748 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262139758 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267553467 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270245425 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259298508 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259547258 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262957666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263314917 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269712303 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282995752 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264266749 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266176846 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262748175 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263865931 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26345075 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263221025 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26447317 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262310937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271352702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284663894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267344142 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266220859 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261628664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263537652 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262930341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26274789 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266860782 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263978089 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265490466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264767077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264951404 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264444206 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263257938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264341893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262133077 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264762562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270216521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28499852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269588374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264328888 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273940306 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285591589 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271159606 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284892939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265116525 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265092156 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265744506 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267743103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266310265 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267050399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266192598 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.267614829 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269189127 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265669714 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26861869 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266510994 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266467977 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265599782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275704498 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290493791 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269010288 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270094595 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264184271 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267656722 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270481798 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266247713 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265440488 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270794836 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277249574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275118409 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266409144 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266849926 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267038919 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268044412 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268128734 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26738522 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.266753998 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267714575 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268284931 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267892668 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271649687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266936603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268413877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26836946 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270113519 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277229633 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287505745 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268398638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268305911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267454099 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268801663 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.268784503 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268499297 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269154349 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269144975 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.270084457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276011348 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275413485 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271302372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268154598 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269421197 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269078738 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270233207 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26921456 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268538245 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269375834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269981414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26944174 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270344923 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.268404297 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268935506 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26992874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269132521 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271827634 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277682207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271373312 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267681223 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270043323 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270024439 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269272507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270378075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.278153936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293562049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281591901 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.279659069 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274576698 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271756309 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275384939 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278106751 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270067752 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272178434 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272104106 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271359318 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273015655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273692971 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272603724 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278012321 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29213471 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270912481 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280363205 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292109386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272184966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27335744 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276321084 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272751034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271468802 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.27364497 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271697995 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279886923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293157595 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272812986 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274264847 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.271218132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.274584966 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275875643 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273413531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273683551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271171448 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273725703 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272828499 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273069377 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270842564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27457976 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272531421 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276834707 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279070604 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271812882 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275144431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272334785 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275823905 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273483199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274309751 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272004511 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269563245 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275073889 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273780539 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273882314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276395358 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272922047 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.276078651 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275045606 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274673405 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276863467 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285480647 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.281843479 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272934757 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.27509263 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275750336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277660302 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273959055 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275006664 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274784237 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276665438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274586758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274943246 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27532821 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278664231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290929062 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295831409 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274694743 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27514576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278494472 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275702463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273738898 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.275703355 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278053221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278893376 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284443144 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.275602375 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282164238 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296966525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27736325 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28018192 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279676093 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284852161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278665785 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277016401 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277464284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.281521775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293150832 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277651261 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287328988 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306735064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298002236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279256612 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277300163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277102138 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276690355 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279016191 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277772075 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.277392573 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278955892 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277314588 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278900057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284026985 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278640182 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278043554 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277841451 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279003043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279180526 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275073599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277517145 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278623914 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278831537 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277660017 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278092926 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279050815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.292797139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306570248 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278441012 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27902735 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.276394889 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281985671 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282754064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290855177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.287414668 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278907093 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278550428 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280888321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279702359 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278310431 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279966229 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280410265 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278948115 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276747561 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291713173 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305840665 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28424765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279455728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280269766 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280215342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280465779 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280449632 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280500469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280989598 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28125165 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283837183 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280396191 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281270606 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284616038 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2888808 seconds)
  done (took 754.721954107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278445374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27798678 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278942024 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279237049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278659815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279539839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278355539 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279787175 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279007055 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278279422 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279737697 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27933516 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279683367 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279503622 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279520639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279230072 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280347996 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280180749 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279686232 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278855704 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280696195 seconds)
  done (took 28.064226978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.282216493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280439542 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280277906 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283866827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280511667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282848666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280413191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283354602 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283422297 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280558861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284125304 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283310196 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281363949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280990713 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280495384 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283728254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283548694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281214439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28418702 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281347611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283747313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281683641 seconds)
  done (took 29.409354518 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283017441 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284564262 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282394746 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.281375104 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28482733 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279661877 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284096923 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.283134006 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.284116728 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284525433 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.283525136 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.286134391 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293039142 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290156871 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286557651 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285230959 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.428561426 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285007123 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284304289 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.285359135 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281460821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289949321 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.303594961 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.282301721 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28406046 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285093032 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285717379 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.285580201 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285542779 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287495073 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288498914 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.284712634 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286034261 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288652034 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.285650674 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288092003 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290558036 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286160736 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.283545472 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287268878 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296726474 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307809509 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.287222659 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.292769517 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.307758002 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.285978614 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291252056 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29311685 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.283877235 seconds)
  done (took 64.429126237 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287274116 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.287710072 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284968494 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287975268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287179985 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28781423 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.287413136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287879412 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285318887 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284856479 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288531519 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283441064 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284715898 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287859054 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.287270022 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285220253 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284748859 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284959718 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285671512 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284519307 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285519771 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288013008 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288059847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286731854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288128682 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28561537 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286679437 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289410594 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287172218 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.285505677 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.288333584 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289150612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289302866 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286617948 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285900107 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289860445 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289025363 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285136332 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288016069 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286064095 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289215731 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288472429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289800261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289322548 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287358379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286703395 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287052206 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287244328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286850917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288922644 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289841729 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286726852 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290696701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287372933 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290437645 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291274279 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287238203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288194137 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290651472 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287989438 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287943481 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290582853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287903502 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291242984 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29063355 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289485596 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288088462 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292390852 seconds)
  done (took 88.769751724 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290788819 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289708333 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290789291 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290560472 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290395406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291363973 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291368252 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291425482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291696656 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291043424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292454313 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291978387 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29112855 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291631766 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292531679 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291952793 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29124023 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291302789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292470094 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292002738 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291762025 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292387739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292447388 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291463984 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292317997 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291691965 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291430844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292427179 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292662755 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292406741 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292739708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293784306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293464859 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293785194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292557626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292537622 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294296163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294329791 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292640182 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29248967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293388852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292737216 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293619141 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29310762 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292937193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293303657 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292968371 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.294582744 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293030775 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293188542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292807537 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29207663 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29278729 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29485958 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2940466 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293625328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293817248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293612253 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293804671 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294039604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29464756 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295599897 seconds)
  done (took 81.350828685 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2951744 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294537344 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291946089 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292354047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294514797 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292460756 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294764964 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295361029 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295263367 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296631059 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296238024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293745941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292724205 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29556726 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293492349 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293262659 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293733975 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295117275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29554438 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293528017 seconds)
  done (took 27.098492962 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294896443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29679036 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29365203 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293894419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296597391 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294813102 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296466419 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296726415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294184335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297325047 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297753861 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297011647 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294590108 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294122516 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297715139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295637353 seconds)
  done (took 21.94455548 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294171029 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296902293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298086892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29774305 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294762864 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295184635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29786993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294890919 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29491396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29778317 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297857263 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.296883251 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.297899565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297676878 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295218629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298202392 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295819565 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296131226 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299701585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298773192 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296802816 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294827917 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.299328032 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299217087 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295712864 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296734044 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29655562 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296315781 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297524814 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298920648 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296527817 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297481024 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297265313 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297413461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299099914 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295917345 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.300410305 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300275382 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299712034 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29887524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.299825196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297953814 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300424733 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300377646 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.297895699 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301019251 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299239672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299367308 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297065259 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297418091 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300650509 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300780258 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300204203 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300819082 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300783422 seconds)
  done (took 72.602159422 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302658645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301473969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298166407 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.302069115 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301331789 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.29912014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301109223 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300861948 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298966772 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301640697 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298889075 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301489485 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297417607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301999228 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299639929 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300838585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297739683 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300379655 seconds)
  done (took 24.623990108 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300030453 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299808488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303407043 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29876779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299431193 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303101504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299808019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.3012198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303058098 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29976876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300106611 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303003482 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301814176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303341725 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30119442 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299724894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303598963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303193091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300931333 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300344387 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304325094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303241167 seconds)
  done (took 29.851698632 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302857774 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.300972652 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.301270927 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.320225181 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.323050761 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.325771363 seconds)
  done (took 9.093369602 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311392137 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303435907 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300497746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304522448 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303939416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302290702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300767251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301192599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304156491 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302361125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302143813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30540447 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304558601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302035275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304304692 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30622014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302552382 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301952821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303795902 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305244161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302238796 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305721949 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302370993 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302483446 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303522568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303149256 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3055119 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302628977 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303560208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306453461 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305376382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303134547 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306062863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303507941 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307069737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306173986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303585921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30640695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306329217 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303880902 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305683139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307761553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307171481 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303533628 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307510189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304892163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303967594 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3045271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305265263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306195735 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306980402 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303671844 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306379132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307266663 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30613566 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307595825 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305398475 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305250339 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308043636 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304261902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304235729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307178431 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304422942 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306028841 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308568527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305436181 seconds)
  done (took 87.362416787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305239868 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305592913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306517798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307197134 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306363178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306039113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306977965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306478841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305253727 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305493462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308912467 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305831474 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305538958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306213784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305907036 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306723927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305055823 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307362273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30687486 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309459232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30637348 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305591905 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306210114 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30669093 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30694052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309822662 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306368812 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306744633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30647369 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307067207 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307135179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307261408 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307397714 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307958236 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307987636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307707089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308202946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308085893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306143135 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311094502 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307753425 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310899779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308734222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309129506 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30817078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30864458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309008083 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308277512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30782357 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309242892 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308656796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310049281 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308744332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309058937 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308709232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308726467 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309326599 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308376502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308991436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312128694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309157985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309122864 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311148987 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308928613 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309886703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308979336 seconds)
  done (took 87.541076054 seconds)
done (took 1760.707959234 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.290341142 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.403529235 seconds)
  done (took 13.920911161 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.472511817 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.425565825 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309919209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.343631993 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.310608048 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316948445 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.32062901 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311563388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310973117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.310731059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.311884683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.501581686 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.33345369 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.310796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31150924 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404162362 seconds)
  done (took 42.840471103 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.341206335 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317536208 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.438640274 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340708039 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339796684 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513537914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375545996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31697259 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503597186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.365995167 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.997487071 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34112773 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315996574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.511867349 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335937965 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514261646 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582246029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.002376751 seconds)
  done (took 30.684326992 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.815224925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.317740655 seconds)
  done (took 9.364067683 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.347469376 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.316916632 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.352055349 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.354191836 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.376688171 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.408357828 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.334146427 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.341157743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.343696653 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.381388768 seconds)
  done (took 64.792773653 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337604468 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317264326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319048055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.31620418 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.309094654 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309900664 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.315940848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.31491106 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.321184628 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453141114 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337765394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324895071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336943323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.318568541 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315465588 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.354963605 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446177112 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.336763951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315121195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322862584 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317260457 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405958106 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362041305 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31635836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453711778 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.349056741 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320519596 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323909636 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429222029 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.338315531 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31667226 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317888399 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318714474 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.897351933 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785391969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.329384674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.361722113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327461061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315828628 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.444334102 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339854453 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.325702893 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.310848476 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754272636 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478317127 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438097165 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.698237443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320822669 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321158966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383308055 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319650914 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320151318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350893705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.117804496 seconds)
  done (took 111.468143315 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.347044913 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.813601422 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483101798 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335679159 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.175948347 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100443752 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.331241938 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.626649077 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338900674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312486297 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.664020584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849425524 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337649935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.328583403 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.535729717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.353485749 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316497294 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.177126363 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332601523 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314428081 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747710091 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333254787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.333774943 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.493208946 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355436652 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804298732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.990801661 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.850392759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332624598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.31372855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806757212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33975325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321930842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314854407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.604775947 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703141567 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696486591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.333233547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365065919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319683142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.339110218 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801662381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.705132847 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334640691 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33230383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826537279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334222151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.320818058 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.321154127 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521719901 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.190992067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316664836 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.980908902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.316752504 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.666211379 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.317271561 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357976033 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833313995 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333017388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.502083193 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334358734 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317030811 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321754351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318383543 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320938161 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692111651 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887294008 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323933667 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69247754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823308425 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.337088157 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866922871 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.26689234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318228911 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.391968369 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317946665 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.000277717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852220011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348264736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316469131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677669431 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338246432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.65219899 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335241002 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318377967 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758971982 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.344173205 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.367578544 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319238264 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.337261786 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.031696309 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319902495 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615551049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.354553759 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318397221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.318638935 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.337930422 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319150491 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320687134 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.32007125 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871311984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.346886729 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.633341428 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340988471 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319174296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319003267 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.321170181 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319923806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541180398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.804228999 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.325805989 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321728505 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.320441983 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.338946393 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.453051494 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.33137131 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65567912 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34083756 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336274196 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321677956 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.134064792 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.395859377 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321429834 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.341661874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.181273504 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547515273 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340752548 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.340057472 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32010786 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339342422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.862826573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321881781 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359771454 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.32227879 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052036222 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.374047892 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.340128747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.856087712 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324021543 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322243994 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327341831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322001838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639808159 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612193834 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795993911 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328233208 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.322016149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.032585211 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.350110781 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465890293 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343152943 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341935157 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52199912 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405218725 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323614214 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.883728649 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.321001601 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540940344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322020487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65190261 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838923926 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341209155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330544055 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052736166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.026241517 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984508645 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328909908 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.670089738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.328973733 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.780902238 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.323700665 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324116231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.821688687 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328056466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.336448059 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.324857556 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.323485607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.457936149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50139204 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.282343531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325387191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812615062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363958916 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325400581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.345147035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328256451 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.681572449 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370646966 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.326471316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.368625534 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326030805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329865268 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822189106 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.310395813 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329565866 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479243102 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98655102 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.343826432 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325560855 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.951513848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791321569 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863702904 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359795348 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.66233254 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.350435493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.368046037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.116531385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374560965 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.86846865 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3436337 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.325968179 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946587693 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.345055915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.66787342 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.326364512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325723416 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899762254 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.34604555 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330639398 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.874990837 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327314567 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578512355 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.327590847 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.327213821 seconds)
  done (took 1113.106165591 seconds)
done (took 1387.402090249 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.326791066 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328723504 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.31382884 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330563707 seconds)
  done (took 26.548243571 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.337943634 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334533961 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335160402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.333004754 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.336329263 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333935004 seconds)
  done (took 9.261987471 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.418431255 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.332535311 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.333976277 seconds)
  done (took 19.33392181 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.570577265 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.708292819 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.736722029 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.74688424 seconds)
  done (took 11.014249372 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334575257 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335290928 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334826877 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.336937938 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338398115 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.339814134 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.337995448 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.338023037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339514231 seconds)
  done (took 13.284664259 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.599260622 seconds)
done (took 86.288314148 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.262127801 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.434070565 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.224795735 seconds)
    (4/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.248838116 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.914211721 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.057891922 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.399121877 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.330510936 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.712991199 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 4.374442207 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.423454288 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.591570397 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.064658439 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371681311 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.747498462 seconds)
    (16/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.026097337 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.361190739 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.331638895 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.293964373 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.310994219 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.178248399 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070557725 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.639985783 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353178588 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.627039367 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.329777188 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41311222 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.048001825 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.116951032 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821582066 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.321620878 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.275882235 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.884768133 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43575412 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.173247783 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.330957381 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.016595332 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.716563434 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422830888 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.341530956 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.347165391 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.408469958 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.33261917 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.331953385 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.874225151 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.356504082 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.334344596 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025919422 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363995944 seconds)
    (50/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.302132584 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.706584561 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.462801474 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.762423046 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.477651846 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592448301 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.740576781 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.927047258 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.620914111 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.422403015 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359437072 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.434303884 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.290720267 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.610348505 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.579698438 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355652392 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.457217198 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.333927284 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40089085 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.31802823 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315547253 seconds)
    (71/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.566058181 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.99376093 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.346176704 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.534281428 seconds)
    (75/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.790782948 seconds)
    (76/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.36113021 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 6.335605077 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.837617098 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.957750078 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.374238961 seconds)
    (81/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.527052705 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.400569518 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.841726639 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.719554049 seconds)
    (85/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.324590437 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.467073031 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.440387349 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.441424099 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.273790873 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.163214753 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.317049659 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.023347112 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.571376104 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.788739103 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.361594673 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.16844644 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479899018 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.336059531 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.38008769 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.924344377 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.35179513 seconds)
    (102/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.34243917 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.356499566 seconds)
    (104/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424251035 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437143145 seconds)
    (106/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386278399 seconds)
    (107/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.317272496 seconds)
    (108/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376419889 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.94999895 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36570152 seconds)
    (111/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.967007991 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.351163459 seconds)
    (113/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.352431904 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.061688427 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.202070434 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.167904681 seconds)
    (117/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.938098096 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.355503438 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.555003345 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271888066 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.346990744 seconds)
    (122/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.362059589 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.336862957 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.77249679 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.339619484 seconds)
    (126/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.330170173 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.978557619 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244896226 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420714695 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.339078161 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.87989069 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.381550955 seconds)
    (133/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.882939277 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.64084996 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.614457863 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.022440441 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.383778832 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.168028071 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.6010842 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767371646 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.356744638 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.369466028 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.646615637 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.593604344 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.456685107 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.486883524 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.800875804 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338702437 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.329693847 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.364559809 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.19863272 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.366290572 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.222501928 seconds)
    (154/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.918238191 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.399409645 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.40714277 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.339589204 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.452481906 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.096432909 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.357455196 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.683985083 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.365022176 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.725818219 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405190258 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.811089705 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.988270005 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.47376532 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.78274358 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.009014797 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.38606139 seconds)
    (171/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.405918485 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.616207122 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.339771814 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.377734444 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.991472046 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.345041818 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.638087397 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.993994769 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.776390293 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.359041103 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426191119 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.748028074 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.386269459 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.438372681 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.297545293 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.368021867 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383057847 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.341386344 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.194524894 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.369444969 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444697477 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.845979292 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.021899676 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399147177 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.369161167 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.342123727 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.845619992 seconds)
    (198/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.343729196 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.422573808 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447407068 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369088726 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.384431359 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.831242501 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.779329285 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.15140867 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.678519833 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352702514 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.337092983 seconds)
    (209/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.077897146 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.991429749 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.760617129 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.58899329 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.347929677 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442023213 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.343976436 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.327499949 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.543245411 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.42750999 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.34263095 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.385826191 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.849451739 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.634003088 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.68675914 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.954340684 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.38558471 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426922829 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.676570509 seconds)
    (228/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.907967364 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.720849267 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.043453378 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.32912559 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.370802536 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.735688975 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.431097661 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.84546176 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.32590839 seconds)
    (237/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.540527349 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.4491799 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.354525977 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.753146491 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.45473653 seconds)
    (242/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.589480615 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.785619818 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.896067437 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.32659469 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.232486846 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.556913557 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.391923232 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.476058324 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.378861307 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.327764988 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.383357424 seconds)
    (253/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.241877975 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.738401855 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.747978016 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430999866 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.072536482 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34675905 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.457091522 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.086478239 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.814618861 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.865133293 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.039748487 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.952668584 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.331695338 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.439889884 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.347865032 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.000773786 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374732887 seconds)
    (270/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374225278 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.039806066 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.582665868 seconds)
    (273/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.750743937 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.349893778 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.502000779 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.19889521 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431774586 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430225242 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457868749 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459288144 seconds)
    (281/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.791394212 seconds)
    (282/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.095112099 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.522212805 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.221911525 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.155704545 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.366274737 seconds)
    (287/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.360226845 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.087520376 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.353582237 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.389021956 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373766043 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.352266467 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.794503965 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410890036 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.775629893 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.541450102 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.415499275 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.352644139 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.45343884 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.909622521 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.372212205 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.83799707 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.446741768 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.021923852 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.637324964 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.371139562 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.365723425 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.081776736 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.51741084 seconds)
  done (took 940.854170352 seconds)
done (took 942.104522615 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.382803079 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377739422 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.360500649 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.381537441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473358352 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387908216 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.371374762 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.362745759 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409152856 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.409290893 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359644587 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385221835 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363497233 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362288886 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.36045246 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376167349 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.495743381 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362436755 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378805924 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.370691741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380712802 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360399198 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411642758 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.38739828 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.364990965 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365139134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.365858542 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381247222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472450419 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365211335 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.365025345 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373958231 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.496950214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361170676 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.357305964 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382500765 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374296445 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.372757645 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36643925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395849831 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.944586698 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382143999 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.367370037 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.36443984 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.364946057 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369087139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.366490097 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369756529 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376665642 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37914075 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.932094553 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.398475353 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367494296 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364470296 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375659514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.363794145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367096391 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380276823 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.382823901 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379801497 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.484164146 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.368796405 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.365417589 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.381390465 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.371553502 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.973258529 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.378281117 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369820344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.947611087 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.390013977 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.972060259 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392571241 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36533363 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.38046366 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397560064 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.530791916 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.363342275 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.364419523 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.374247369 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364280065 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375038087 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379325459 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370741978 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366775486 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380532461 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.392527777 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376182048 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368074622 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.374053843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.386459941 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373913326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378314778 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368996969 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361923947 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377732374 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370294856 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36989252 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.370613712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372323116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377336044 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.947344945 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403437335 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363530635 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364408771 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367006057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.38177474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.950425075 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.388555404 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.388572905 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.414345258 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.368954945 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.490420936 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372437957 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384813748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.377427966 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.371658486 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363430717 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.493426598 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.945174667 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402968865 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370290039 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366694521 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384427713 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.371833907 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365498465 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.509903211 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.369110328 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384092394 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490426191 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.379661672 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400159266 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367090023 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371942346 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396343768 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385450181 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.401696198 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372144291 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385799237 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386214765 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365420937 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381191786 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.381027543 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.37233781 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376564222 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.363933098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397581356 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3821906 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382549736 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.391156426 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.492114502 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366844966 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.495640423 seconds)
done (took 232.47826094 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429642143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.364459013 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456389941 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36669071 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468600284 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469550426 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363678841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365331806 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363745219 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.740908916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.36427768 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.365311454 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.367611318 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364574514 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449556241 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367682632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364975822 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.706856637 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368288947 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440746751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.366869961 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364737053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368045454 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745261203 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.360748193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360959525 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.439478233 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368650346 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.712311104 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.368575177 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364747055 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713237367 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457946508 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386737111 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379346693 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375558262 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471388502 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.390655582 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.449664881 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449949588 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.460442636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406448621 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.363391424 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.36383458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370943137 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369583852 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366890688 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396422711 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363003142 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367235277 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.706693872 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380519533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378973609 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368307412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367805996 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389633392 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368244746 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37079787 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.459186696 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372171127 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432515856 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.747290203 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745337336 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370533711 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364582613 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369151103 seconds)
  done (took 150.744598303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438508328 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443321739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48872344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390512518 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.422332095 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493480465 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.391443498 seconds)
  done (took 11.350893051 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37728586 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373596424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420119897 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420346595 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371956236 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520270211 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373935157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383813695 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369886986 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424467262 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37189488 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371947446 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379461929 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.370386676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420133233 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383121608 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486245731 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373553452 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372277442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52305177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369759673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379356567 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425002727 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.382871341 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374662386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378891334 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.995452232 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372913828 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370929611 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374041058 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370776003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.409960627 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374006692 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.367033954 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370273939 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526328342 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372983419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371000491 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.374163858 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.369293218 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.373900159 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374590237 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374582298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371668512 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37548368 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397269994 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374434582 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374784139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374706621 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376104084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.425235128 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376193249 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.372275512 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37198431 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430236504 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38135973 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375131459 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.372698106 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375134586 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374175607 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526121913 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423073987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375689296 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422765932 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376617639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375563753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375362736 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375825843 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440704152 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373805357 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424329716 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373683166 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530121561 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397807719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376461382 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377765877 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377537513 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376882198 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.369202329 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38191542 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374487184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377599143 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.383340361 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37421439 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373585629 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.508113957 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.503339677 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.374483861 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388831126 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382396246 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374296554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430597673 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376573907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.374675395 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42888489 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492770444 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431730072 seconds)
  done (took 157.327568876 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382860509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385341911 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379011222 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393799292 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378736972 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.380179427 seconds)
  done (took 9.589933417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381156422 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.379802098 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378526824 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378902125 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378375031 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379829689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379372176 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380504971 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382510056 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378696952 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.379724305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37923306 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38102132 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379640915 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379098212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379520887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378952103 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377124517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378930318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380227247 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.481730539 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378894131 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380242336 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381828127 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385378049 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.378962186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387581406 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380758656 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380368094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387338708 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.402376955 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380988694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382249405 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386507976 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385539954 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.381117864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386637011 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380421928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378327452 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381923894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38278315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381731469 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380562326 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.382194078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383347385 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386752899 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387606301 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390260162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.380643292 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383345926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382625431 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380672391 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382577697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38377896 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383836906 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404471957 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387287587 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382191367 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381111191 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.382859477 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384650448 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38263954 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384929009 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386805641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379795278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384231233 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.384162594 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387393996 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382688987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.382696294 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384108674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.380826981 seconds)
  done (took 101.948118415 seconds)
done (took 432.237278434 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.551784991 seconds)
  done (took 7.846013236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.561064778 seconds)
  done (took 7.858901372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.963606903 seconds)
  done (took 24.264639872 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.426492632 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.469480071 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.387732444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386920222 seconds)
  done (took 26.966281545 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.519662112 seconds)
  done (took 7.813655075 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.375801944 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.392395926 seconds)
  done (took 14.064717513 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.547181647 seconds)
  done (took 7.842021756 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.0213344 seconds)
  done (took 8.322675515 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.381777501 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.407037589 seconds)
  done (took 14.354665621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357541977 seconds)
  done (took 7.653050444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.619033793 seconds)
  done (took 8.917239607 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.38194074 seconds)
  done (took 7.679029219 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425647708 seconds)
  done (took 7.720979348 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.218645852 seconds)
  done (took 10.514131073 seconds)
done (took 163.110692837 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.84674622 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.382263433 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.381030157 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.379480532 seconds)
  done (took 27.285999025 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419991765 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.4189756 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.420137227 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429948529 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422443104 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41955735 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411694567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411879199 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429075858 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420698361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.421040556 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421399767 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419702878 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411077404 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421304309 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421107875 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43021352 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420638042 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411659921 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423408771 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.386517417 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430843119 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421991837 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386848104 seconds)
  done (took 35.332102101 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.586191766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456937367 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.54081547 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43916429 seconds)
  done (took 7.320199588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.437662458 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.441526958 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452104689 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491554524 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517697484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.44949483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.409324109 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.40879546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395391504 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441278924 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515572444 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.456730217 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525821572 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386351057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573937328 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386367529 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38720294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438946667 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.491140229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.513224572 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387779055 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439293489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444187638 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457118157 seconds)
  done (took 36.146696589 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.400331693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39604088 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386598436 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.384701661 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407953718 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.385463603 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387740147 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.387569693 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386438948 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393913812 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.386748428 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399096998 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386308274 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386997223 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39273069 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388849334 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393862622 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.386660369 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387269964 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390980321 seconds)
  done (took 29.115484728 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380953712 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.277297364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.733386922 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.639655373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.3816724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.383042036 seconds)
  done (took 29.095552579 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469197761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633270244 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389512887 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.793639081 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888479761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.408727721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38841028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.655553643 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.019713909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.02193083 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452885949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464275069 seconds)
  done (took 20.887577173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.387454681 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.386012922 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.40417074 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400928442 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.451958859 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411698154 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395313268 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383842055 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.455378944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.474655649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.412250677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.452979714 seconds)
  done (took 38.318409201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471645707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43190937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.569032277 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243986809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109967216 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59717193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298280406 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832396836 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.389371376 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658610017 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385634796 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476877466 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640981627 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388661316 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389365112 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.472774488 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633274827 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93795393 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38759961 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707756589 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416310869 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399416836 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863724348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417812149 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598074303 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36857732 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.646322767 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163863884 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706821803 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397377734 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397696979 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385542855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660674976 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095356252 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503979075 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397361607 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272655583 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935269759 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.36974786 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.790678416 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393103092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389058396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398324233 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387344925 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322128937 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394649343 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843052949 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.394989824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.097929922 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387137307 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399667273 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483142905 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390948322 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.380011938 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491068955 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395628437 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.384528557 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393336929 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959570482 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167765401 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406645517 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.32506677 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.885114833 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812598152 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080742062 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.511067958 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392946377 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393141683 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324662856 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.696087971 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405716739 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529200699 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41656626 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050583365 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169067596 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423899641 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320580296 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002593592 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391681402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325962728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619096271 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166824177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329212516 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.331938835 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324619534 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187110434 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39878325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.894605215 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398237475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.832856467 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.401721127 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408782796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414001203 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615845877 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269304872 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39073507 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.396626959 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507724134 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413169022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838303352 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324918305 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394304546 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649484847 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602291443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401274231 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.473519575 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629179602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406084741 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.40906644 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390956324 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.408197714 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031914491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423841655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175987643 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408983272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168804727 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214903993 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395939057 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.495417502 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392950383 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660292889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232426507 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.554218955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460759114 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395285046 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392931386 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832480782 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251134365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.296631738 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.390213698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398874692 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407260085 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394014534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352539188 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.403153781 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406189303 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17339223 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.617790355 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39351188 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672511611 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328987384 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532274749 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409872876 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617493203 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.761038102 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.41867655 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65498692 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409120228 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416309192 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410781191 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412914408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491474901 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417562006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395575138 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654303117 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399920634 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398779147 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861956979 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177511455 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397941798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400607273 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308763173 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039828665 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386776942 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403649985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287923047 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409748612 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462472339 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401363557 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405761654 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.469631352 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384224282 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399450662 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393843781 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620860213 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407740517 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.842361849 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483195204 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.60831731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042453468 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4303103 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331074858 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107897608 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.090337847 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39661519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588171608 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398034408 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406453025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408694911 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.082865076 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041930579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416496728 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.7698416 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409134435 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407771051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402865373 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397673787 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.43456974 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.340449663 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406175137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.41723157 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540376573 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.411441837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332293117 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914630765 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403731867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399014666 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.17329024 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43311243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.749380311 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903081813 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661505145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.250817394 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411208662 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.997643551 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437843178 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40057812 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405645243 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415059949 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.421855097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413480024 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410372886 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.87396929 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.854505946 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969175374 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191027543 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019334682 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443974759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.411384041 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303480479 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85592069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33571179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05917013 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610362788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869532253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356870092 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616639108 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.767951728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278224813 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411112015 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630033507 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424905546 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.408310054 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413550567 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614086385 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434887705 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416625358 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336946089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.681516086 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652243628 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412239588 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479449904 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852517791 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408661063 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179450331 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.400545787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.876245301 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611533009 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.033843033 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795234278 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415118599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408356323 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926061955 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412705156 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930242722 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085210517 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42349131 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.641205616 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344575434 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414104807 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413194775 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39965275 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.936925296 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.410313041 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660078814 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415016631 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337182003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403304495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023792146 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.27833028 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408783245 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40381623 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249921959 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403835383 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736544106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.425342715 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.453639964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405936969 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338644209 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338574815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.096111528 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405160051 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373896188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965828422 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.845147785 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496852881 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430280699 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261318428 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661536832 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418966812 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05364381 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651556552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.368104155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428896757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.504918235 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421802034 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38747333 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28805554 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642282381 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314142951 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631036653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.612262898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.310357926 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403875935 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61906627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287700153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409054467 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690974775 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.149026054 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.408011547 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193477583 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450984551 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423202428 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425616147 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.903080093 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413872914 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477092588 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417908726 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417879426 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418041825 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59390291 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417110053 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408639385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420958601 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500367447 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220370185 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.430799186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18000766 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0619887 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232280177 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078707515 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439929868 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40779786 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407581793 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341142769 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556745361 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937591224 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682800888 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526872215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.993161038 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430324932 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406922658 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417441623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623974461 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683310335 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284439207 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424536048 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076565795 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.301973162 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420059074 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620509794 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976556178 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039729454 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534869884 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411716711 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868790503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685003986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500990903 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409649062 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002656789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.418296497 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.905429815 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.437733077 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426346151 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557579763 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418267502 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11867624 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441818821 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.568729342 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183797696 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861628391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667968271 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.961328991 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.42091079 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063941139 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23469904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679643455 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479405466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421639536 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.538049434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55576924 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.421173737 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.31530834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41063338 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263062601 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.120681086 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421547371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066150995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695859931 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.407809545 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.420335902 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434223499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.4218336 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636266601 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210622719 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639412292 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421665399 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412615473 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.9848612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067723101 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444332473 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346839134 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.416157899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687949517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673297034 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43799483 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865642855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.122644979 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035203942 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.388774257 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433507902 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413188228 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243183184 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072926138 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.465714618 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971837061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074822305 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413856449 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69139783 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.418663831 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413494152 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715713307 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417331206 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414248157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430981984 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.067226488 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297641814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.425115706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.832048753 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.355336254 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642610835 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130393223 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351190865 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424582313 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.610372331 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415296231 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535217122 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426801701 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.423412816 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416704613 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.171840576 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706106284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421176689 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.412625285 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40443881 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43219984 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426339461 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668876346 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422000359 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.091371892 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.766501777 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672846793 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42017078 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.399594081 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419403806 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416593544 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140340875 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394973884 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.105383443 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055663577 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.427631534 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.430119907 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419763335 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.634069971 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628744298 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420648668 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430076348 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416799567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435172226 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317399722 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189242206 seconds)
  done (took 1633.939871688 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446220789 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457036411 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.431366109 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.428082516 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477503978 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481488753 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.451117392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.518966236 seconds)
  done (took 53.0246846 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.427336058 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.573333984 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.452344124 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.419297357 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.426698831 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417578724 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.929576869 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.425648637 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426195413 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.427484228 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.432923823 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.427545937 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.142103917 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428810319 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.429272143 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.403012174 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426545192 seconds)
  done (took 66.954214608 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.419262905 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.021908316 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.472379089 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.422577097 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.047361789 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.448532651 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.927615946 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.439051353 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.427297891 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.502629335 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.08171323 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.42895541 seconds)
  done (took 81.973700391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4273826 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.427649801 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428870854 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427049041 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426444603 seconds)
  done (took 8.472815825 seconds)
done (took 2069.162182838 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.665940825 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.232749097 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.159772615 seconds)
  done (took 5.727269585 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.568317204 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.616435391 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.736897791 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.743535494 seconds)
  done (took 8.000146273 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.699358088 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.807967879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.613018399 seconds)
  done (took 6.456456916 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.034693295 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.429696188 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.566696899 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.420521645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.424222007 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.423475175 seconds)
  done (took 20.604714888 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42482349 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427204784 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425955734 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428105381 seconds)
  done (took 7.043892598 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.402954875 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.129321213 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.404180027 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420991559 seconds)
  done (took 18.691881041 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.173266877 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.18419944 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.168094483 seconds)
  done (took 7.86243451 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.43683237 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.268984968 seconds)
  done (took 10.042066854 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.729142099 seconds)
  done (took 3.065646568 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.556747633 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.753395491 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.582637651 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.52902741 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.604093586 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.936972419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.313763965 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.828939673 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.486738476 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.932243916 seconds)
  done (took 30.861136211 seconds)
done (took 132.384464018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.694930999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.668800814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624600727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.668175616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.654751658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62479572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.644102014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.633717874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.173542196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166061091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.670229867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.654714358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.595246908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.671237517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.596503163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.665563889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657583823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.737234764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.354592635 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429153389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.643960002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.306798838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.501221312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.319821167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.655534141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576976114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.886914967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423902555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429928336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.899924186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.576828529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42439184 seconds)
  done (took 202.570211307 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.426053526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431960974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425496643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443323056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445737213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.42480432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.442145888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43456118 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428023227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424112735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.44417805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.442015953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426337229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42413852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427243917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425294383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434248599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.425692931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44721088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424534195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.4258026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431623551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434324628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424732216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43966489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.425782881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.444656896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425347133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444466049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.44481679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426771923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445136069 seconds)
  done (took 207.199895809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425762215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455513383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426428671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.446177038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.459112741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426144647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445313955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.452765538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.433263214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429195402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.426621708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.44021115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426784015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426443715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42594608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.429778718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426219958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438107197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.432463736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426392743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.447670982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.45577643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429150489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.428791492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.444759177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.428442407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427157022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431783818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427527731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455107286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42801399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433212955 seconds)
  done (took 207.27784454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.624854014 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.434929224 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.435955543 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373605491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437149956 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435097242 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426927937 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.631722487 seconds)
  done (took 15.143063523 seconds)
done (took 633.525514444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.964278216 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.661619644 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.647362644 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.457803385 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.337074923 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.479995713 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457175559 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.639734388 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.424621312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.653652432 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.766497681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474161404 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.913986617 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.454145571 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.726322117 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559543509 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.388948867 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.510114725 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.796247047 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.102089222 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.741594788 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.99264164 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.660840504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.417241412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.947133541 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.996862218 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.275291787 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.371440229 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.475959257 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.79809255 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.330572676 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.534855589 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.525888531 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524042262 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.5786552 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.558908615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.548433624 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.525903993 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.667103755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.751149134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.092635447 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.234411221 seconds)
  done (took 98.309703069 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.420611261 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.421444513 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421651018 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.42194021 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422575141 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.422249619 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.420911503 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.42160748 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.421739332 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421435607 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.421633052 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.422824346 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.42159191 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428856623 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421096983 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421358949 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.422941352 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.424305422 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.423328098 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423046277 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422847821 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.422262226 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.423794492 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.422104541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.424092995 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.422539537 seconds)
  done (took 38.333156458 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.442620851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.713430145 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.886281366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447890674 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440296356 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.446094039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.531654734 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444350418 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.445051845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444949416 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.609254231 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443945613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480937771 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.919473793 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444485013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442776249 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.441599909 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.441699667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.724459012 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451321823 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.5515172 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443017604 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.530701159 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452491974 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465656772 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442088255 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.446645683 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.978939516 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.463625157 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.608163717 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.373193832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.532109086 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.943746331 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.919272806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.385936233 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44882241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444804179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.613111979 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444145644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.444259533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.531314153 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444747675 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896823103 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111674565 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.464674247 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445478526 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.003549761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.631841683 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726931861 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451298674 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92558573 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.447781805 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446259767 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.446068338 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727194075 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445183811 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.054302501 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470659879 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533229334 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446058039 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445455478 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.725267831 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445755317 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711721601 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.448674542 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453583901 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46792531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.899624433 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.44870425 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.131288883 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.467149559 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.446455205 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.611416894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.711894061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040149639 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.470556549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.725989891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9639217 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.553233684 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449953953 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.970909261 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.557342267 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451096097 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.449706025 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449618226 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447320389 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513008312 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.532966412 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.049433668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144490604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.076570649 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.558068244 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.461427363 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.44804008 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.057316122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470932791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448056499 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.895750109 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.129778949 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46810188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457935584 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13629337 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471438614 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.537435482 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453393642 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.907977429 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44972436 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.500296584 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.44979704 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.455422647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.474523993 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538417123 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.451957991 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451170417 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10163049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.644214006 seconds)
  done (took 190.710234661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.44394631 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.443126535 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.448030668 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.442554258 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.443030088 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44848494 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.441811026 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.443529912 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448660681 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.443927676 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.4433587 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.445405579 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.444607149 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.442189733 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.452811754 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.450403741 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.056545261 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.444696108 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.449357934 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.443815391 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.277431574 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.448224733 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.442769593 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.461911265 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.44481569 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.446560254 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.447670652 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.446536532 seconds)
  done (took 155.292531931 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452593459 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.093432958 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.47111358 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.601003233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.475095282 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448294063 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.599010933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.517588746 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471625996 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.448978561 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449370748 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.794786773 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453793829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.039983536 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.676496881 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.623593358 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.038570922 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.473151161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.449104301 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.448806163 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.603070404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458759884 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795331928 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.09485296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.474273754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095185037 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.439136179 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453348396 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451930721 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.096914353 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.471262426 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798946638 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.540670059 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.52042388 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.11731132 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.061597859 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061250223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.628451606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.454752623 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.451866598 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.45216043 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43704687 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.137025762 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.478557334 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.454542903 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.125820246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.479294408 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455286105 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462259646 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.450784166 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.520573575 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.541830104 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.839138054 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.141445629 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.562482014 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.474429447 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610526553 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.850160685 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455258048 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.043108316 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438083249 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.132193047 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.478240164 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437814906 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.453239476 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45824316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.625837179 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.609850483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.046995681 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.475124283 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04348419 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.64547254 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.453931898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453576303 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456725923 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.103949508 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.063402546 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.646018116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.609148914 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.682421509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444473815 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454702188 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.439626309 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.544036552 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.45537827 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.108804282 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.064736886 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477027656 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457433031 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457947689 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457345952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.663002208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.126505716 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.565483104 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.034880856 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.825353296 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.804964812 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.459702196 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.523443505 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.476610952 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.807598841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459047952 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522300532 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917249835 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.807515088 seconds)
  done (took 175.099583752 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728033902 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.734797595 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.556629691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.598560686 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.092536178 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.044224837 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.762875418 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.606392615 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578594376 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.740931304 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.724171724 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549321602 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.650112369 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.53950098 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.247917458 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.558207396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.579393781 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.615072126 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.583669633 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.541108754 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.144773106 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.774485287 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.647945079 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.486345771 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.560669561 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291671803 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.070341601 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.053705379 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.653205506 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.860096829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.012820862 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.641564066 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.51537418 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.227743941 seconds)
  done (took 70.338553797 seconds)
done (took 729.424821912 seconds)
SAVING RESULT...
DONE!
