cset: moving following pidspec: 19278
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.386484314 seconds)
loading group "string"... done (took 0.578034013 seconds)
loading group "linalg"... done (took 7.414727578 seconds)
loading group "parallel"... done (took 0.170593113 seconds)
loading group "find"... done (took 1.151831573 seconds)
loading group "tuple"... done (took 2.076894418 seconds)
loading group "dates"... done (took 1.313418034 seconds)
loading group "micro"... done (took 0.242834815 seconds)
loading group "io"... done (took 0.969621904 seconds)
loading group "scalar"... done (took 41.267941965 seconds)
loading group "sparse"... done (took 13.144281289 seconds)
loading group "broadcast"... done (took 1.006157508 seconds)
loading group "union"... done (took 14.601299177 seconds)
loading group "simd"... done (took 4.984123589 seconds)
loading group "random"... done (took 9.784700044 seconds)
loading group "problem"... done (took 2.005592791 seconds)
loading group "array"... done (took 22.456305304 seconds)
loading group "misc"... done (took 2.030938645 seconds)
loading group "sort"... done (took 3.422414312 seconds)
loading group "collection"... done (took 19.955098327 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579581403 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156174526 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149104587 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148088901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196098222 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143757214 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157251266 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09770313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.978218027 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173682449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151579125 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522555684 seconds)
done (took 5.198778659 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217440289 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097594053 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103881024 seconds)
  done (took 0.890531661 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077438389 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149325482 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098637443 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07990133 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096695134 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078841864 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096037373 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093852018 seconds)
  done (took 1.387838088 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08851885 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099119038 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082948666 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098392325 seconds)
  done (took 1.061066818 seconds)
done (took 4.337908385 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724126196 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274076454 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206766263 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471691666 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198398959 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21999515 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673800806 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328998231 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255252319 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100435496 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134356862 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392525782 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136184344 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679970162 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08920714 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123847722 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180634935 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436937727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081580463 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109404927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116319952 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140649522 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131479279 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094013839 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188292496 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080902166 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19303187 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109366445 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080128067 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27760335 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200550933 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685053041 seconds)
  done (took 10.850655852 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113875283 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132603639 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097514539 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137540695 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134191177 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098832151 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083511385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095862768 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121589081 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173925216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114518181 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136344415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095216039 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081652591 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114404799 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244268541 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123182142 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098703506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100430421 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087482766 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136734971 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112481645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108009282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093575728 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165048162 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220913556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109790658 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12526974 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096214908 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11099592 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143056333 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142719192 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093591766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080098672 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170952286 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123279416 seconds)
  done (took 5.128559743 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090687416 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191055235 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12116943 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16805256 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154862592 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080051996 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143056332 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095366982 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114571561 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255468384 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110018924 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493339373 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141581842 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099027348 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098468269 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081452408 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097984061 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076867833 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.480253384 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117027317 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160002108 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117510814 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103708141 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085927027 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098754982 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081015224 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100040785 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112489367 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322684097 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170029023 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100270383 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.202427766 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125156628 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102590896 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135077718 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195511343 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127501762 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11888463 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098530578 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078905781 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194611693 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089478045 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098044119 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104629576 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136598936 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137798263 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098774486 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082582617 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.215001911 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080780407 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116220065 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.936566555 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180551757 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108692381 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101926354 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.309943724 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100396293 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099798026 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078764982 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287343476 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.202103136 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100877312 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098800754 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080878103 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100609195 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38287238 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082518665 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.743071117 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085046114 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10789122 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083858858 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098516813 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105651116 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088791628 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116615508 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081404309 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10160478 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079751247 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098325856 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082450801 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110683123 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.218020061 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099143317 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080850258 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0973438 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117141812 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111905738 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101047664 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096486852 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11537615 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101762873 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098631603 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118245966 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100446438 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109411363 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084691471 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144008247 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098569376 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14577933 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094080271 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0773354 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127275906 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102119435 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131609965 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115559009 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082840499 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171586953 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096644133 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0791205 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097103421 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080623163 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097796153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081157642 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101243437 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110872284 seconds)
  done (took 22.885559302 seconds)
done (took 40.648074964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.335821101 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105987312 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10608614 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108518802 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103885134 seconds)
  done (took 1.534293513 seconds)
done (took 2.278167015 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.167252856 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116684104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097168778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.129961175 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077901562 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.136105511 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132342227 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096484931 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1340116 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095104905 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.129068915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078492988 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093327412 seconds)
  done (took 2.257529201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096486444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116250903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083224137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112267033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077121093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112911765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093608207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119547823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111416328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086119708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094897011 seconds)
  done (took 1.840886534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095607056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113984906 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083419372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111550928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07812658 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112000012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093787579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118366502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111655895 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087930097 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095498188 seconds)
  done (took 1.841020722 seconds)
done (took 6.672682002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093056242 seconds)
  done (took 0.827519622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93571056 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.574613515 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112311835 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14988491 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319194539 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176659317 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47885966 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128034571 seconds)
  done (took 10.821811177 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.147248252 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083511429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102180468 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082053143 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102134302 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082239727 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101151417 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0987425 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084281374 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100367793 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081932244 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100560663 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09763358 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082216847 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101519926 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081684019 seconds)
  done (took 2.337757522 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118704201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116591893 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10381031 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106886772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086081487 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103553277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104838359 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087847314 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099685547 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101266787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089846807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104505747 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102216483 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077961158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104554911 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105844211 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083906612 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1036004 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105516812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088819045 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105074585 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094827389 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086264577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104214635 seconds)
  done (took 3.238481439 seconds)
done (took 17.96404808 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158778442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10730201 seconds)
  done (took 1.010939661 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097161978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114817133 seconds)
  done (took 0.961744387 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099649336 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096529056 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120207361 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107845398 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079480641 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09477952 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118258144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079558177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09487344 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095036929 seconds)
  done (took 1.737798508 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084820155 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111650655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102905008 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09575477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107305986 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095121228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086351222 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097630449 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107327329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076418889 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101344279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112377668 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084947194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113971794 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102982362 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097859267 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084960548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0984634 seconds)
  done (took 2.512505457 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080699817 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098338039 seconds)
  done (took 0.93119877 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082817735 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094901173 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081473109 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097698963 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09370787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076339363 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092828819 seconds)
  done (took 1.371454378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.435762526 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134042077 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257951786 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099928594 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102075363 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294339854 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096749489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083533396 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102208047 seconds)
  done (took 2.413992444 seconds)
done (took 11.68893675 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094743511 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117319266 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115141783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454918924 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.1056569 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096290644 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145019167 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247996916 seconds)
done (took 2.131985371 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145054842 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.565312768 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424871328 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230667624 seconds)
  done (took 1.979215718 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.406671607 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099947358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084407861 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082282892 seconds)
  done (took 1.435769172 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080292606 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101049604 seconds)
  done (took 0.942432318 seconds)
done (took 5.266231164 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081832003 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101206033 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078160072 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098422464 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077565271 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096295617 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081503545 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098067507 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111611463 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098742179 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096483693 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079697173 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09747262 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077775556 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09331944 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077017843 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095307399 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081244564 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092975441 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076880827 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093848835 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079618924 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093232111 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076976403 seconds)
  done (took 2.93234764 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102076401 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100147067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104908541 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085969534 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102201656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086103836 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100951947 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096472721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085179385 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097886541 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100284006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08429142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098297476 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084272375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09737239 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100738352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084960235 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096669082 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082095609 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100690654 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102301781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080434033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100102838 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084868332 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100554116 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099904234 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082117754 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096982565 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102283056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084255293 seconds)
  done (took 3.590205933 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086407978 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094789377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077372519 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100219374 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077077386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096344335 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077155349 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095116348 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077782046 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093691357 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079214605 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093906297 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07696366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095875498 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077625667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097162148 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110084899 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078185708 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094286411 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077962863 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097525785 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077426773 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094353798 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077930849 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093914562 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0771273 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094758435 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076733768 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093885603 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076844638 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09762297 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080651745 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094747548 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100135265 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081273136 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094061209 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081142485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093160999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07809187 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093711867 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076602138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093056985 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077705249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101112938 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077992204 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096949893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078369221 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096229732 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077774642 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097666128 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076915218 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093516209 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096442252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078313432 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097510911 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077135019 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095083792 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076630546 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09520733 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077763481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093812636 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076976976 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095992777 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077619095 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10914393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084470471 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094501989 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095793293 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078373574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097293026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079289213 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10874041 seconds)
  done (took 7.109104765 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.132379312 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123402621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079042231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097424135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075842065 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095078229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081455992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094554694 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095990168 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084217667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095403746 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079120637 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096008476 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09284346 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095168076 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079815215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100993654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092771123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078306407 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099022819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079018154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098090405 seconds)
  done (took 2.814814982 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209019664 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101619375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140934865 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105252101 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082225052 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10551036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101599807 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084892603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10189145 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082800819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099353742 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101341471 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083345675 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099152812 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099015843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083563889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10115389 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083579794 seconds)
  done (took 2.635715353 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094162439 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09785982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097578344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097920508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09772464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.192285306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103165878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106024355 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08290109 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097893898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088985878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099359765 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082389413 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097310256 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09975089 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080286301 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099693549 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08067941 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105993964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103813219 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086170113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105631896 seconds)
  done (took 2.971709983 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098235146 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099769894 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117735183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083475807 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094716107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078582579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104439231 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080562692 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104284379 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099484644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080551413 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096573274 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08625867 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097952482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102665267 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081055704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099388087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081149601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099199766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077037471 seconds)
  done (took 2.636375014 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104225798 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1006779 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098547887 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091399325 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100009664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081854049 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107662117 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098647699 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081683628 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124911972 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098643024 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081646393 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108235552 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104387788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098386029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09110115 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107607623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107540527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081177921 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098757603 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124025007 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080967632 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107142824 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098449054 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082575551 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098666512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098271656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087008409 seconds)
  done (took 3.521647992 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082418994 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098356672 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077903505 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095144332 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077716097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095634949 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078132145 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09564152 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081108285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095190136 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080955802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097204538 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080938624 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097375967 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080667674 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0975779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080051371 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095484477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077511506 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095116825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080487253 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097778673 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080258023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095905063 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078047758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097790712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07878095 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094438345 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080143042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09510047 seconds)
  done (took 3.418095637 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091608033 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107248636 seconds)
  done (took 0.976376826 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080515122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115019224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078679402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102250635 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086092896 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099006089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105700524 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085026854 seconds)
  done (took 1.531012156 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09823314 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111151512 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082276577 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111948778 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107986882 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097333951 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168553446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099547409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104773028 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07895646 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112168496 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080389581 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104680484 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081018798 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104451348 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087761032 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095441012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104124856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083645311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096951548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083067379 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107469709 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100919742 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080827041 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099854194 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090572182 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111080995 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099902751 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084132495 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10566909 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086645426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092186498 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080544535 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100489498 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078880003 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107997748 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114771747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084415511 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108334302 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100619214 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092520262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094716475 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085898788 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104467713 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108933744 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081683577 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099521046 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076625668 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099171338 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083814632 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093325935 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081528237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093316024 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106348458 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084526587 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109974241 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080021256 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10037346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084493246 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102206171 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106043381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08351002 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101252628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081274155 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108371725 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085269666 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108551192 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093568091 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076475412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09625836 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091563803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121967841 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105479859 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082194277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100708584 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078865605 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101601938 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100025535 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088054526 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105193843 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081947014 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105829577 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106702072 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081772547 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100801651 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088806728 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097559025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101080657 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079078501 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116562364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080279654 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096991011 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079652457 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110284716 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.101257514 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080674698 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096642946 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090045637 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092433615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082189375 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100868471 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099364292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091920985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104819377 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105812518 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090302258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106024893 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081673538 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103390763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078230719 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100042995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098557548 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088787865 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092930844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084892712 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101103679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082810671 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107902608 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096378305 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081867903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106870554 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087738478 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097334049 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078215633 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101306102 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081111545 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103028647 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107643311 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080888161 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094381826 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077019859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102124549 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082018616 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102386059 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103869106 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08485326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093180735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080143266 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103362422 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108897384 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081637922 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099482331 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087911999 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101101385 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08136394 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105874029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101165935 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08143985 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105371759 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082115065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094533128 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084753056 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102345426 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09741905 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086138343 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102733654 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084582068 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100149225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08051344 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104737624 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100268719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081179384 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098409195 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080466467 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11046438 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08378665 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094756488 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096479828 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089449694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097006805 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080868835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098552241 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085039261 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100267867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096846321 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081600782 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101283407 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093484785 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104654512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100698303 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087551073 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110722473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081953197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102409045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082240257 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100429069 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100843361 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090520306 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105946021 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087032866 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101771371 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095846006 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087402444 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107305914 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080328798 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096991903 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080292681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103445837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105105038 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085981795 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10032926 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079708083 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09973508 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08573752 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102745495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099534478 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081333956 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104564587 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081750409 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106333497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101198422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092319184 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102486235 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077679652 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103837704 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096896568 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088750922 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094436349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080410389 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097673748 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083743193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099239157 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085316163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093742295 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088918161 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107362511 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099391195 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081492564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099049368 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088557523 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101705072 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085339251 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103198217 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106740094 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092083415 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099401181 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085692162 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110802865 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100560994 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07692781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105824235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081567893 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098902101 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081453794 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09819168 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086249548 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109681123 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107692792 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076738166 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101850145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081315283 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098632445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07810205 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104669376 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102405547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082605581 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107227657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084123339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10096044 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103482002 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081599276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100357213 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083202363 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102660738 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083038242 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103280278 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081521667 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103616643 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099214339 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080002619 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101792156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082546371 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09952462 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08858438 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099556312 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082017772 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103437645 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100854947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083840195 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100484608 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081288837 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10324064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082301891 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100040872 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101732711 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077446272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107363495 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081487443 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10781873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08237385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097340798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087284075 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102021221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105489812 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082780624 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10130455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083808725 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099826821 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103056983 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089602935 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098005058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09406477 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108891224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10073948 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084908761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100329044 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083557844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098982028 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083660118 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100910447 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083012846 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099744673 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104105865 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085812005 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100005548 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08449261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101612336 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082810006 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102081354 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076495151 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099380076 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081144541 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10071108 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110797587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08395914 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100030771 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080907589 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10299034 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099402336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079450743 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108245868 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091757608 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101232317 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108360206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08222946 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101370827 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093098295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095542542 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081222403 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098460827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080472461 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10897478 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100521636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092580659 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10031356 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081702051 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097204855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083614075 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099089318 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09478197 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080630234 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111796084 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08176751 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098928893 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083027516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103822476 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083306195 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111103534 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099987706 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083428016 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100278197 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079709676 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099330774 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081666233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103209446 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101760534 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08108753 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097831656 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081865558 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100899918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083748348 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100167469 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083852842 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110863253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081408685 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103285856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104375207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077480483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103635118 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08179967 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099757924 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081290248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104996902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103493239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08403225 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109418571 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083083687 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102004011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082545681 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098705822 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100311776 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082829709 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101616628 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081652356 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102044014 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090949438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098998836 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103765237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082508695 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101546656 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089378389 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102280124 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085630321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109469941 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101142036 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084202595 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108662929 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085537201 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103507994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101247579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083895775 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106837025 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082073562 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106984126 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082192904 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101414946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103258539 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081215625 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100093489 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082711733 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099616272 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08834972 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102142964 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081297456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099730338 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099314226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083577295 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104333681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090859181 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103623914 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086045719 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096598238 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079975951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102671693 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097866044 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084550945 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10439569 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08900912 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103672902 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082526425 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099799319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110185834 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089252146 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104657583 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080765046 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104552697 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084405323 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103476101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102555677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083151389 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102087384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086444768 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102450822 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08257395 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108589014 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104687204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084795669 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10184996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084091223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101040699 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078155732 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102190852 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084752033 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106484396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103328688 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084143982 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111999662 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081427225 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101406738 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104396829 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082857258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104690023 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078761612 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102771411 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084019211 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102379118 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078611168 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100195671 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080404881 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104126024 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100505173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078761336 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112660628 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092094662 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104363438 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100542371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081892368 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096326527 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078501642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100753929 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084222891 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103473385 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111494247 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081999545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101526711 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078216246 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101565661 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086014101 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104763868 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081071691 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097208435 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081496021 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104936347 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107005395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082138161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100994699 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086423488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10451533 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080998589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10589914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07941964 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105110237 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114927474 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083837598 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101681833 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107557087 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091964023 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102348224 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078666678 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102870809 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085467645 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102386316 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083426714 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102639121 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117123665 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086091231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100748131 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082414834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104759957 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100146338 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092347213 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102589094 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08443974 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106783323 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084523398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111606104 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104062931 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091916152 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104793319 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104651092 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082481918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100893444 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081064908 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099778973 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084482976 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102864178 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106021322 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090997558 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100972675 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094485513 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111379646 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103935243 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080341624 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100044496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083489406 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096836819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084592644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099310199 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081746021 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100308755 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081386875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102864839 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107959888 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085261327 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102407062 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082816035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09577538 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08537449 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10473528 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083753366 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09893088 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083062049 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103630522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105173846 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087273599 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099281615 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085209077 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10419893 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083682965 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097411214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108758599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083041974 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104234129 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083211778 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102199293 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084428863 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105360613 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107789205 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084482267 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103987108 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092640337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10497876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080537809 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100005534 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107648764 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082232717 seconds)
  done (took 57.234547143 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149597774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080185228 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097074693 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078645483 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111293835 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097512 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078509402 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098841773 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079302172 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101820653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078901107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097214432 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106313047 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12241251 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092458892 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102569019 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096907192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079825896 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096731606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079788338 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107676438 seconds)
  done (took 2.865522032 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105121261 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11888498 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114873002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116254732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088855819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113876027 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113324543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113475764 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097928635 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109385822 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116795438 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113587531 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09041855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109534978 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109282672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092023243 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116948912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107162547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11442718 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094188571 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111705876 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113435136 seconds)
  done (took 3.210073464 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086809121 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100544238 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08439646 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096401164 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08322213 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.095936247 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086278803 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100324545 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086259094 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100985641 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.100108975 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08179174 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10383453 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078383026 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101734102 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080503038 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149471876 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105657458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082147824 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103925195 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097725365 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085013777 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096573342 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079022771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100827565 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08726829 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102540707 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081225886 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102781249 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082402435 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102220696 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098926569 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084808327 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102517849 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081574412 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100082725 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083509966 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10120602 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078869384 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099407494 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083127958 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097809226 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082940225 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103874715 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.099657657 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.080561884 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103239618 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083450161 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096590185 seconds)
  done (took 5.419178282 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106562557 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158007418 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086311401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14230939 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119676826 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111614201 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087348795 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140723674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1007353 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085592721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120088295 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119287812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101745739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088008692 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109688375 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103166904 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084832183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102306332 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088028083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103165716 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106528557 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089930922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119656117 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116727914 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106339888 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082254007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103257918 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107061037 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097243099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108601191 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10801019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089463779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119094082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107716103 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082673253 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105501184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120297228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084273375 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105287613 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099652292 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086358154 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107960627 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109572991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102031322 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103691003 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108752908 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085117113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100783285 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116045811 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086260095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11166797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118447298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086987723 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103972519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10808076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119824634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084919292 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100672526 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087065203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11661495 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09990776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088230958 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117826463 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104201489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091827748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119476125 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108085406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106740946 seconds)
  done (took 8.078316019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095934609 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109447132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118171038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119552777 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090776545 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110015696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110038915 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090612011 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109910631 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114508552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109029797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131676304 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085664418 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112947252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109727859 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090305692 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10983011 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110370328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109685946 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091697417 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109584401 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119917031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090244186 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120159279 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14020358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105036618 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108524205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091155414 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120514712 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10973093 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121734125 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090552526 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110854597 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119224813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122237687 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089520092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103652547 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11006263 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090824055 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110252914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105187843 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118954039 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091216176 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105765599 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110042568 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090038864 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120389471 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123936346 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113374043 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116523093 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091118854 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118618916 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110471821 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110349623 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100400066 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145254291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119971116 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119587356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109824181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119476591 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099194084 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127201889 seconds)
  done (took 7.623531528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109509491 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115639956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115602029 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099626416 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08223347 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108591028 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082313734 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100974107 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092626755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112634355 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115298345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106850854 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091366834 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115743512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108274949 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111111319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088352125 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107683749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112817966 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088251738 seconds)
  done (took 2.914799058 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095634451 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1227346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084759229 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111711174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106865561 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091066424 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106163598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107247998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085498188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106699831 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095842223 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115459268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104044277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091226164 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115666273 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110036079 seconds)
  done (took 2.502613987 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099837607 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115656131 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119333156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083848953 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102758822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100751549 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084341144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100556911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080970866 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120131986 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084385519 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109494872 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103892389 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082933609 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101081841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087730611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10008807 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081847756 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104502555 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118798052 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096722258 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103225661 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104493004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087260136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105284233 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090097494 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106407777 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101747151 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083151788 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10455362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085249558 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111487702 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100496733 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084179187 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102055314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082268175 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103345315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08428103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107297389 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103939228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083913393 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103937819 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084386548 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105787913 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099908398 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085065933 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100071892 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091714171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102988786 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084117186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104500463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106036047 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085886633 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114334847 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107718002 seconds)
  done (took 6.241922524 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102425775 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108487892 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079926144 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101967344 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08735835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106639891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108091221 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086313305 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105402063 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082553538 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10633265 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08761082 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106173826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107766985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087130354 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107447542 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080397833 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106150645 seconds)
  done (took 2.61191419 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094194231 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104402816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09207863 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105473779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084799615 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10819311 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08072073 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103472049 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103100861 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085516281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105073711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087805036 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102766159 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087195786 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105315191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084807206 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106964787 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103306825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084396314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100216512 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086878383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103011624 seconds)
  done (took 2.975560251 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114965921 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.119150591 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090427291 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.221576376 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.100365538 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.127711558 seconds)
  done (took 1.632122 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112840172 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119525561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105678484 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106602709 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112708423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106379628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086516858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107580988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116036105 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100857891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107777607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116098816 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115585784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095906898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113329032 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113311858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107291673 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087203675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105428515 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125970589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087291354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117402218 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106590432 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086567481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106792627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116428076 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116592688 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12078774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087031865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115836171 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112666439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086561335 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116958867 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121063195 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108814043 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097266457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1073295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126823952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113315285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096070876 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10923591 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112927527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096848013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113418286 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115402262 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107090314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09226389 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106669268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107659793 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13548089 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093565858 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116961383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114303054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117278692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116451149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134074618 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100740753 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117272525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114270673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121951305 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115274558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09329239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11615498 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121763428 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113806194 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119816641 seconds)
  done (took 8.092677719 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105476081 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125639683 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107997207 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121603181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097340646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107413038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106475194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087670402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107314024 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106390997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151779278 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087813367 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117305527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116208246 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106854228 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087659175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106562025 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115432622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08732493 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13413144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107133889 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115942555 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117602504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096136536 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1211678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112334607 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107345998 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087978364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106897726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106836222 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093425918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106641506 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116402667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086376537 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116389768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107366222 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106924643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093427214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106678419 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113236484 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096712343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126587407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107098885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10695172 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121804276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08746551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107191108 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085827916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10833808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106399873 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122000918 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100949003 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121045128 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116615007 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107930586 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088419784 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107862052 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107505897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086546762 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113489097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116873582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106999399 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134181053 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087883598 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106491479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117571405 seconds)
  done (took 7.970623968 seconds)
done (took 154.269567612 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215979771 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19770039 seconds)
  done (took 1.274353315 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090460294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135320474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096388515 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166856393 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08542141 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139489603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137669139 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096624222 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105222774 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085184662 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106017287 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087653285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169477129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085039146 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104726901 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1077365 seconds)
  done (took 2.668919779 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115441626 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253295498 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121173741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105137062 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089875956 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108864392 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084233188 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10968025 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089337564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10411998 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087941605 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106010927 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083432892 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105731569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088464987 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107840125 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103981408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088747978 seconds)
  done (took 2.821686058 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115384235 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14505567 seconds)
  done (took 1.135840855 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24358258 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160293137 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22735122 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470503309 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278769185 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.354575468 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196943898 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208537079 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163398006 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207943518 seconds)
  done (took 3.379727212 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120361249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179807719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314745573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155695103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106342617 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125954639 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154948631 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129956729 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122554756 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100635713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12113712 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116860962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136626662 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093544928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114029559 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116415941 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120154085 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11268645 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113922771 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095430366 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136863532 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105491587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094649032 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11208061 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.11761271 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097267782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104824032 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085156512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114885095 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113962263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092404045 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124089697 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.116854226 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152984056 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121048742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153118474 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11675246 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090120819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113610869 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090187145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116908529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116616902 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123178063 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09688118 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104860685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096193944 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105018782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084441676 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114123402 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117207567 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09380098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111945119 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150566525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118575814 seconds)
  done (took 7.33335902 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793609641 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154463593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089516857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877580185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135333633 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103461137 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778915908 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117391516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264420331 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75634643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133453355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096842184 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229730109 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261437422 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979042584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295760319 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.640526888 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125224463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151579273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154115887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117790219 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115379862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132110388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456764298 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116609487 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090478846 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118902586 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119059984 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160409196 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125049177 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096945075 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20193357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251762274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206784784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093743037 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110739667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088732767 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193419196 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26859932 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194072438 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180228124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107953399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089585241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121397313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131481695 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085908804 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184957525 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175699591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170182097 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114703507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118164757 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097507415 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120720004 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164374011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120760665 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.325361479 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316142048 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09023481 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12081946 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12639407 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242438149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123614398 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224219821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138849695 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190129828 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110836033 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821840417 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169137456 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1110254 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09478176 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11954264 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114803328 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100008663 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167620576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390291407 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123605111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113580489 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0902717 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249627246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102425775 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111145368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162755865 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115464823 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12090812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103080211 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121877347 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167706692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255375131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100612283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119664714 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114198881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103408554 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115909204 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216516535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218370934 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161547987 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23327043 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099894134 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18385755 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169915851 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118656222 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173932157 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119120564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101975981 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121266146 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219077844 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14479533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122051804 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093498879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117548123 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148110353 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126300986 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097191478 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191852688 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476684452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166502724 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108193088 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127181714 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098879249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163045129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118073383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265198861 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121906409 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170438769 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119421676 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087254759 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121245015 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163780329 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121641983 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099549298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12168075 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11848596 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235185334 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219057354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12121927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221073337 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183247709 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117256601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172812068 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120676978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168177783 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119159473 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102285323 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115466441 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835079436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123613147 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097769823 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115858064 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195129928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089843427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12322547 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124470182 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087271653 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827831299 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126303011 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120072229 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101920232 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117752453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119836305 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095683584 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115617656 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160886778 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228702902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118917533 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098202742 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123778772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16061434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116527658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123586908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101758944 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124519699 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121879042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114586047 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102393702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167972309 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183199971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218498529 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567682989 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110737443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124092589 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204837578 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111504843 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289698679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097339806 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224801748 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184314516 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099435381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315921395 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164102975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197009288 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126394489 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171756156 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109810013 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117652236 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164408335 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088463942 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117513159 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16220425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123731578 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122743137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.978857143 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090274646 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229184201 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108562059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170389401 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116242182 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119080978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274695447 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111171226 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127322788 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164051771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114167044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102631964 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725527693 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123594082 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100056236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117917308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220436897 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164800332 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11965043 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119040594 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097156947 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159870129 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233412966 seconds)
  done (took 44.166861034 seconds)
done (took 63.646029447 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276302689 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215979363 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266222397 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168598259 seconds)
  done (took 1.902750433 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173779454 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148493798 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1206971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106407526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150583462 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084619661 seconds)
  done (took 1.680210076 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362687392 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272443512 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243145242 seconds)
  done (took 1.778812157 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289958474 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246142867 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471020508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323696949 seconds)
  done (took 2.355255616 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209762882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131876106 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11062971 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103884398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194474866 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244763146 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141867031 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200931114 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098723403 seconds)
  done (took 2.38572855 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195967248 seconds)
done (took 11.202678722 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.244159107 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.265618521 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.257148861 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148024229 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.251659779 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.189127115 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148405805 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.155757059 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119351109 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265155072 seconds)
    (11/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.168885403 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090672269 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133220271 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.237725253 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12134836 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.261835172 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118936949 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.174375774 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101971626 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.180629171 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114668227 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092300488 seconds)
    (23/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195001857 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097550893 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114485276 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.219602428 seconds)
    (27/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.204133066 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.247841501 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114662025 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190987103 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.221738924 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111397181 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11502194 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093386367 seconds)
    (35/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223592787 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.111157752 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100129774 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.182867265 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102275824 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.164134889 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209708496 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11622693 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06543829 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133069284 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172979032 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115137517 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088493746 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092847461 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170490824 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141916125 seconds)
    (51/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.161214218 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067186767 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197585678 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075310589 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150508087 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089183571 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144848255 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111837471 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181380788 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135911503 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112244173 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111499149 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134924086 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093033098 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122010792 seconds)
    (66/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198783876 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099330417 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.211053548 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.1699109 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178356785 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087958599 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108279188 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163431225 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119450691 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179491947 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167475432 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135050028 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134536649 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067617484 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118038542 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.0967101 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138433596 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.110313951 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177540551 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086593452 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132486635 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0674795 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110655597 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163404101 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090470692 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109684602 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.137571959 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065857744 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125107565 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203913043 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066374394 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144121781 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085751802 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12626743 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224693449 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.183440219 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094600377 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111022742 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065937958 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099480647 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092949432 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.129142488 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066394718 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118361927 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066319688 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.07606222 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119618896 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212490556 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067680394 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170736894 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09614991 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195174301 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139626331 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116543754 seconds)
    (120/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096457615 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109159311 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217786883 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.122461694 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091182418 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121445161 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126392982 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107711275 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.330129632 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.190999491 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120911833 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094239192 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117645931 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111678219 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095991063 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119499152 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111080489 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.101429731 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091469386 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114995753 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066468946 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121475832 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154319532 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090738564 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113085864 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.185182798 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11623449 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112842264 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179438875 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117429058 seconds)
    (150/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100364172 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114153299 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.186684691 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085141091 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117192793 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065868195 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09982878 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214161028 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118726279 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.090060387 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090632797 seconds)
    (161/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.152854275 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.123019917 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191851627 seconds)
    (164/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149980158 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094694442 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089420276 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100939211 seconds)
    (168/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110536405 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156254895 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085367223 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066489447 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213344307 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090755038 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113109057 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10959766 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.200353203 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075552801 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178138014 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19365982 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.117695983 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11384139 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098887195 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115985351 seconds)
    (184/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.147636504 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084754891 seconds)
    (186/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109775261 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097847372 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119190504 seconds)
    (189/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087315286 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127482768 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109923163 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067825089 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067177298 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140349062 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116151984 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087272292 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11612063 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092535241 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10784108 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087202026 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.152853093 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08570344 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117658234 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.123548609 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118515792 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067338841 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114895676 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066438157 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121795801 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110264945 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16248058 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176754763 seconds)
    (213/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06684558 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069317122 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152591965 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068145731 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115944425 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172297899 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086502151 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107875199 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 0.172679843 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086062903 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06668444 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180033918 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066451029 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090659446 seconds)
    (227/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09293457 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173531848 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067863272 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188177194 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109783445 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112472032 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138364591 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090227665 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094828423 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077119856 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091160252 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089588876 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21377588 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091182556 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08638873 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111132445 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087208737 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112469515 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08642971 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136059925 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066525341 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136854175 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069495026 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110677379 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092397631 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067284723 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165394047 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108640024 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11272547 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090426305 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100376686 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091524101 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095183327 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117031991 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0669556 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133356728 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087350775 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090734141 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068899865 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066750501 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110805707 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.172031196 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108700571 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111312807 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092108135 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195688171 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091267557 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192696151 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119356794 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117730288 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086994669 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067275625 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109323274 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09597868 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091187944 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091491327 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110444748 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084990549 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091331704 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06610667 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117532552 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068835199 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132829502 seconds)
    (290/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066725885 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109099027 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111896172 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111398003 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09170607 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11561866 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110885048 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110199168 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109297244 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092354104 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078183208 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090827943 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088576404 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114937318 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066970669 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114207859 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222747462 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093270358 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109451108 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087479865 seconds)
  done (took 39.690731711 seconds)
done (took 40.59717488 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104463495 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135586049 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096447639 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135512536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123399041 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091797551 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118834871 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097178547 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123247156 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12522515 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098029087 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093625646 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096050482 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119671274 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096804714 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134517075 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124312176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093880915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118281231 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086002991 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119166949 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086290037 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112246288 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069787113 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121121094 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093822515 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116111209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118924612 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086773571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110171301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089894333 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118039566 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085817658 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123763646 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092581448 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119304908 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09718614 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119655985 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112102816 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086374971 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118910641 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085331655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116957839 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094032951 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115735764 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092432152 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118165497 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09918079 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135563867 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113125118 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094384757 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120775037 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095156738 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117139727 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090550007 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121418333 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118356295 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111073897 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121618794 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088261419 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119062158 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094269743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115910914 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118651157 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094474419 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121280475 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09784886 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115494395 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096664292 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116902785 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086835989 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118032483 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114028796 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087195966 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119470665 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097213618 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109181258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091488756 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117742452 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091400305 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109852162 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088955657 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111937683 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092297773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112642655 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070434823 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114029148 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092951243 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110144291 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095697116 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117355511 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093246035 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11343026 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098510612 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109721398 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115833247 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087266932 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110590981 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088372576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113990728 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087342353 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112762139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095007643 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111515611 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092863218 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12287254 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086927181 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117144814 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085941393 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110188351 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124853897 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097753045 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.1108688 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089594853 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109525171 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094455724 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109775475 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086055701 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110161058 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086081921 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116144967 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086126619 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113224954 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093982145 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124770662 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086431822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114340423 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088913943 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110435316 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092428338 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11028594 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086895743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112180968 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077890484 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113213337 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087307827 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117595802 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089479737 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119183784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112428656 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095262544 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115158053 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093001918 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.1158214 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086149484 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098812253 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089509908 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112326626 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088757683 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110421942 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089644731 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110658382 seconds)
done (took 16.896262745 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091124847 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184133874 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151273715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142047208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10670304 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111426216 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12149275 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118784613 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11313389 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143459999 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109299152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131805639 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147293668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086390808 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111600122 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09161151 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112936074 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103317236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14518019 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132956376 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163413188 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085922393 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146553204 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134917344 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120531056 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10468779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112232651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090777043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116256389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113235731 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131181986 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114767861 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087500762 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134953693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104696391 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120072106 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111500257 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095044866 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111097113 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086958257 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14038395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132968361 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092537578 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117119012 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091118296 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11409745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088599675 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121260119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121916532 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091156799 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126105247 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156003394 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090868206 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121484938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110395765 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098505099 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121378675 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090867706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115038872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089224482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111570579 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090678032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12745631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141202666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091559938 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121552297 seconds)
  done (took 8.614834671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107744695 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13881929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129954396 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105797276 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111793251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087209411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112342701 seconds)
  done (took 1.768708472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091639878 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133344299 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11098029 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135030176 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131336831 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124810903 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123003277 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087486455 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130735381 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089662854 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132938316 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151920495 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090034396 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119859747 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137263679 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087877658 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136788121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088341395 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115842468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136565292 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09023596 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134285568 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08971764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114045519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102934438 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113333527 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162565045 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094335646 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11474691 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091652415 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111577245 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165244824 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102695795 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124519916 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113313742 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103075633 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128407168 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085931397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130609638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09391241 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126727718 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115038846 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089034089 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111580435 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093556159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123868842 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08977098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115948904 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090698239 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133969898 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08888244 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126472104 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113738646 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092648472 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115127998 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093965894 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12433261 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089563191 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13340721 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090232414 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131658395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130184478 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102237071 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131217751 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091443802 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128973819 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127965578 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091835521 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116018145 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092083685 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130246887 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086740617 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115616273 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099464477 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115669379 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.13694286 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112190157 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116175145 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099124821 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115016884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08880015 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11393461 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137619518 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092811187 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114468364 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092577784 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117388005 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086487091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113215988 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092170794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112682436 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090749066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116929234 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089689764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117139764 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106398792 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114447159 seconds)
  done (took 11.824069932 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093349846 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115398781 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092089201 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114453107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089670893 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115497985 seconds)
  done (took 1.605694427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116678525 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118009711 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103801471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120130398 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15736818 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130031233 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105409549 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123489188 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1072225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126829748 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12917397 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105043392 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135045743 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122119612 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103677297 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121069862 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130159968 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100155921 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128659138 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097089954 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136281558 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122136863 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09654134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.1326714 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117622741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096011782 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126224046 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103215787 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126967889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122803071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095729084 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117832416 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121450042 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097789409 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130576062 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095800358 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121822168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119630441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099764981 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118872858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129394706 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097401164 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128015265 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09487792 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124103264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121860139 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093765966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126777073 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129743828 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094332721 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119107366 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09523886 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119330549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119173934 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095224504 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123958456 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094667877 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130100599 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120891452 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095854268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118975997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094450279 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123671426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119121437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103948172 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119563568 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122096523 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097364384 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121913218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095135553 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118669377 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117379125 seconds)
  done (took 9.271319074 seconds)
done (took 34.049622453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690378785 seconds)
  done (took 1.669796798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724984956 seconds)
  done (took 1.707312102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.054647799 seconds)
  done (took 18.036909044 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504049516 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581177283 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82976525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.187321521 seconds)
  done (took 3.082682157 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.95087831 seconds)
  done (took 1.956525348 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249388847 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230027636 seconds)
  done (took 1.465645371 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775776237 seconds)
  done (took 1.768953232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366155893 seconds)
  done (took 2.351291364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335552716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186015218 seconds)
  done (took 1.515606853 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562428149 seconds)
  done (took 1.55477241 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.78584882 seconds)
  done (took 7.785083111 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262627537 seconds)
  done (took 1.271720447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308904813 seconds)
  done (took 1.306611078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.49096043 seconds)
  done (took 4.490194545 seconds)
done (took 50.949336493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103622717 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126625438 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101761737 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125101206 seconds)
  done (took 1.4495055 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105227907 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120925524 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10052911 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120750333 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125757479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095832427 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12314696 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100518223 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120202338 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09705061 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121049809 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120435706 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098260696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122472283 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092743933 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124323738 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098648558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121050416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123389772 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096661978 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119339643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097259942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124105307 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09390485 seconds)
  done (took 3.66572541 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105329649 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118234806 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095948666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118056507 seconds)
  done (took 1.446860089 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105320513 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142153681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138841634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099784331 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143392977 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135728803 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091589312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117930668 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094550781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125219251 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090312332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150246874 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138566687 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099592519 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126791213 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088402171 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116809063 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13628181 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099640017 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125685428 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092315484 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124462558 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090306383 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140185769 seconds)
  done (took 3.817066334 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.161026132 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15057616 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139980489 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095076503 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156227788 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142040691 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090141472 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141099877 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088587705 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13045193 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118431281 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13312645 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128604229 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08896373 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113818668 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113163833 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102402696 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128412112 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091121483 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145104238 seconds)
  done (took 3.468580059 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102901415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117410754 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087742542 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116469133 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098738749 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120819526 seconds)
  done (took 1.655300141 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095514795 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114785936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089846774 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114023896 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094065479 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115547169 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088235332 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114457028 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08937535 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114911577 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088306655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11335989 seconds)
  done (took 2.241574945 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466828702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092442322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121255942 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111423194 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096742587 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115084657 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10325078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118205929 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139949377 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089224599 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114752313 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090961746 seconds)
  done (took 2.667780149 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243208019 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129624001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289708509 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189797906 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157659668 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170966973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152061464 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163738649 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197631608 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157526446 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232616197 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196184133 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15072425 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19066897 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138926631 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145315057 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197481995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24374041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154625646 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203719403 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226893711 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165429811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177858759 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151601804 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13832533 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16894388 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093979625 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129473509 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233444387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177357333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18974915 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162110717 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146430436 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238445329 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250026032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196789823 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213022381 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109196737 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170030282 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166079922 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264549257 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11201169 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233749911 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158178685 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131507889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191764041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167043853 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173679617 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149462287 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139462987 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195324763 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23901151 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192821708 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138223961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160366197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161417423 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165356192 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152302408 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251294748 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198256908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205376292 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093686108 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147129561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190768264 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1812249 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166427963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206333309 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146668604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192787218 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187467587 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163465038 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218936992 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182688165 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137979096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170828285 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173394584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169005088 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258170434 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177905568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121591748 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167052206 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150504701 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104325025 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19258276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12506627 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212890363 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15114524 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135296485 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162482367 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159104714 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160387884 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196859616 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218793407 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120154523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110033873 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156448737 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153611296 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187784909 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1391239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157718181 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159464247 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102605367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203056137 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097012513 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17671183 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117983047 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1756817 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18349142 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126979347 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158324584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152339889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124628491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202437408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199264458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14109224 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107004259 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234654793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177033646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14993332 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179264266 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199513932 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142821622 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149538861 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226285713 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217294165 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140446625 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203603079 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15459198 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135875967 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133374058 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180002023 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15488511 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161610075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105524108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207721482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209272273 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12478429 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112021791 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214400089 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106221064 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131697431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161203324 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147804726 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139909224 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145976444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124108177 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209257659 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180119547 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152917733 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166900075 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15173912 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252567603 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139902505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122257005 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147438896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120758686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193883551 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196298869 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131101566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230808652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173249019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155539602 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171151575 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107955107 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175431718 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130140287 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12034905 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195529401 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167151422 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162815795 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193906546 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154066403 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208417362 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182293361 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172566559 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174684835 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164402267 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159275889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137575505 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157879852 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164758025 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096451859 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143673684 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133842071 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157209376 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142694604 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106858508 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225897947 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169368815 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148138911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158989424 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122506391 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206427516 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102452001 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176814457 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204768317 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119815582 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223978529 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19310903 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186234739 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14385915 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235711161 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093799942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126344196 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143045555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170562725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132650378 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10814921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166097101 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179161837 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209309288 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17645476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162636054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176250612 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189964079 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121377513 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141557744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210467963 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174708432 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184300135 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115404368 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151195162 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177029323 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156363983 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258136074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166970859 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175785821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235552963 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148747983 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104510192 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151714736 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184673342 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154397232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201914022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120706673 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142444941 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161511101 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133222433 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15913156 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182762216 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163330212 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216159445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1494997 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184216477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127939997 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164751631 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158074316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163786865 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082219624 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174492463 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229621567 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146829504 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170110911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192418348 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130254907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179009032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212127562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220385017 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110585016 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157019452 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159576464 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163836162 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170586097 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176874302 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159122452 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215178633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129934069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135313168 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139497109 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149576114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150029209 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105263721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149462833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174115139 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139724282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187492661 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160743013 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15658902 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17013318 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148774464 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144238835 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150197322 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215173366 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175156106 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240660893 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149079599 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179526179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20395409 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125895944 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131299662 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105254207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177085724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136373296 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21711683 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120008843 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156409111 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180026344 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218458561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112853771 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120311317 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156832125 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173068136 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164219223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15241805 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158749487 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204283089 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141529498 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104126733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171925283 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156178162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147783662 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195796149 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108440323 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147728447 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100704122 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133175442 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163670581 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206492675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136332866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181435616 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171465837 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167949996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164835279 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149971566 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148790553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164555588 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201848214 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181371576 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132741591 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158380455 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174666648 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193801008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187477848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112427426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230596272 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192334783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196089069 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142306072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167816108 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16638112 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15689409 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185000415 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134489542 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233528532 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106445156 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225599103 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153137429 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142106976 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175036602 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148686389 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113461455 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214839816 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173633392 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134897001 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105108823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166040639 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203374643 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153153121 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099956058 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17961731 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124312445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187643785 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258775124 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132684894 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153163329 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119629587 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135237509 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156234159 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158004555 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139813639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.160225884 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20504047 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133927577 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190491936 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229194215 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169701253 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174009887 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144084204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692926323 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130495907 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192447569 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153693298 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20478299 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15038548 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171765191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160804267 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168698823 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220942514 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158011371 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205071275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219740015 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177172493 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132622112 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158586405 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160759623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144039515 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150991547 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166911464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158847088 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153162813 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176297147 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16895137 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133207438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112215796 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224933064 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126765843 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212579788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179934319 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111493767 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198759532 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185216686 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133002606 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179477276 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232903935 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113722278 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150315919 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133523391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154602615 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258691149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097230772 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226462567 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176213816 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159371247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166212199 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145945421 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189896078 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157652751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177358767 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145758557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158227502 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156008876 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137403319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102128678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153663344 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165664988 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148368673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157968435 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163094068 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192179964 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122898827 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115378684 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156493685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187232974 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242181349 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136623707 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107860954 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16199757 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151496216 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174338667 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203269347 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108373992 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135361172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135569658 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131933757 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136774911 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153332977 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127505301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190728285 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205771152 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135949269 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277836671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113149078 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154442494 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115322786 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105095231 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150781358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14624789 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156588769 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150146969 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231055528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145755161 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132874968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1487982 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098664261 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136639299 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164007399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165527954 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175452402 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144713664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080389868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157144637 seconds)
  done (took 80.543465412 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164274113 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131320184 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146618178 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200361045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174987967 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268462638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212679026 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25313725 seconds)
  done (took 2.64025618 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098283136 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145584163 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152465853 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133227231 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090734905 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120235278 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.329236931 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132140795 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090477601 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139210499 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146685554 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117592594 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506802533 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118177326 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117244062 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082446503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115745413 seconds)
  done (took 3.719007137 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.461916463 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706149773 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.47812216 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124336273 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.072885772 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133683217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.69069495 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208931603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095055025 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483296045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.767631695 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.186219906 seconds)
  done (took 18.502827484 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.102657566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120610874 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107001363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135627531 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096245684 seconds)
  done (took 1.656588224 seconds)
done (took 128.467667693 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109108429 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408453281 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072297021 seconds)
  done (took 1.612663515 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110400425 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137001726 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110222303 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136334976 seconds)
  done (took 1.598434008 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100239376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126773428 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108878341 seconds)
  done (took 1.434884853 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32159729 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189647749 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142456193 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109226706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130115034 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103052581 seconds)
  done (took 1.440032186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099543067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127009556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097272136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129689848 seconds)
  done (took 1.555723137 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097061644 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070976559 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101388468 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074770646 seconds)
  done (took 1.440775424 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115830992 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131598839 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103606941 seconds)
  done (took 1.454189907 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132500502 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138482999 seconds)
  done (took 1.374230731 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108004555 seconds)
  done (took 1.204972283 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119726705 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169846249 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189369277 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164791068 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226510344 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164803047 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141367363 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114203435 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130455807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143278757 seconds)
  done (took 2.666688575 seconds)
done (took 17.644924637 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107719113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511418703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412449903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116220946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721753555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380652608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032159989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145911668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16477631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093258351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139966554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672409822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060417113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466285473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019896767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376421622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704579683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092212621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119743647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093004758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.01729247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092551406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121448959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091870806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701842723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425362845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094851238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369038851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0918061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125566581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409980503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094437929 seconds)
  done (took 17.156938128 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097525421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173656865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098342435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136736248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123079032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093259955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124393445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09381147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177934796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122138498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110800319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120491737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125068944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094640307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140971464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091684164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126148262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119425987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092980905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12234721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11095461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120262456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093951047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120723744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093240857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135785582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122533875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092496015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119784326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097778308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128365329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094846851 seconds)
  done (took 4.827196766 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143376059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182766976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12758214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127505065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167511709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124252145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199906456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146167985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155058487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122489965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139346465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092133616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15663152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123038542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113490822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121796236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097287739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121781827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092471474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12316183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14046328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091841123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122830616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092334215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12271481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136606894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095721129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12178706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092772892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127354478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099498512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123798721 seconds)
  done (took 5.158379417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101088283 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128186305 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10941254 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139018156 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095707401 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125644642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097937498 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125005717 seconds)
  done (took 2.033434867 seconds)
done (took 30.274152336 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106473784 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12236682 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098103291 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135879542 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097032716 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131649857 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091770052 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128489204 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099589561 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126671527 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129045123 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092038172 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123990106 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092102639 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.127836598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09328836 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13257391 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096620015 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13348715 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132947484 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094813564 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128329716 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098319042 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132893018 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104452707 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132643904 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133650942 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098537783 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122685052 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095467406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124181946 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103465873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121747565 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103445159 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123072751 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092665365 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122105295 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092772501 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132976318 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10005722 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125716869 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128990052 seconds)
  done (took 5.904932352 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113067263 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13979302 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104301191 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081617765 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117262898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081197468 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138724021 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078908465 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111042576 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108749433 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078142761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107130898 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078884286 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102476966 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076755754 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075576199 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109177953 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075635823 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076611257 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106454822 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079881359 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073806726 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108339573 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078567748 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104740881 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082032994 seconds)
  done (took 3.599783473 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103912994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135740998 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112642133 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184616036 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162406802 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100448503 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13314046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141220748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108962582 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12060429 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096373111 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150332583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112276888 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128972418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09223432 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136894885 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135621395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093455021 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128420272 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113293297 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138282935 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101874907 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142499005 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133839003 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092079658 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122941358 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096921614 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135548994 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096770499 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130851552 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125785162 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095674569 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122875526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104350928 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126797321 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09439062 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141489686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1316469 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101035576 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121911839 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096023313 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121885908 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113954061 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167097561 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.120286983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.098996559 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129037142 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102831537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121843965 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110789288 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131106828 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091097729 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125107283 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091413934 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12168322 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136440225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094762072 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124656835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102086565 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124334956 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105056475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125599263 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110065647 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12167059 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128905313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092100892 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122137411 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091288129 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144703327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094156031 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164178361 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122457193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093739282 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131428253 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100396094 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127948134 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.091786453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137868327 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101806298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125577268 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130169364 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096378575 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124619119 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111239603 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124542043 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094780492 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122305473 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098897125 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124592823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093173244 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136057633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121457621 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095528266 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139330001 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091548471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123735177 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098945136 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127141354 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091738504 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135451342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128329298 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093731521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13158584 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093562332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125441429 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102702088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12761781 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092120913 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127725559 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128475769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094149114 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122991603 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095068352 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123676962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103588704 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128559268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097999303 seconds)
  done (took 14.831528089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22940666 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217215557 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.124559992 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.208146318 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10483661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.133819844 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213718131 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156276154 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09288998 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.133809302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.093254197 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.161414015 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156689901 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.166917512 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104048048 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120443695 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111874617 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164869228 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214026118 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207077364 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143995477 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132044 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.094630728 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12478662 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094340808 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132240868 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141410715 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104995015 seconds)
  done (took 5.217110872 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112893734 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156149169 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.129085221 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.114799838 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147576114 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093619758 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127916718 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095557998 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135015863 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13683879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093155826 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129539343 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100144157 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131792222 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123215529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102721908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.1327344 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094667756 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125220931 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097163727 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129734804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131744268 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.096934032 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122140856 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.099673774 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121425045 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086750737 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142972965 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122403491 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115410097 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121150057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098730273 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133707106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094250764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123294437 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095520023 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124834946 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095349403 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123830405 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121731196 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092085545 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077659427 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122223571 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135832731 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099248503 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110010901 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099868944 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127942734 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098414615 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120305246 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095845806 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125067652 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096347695 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131295136 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098558137 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128979795 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096078268 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115909855 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100082188 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125830904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084877037 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122224431 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098583892 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11891752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101206037 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128398749 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092436578 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124930437 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.127013961 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099981456 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125572709 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096611513 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121066888 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096035921 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128544787 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098583282 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127469719 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091836661 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123462459 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093912042 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106596922 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09367517 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104680594 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096171787 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121694646 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092102186 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125163605 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099983092 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137284841 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095400539 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129561431 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123536581 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092210489 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126264305 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083506762 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126753662 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108216986 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141922662 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094110932 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122069389 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13724148 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098884122 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122913007 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076789645 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131636655 seconds)
  done (took 13.010331697 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.122731059 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149140124 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096490646 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137605938 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.149503483 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117014308 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130938553 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100049146 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125808607 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111678625 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12341421 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101735797 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127776158 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132414344 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117241672 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131931764 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095801341 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.132234414 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101212527 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16068213 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137574595 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108364811 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135306174 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093586281 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12928658 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105765498 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.149919047 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134487495 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103415975 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138738583 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103969015 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.149125746 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108770371 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127770216 seconds)
  done (took 5.331096146 seconds)
done (took 49.004599603 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.245454279 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.437190891 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.209368368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116992075 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227069471 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228450482 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222312917 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208739068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.844781555 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210530879 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.478167587 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.885303797 seconds)
done (took 60.452020722 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.238764855 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342276546 seconds)
    (2/2) benchmarking "String"...
    done (took 1.475203531 seconds)
  done (took 3.963829128 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.56510638 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154896164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46879819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208847848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208836239 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49044282 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.865570586 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.560167883 seconds)
  done (took 28.089969673 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.210345887 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.59369714 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.873577882 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.883823851 seconds)
  done (took 18.69629144 seconds)
done (took 60.689830072 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.213041926 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.261517118 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22838281 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185083056 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.339845266 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.253129676 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.497752266 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.364636457 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.22626858 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188544078 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229490505 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210325958 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231201837 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.477601661 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.213434486 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.212143769 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.213930495 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.863528139 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617966552 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210354209 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210553101 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.289030626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212168083 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21442345 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.274744558 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209035907 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206879158 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216568092 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.780057974 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.21743633 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21580359 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.678802285 seconds)
  done (took 191.097678663 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.211154756 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.228795116 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.292378092 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.26414834 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.589220772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.410427516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.377134138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.667833792 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230212961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223229709 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.390809376 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214765414 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.465991172 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20124883 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219383633 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.308572851 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.39865536 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.476304291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.2302168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.486212205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.239706055 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.450617283 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.422345444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.357448299 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.2555995 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.288520336 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.214988963 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233255456 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.417973973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.344651455 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220718976 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.248255106 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833338962 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07268028 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.236946403 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21652847 seconds)
  done (took 150.076783052 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.500671773 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211669115 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211037472 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21554425 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.21311655 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.246603422 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210068777 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778962924 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776418458 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.75362929 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.290082068 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275796136 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536756225 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.214455631 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308809267 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222977253 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211689316 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.213703702 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229122333 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227767159 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244172517 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211170812 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794069945 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228578149 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217208473 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214006024 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24827283 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.602973111 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.418129212 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217002752 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247519893 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536297286 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26104288 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212008219 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.597754041 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.191464537 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322568581 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2143029 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248777954 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21470292 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487032212 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211343625 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213146456 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219439731 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876481205 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21783286 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782618488 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211368587 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172359395 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212068781 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217410327 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.925042976 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.891917739 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232147352 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216138437 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219620799 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.216778309 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217456095 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.249345505 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.752360932 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318631452 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.232446784 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223403264 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25158177 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.218788775 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.739817468 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219399986 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.254110778 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284020186 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.321040128 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796643763 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219842325 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314200971 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334432384 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215480129 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219305487 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218351253 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.219403618 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326885203 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215879033 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.650909755 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221876008 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220565711 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279283175 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314236964 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215116354 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579752188 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219315371 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21807255 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956302593 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311416299 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215598168 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219288937 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218341552 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.65230268 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783001881 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482665923 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223493835 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.793370643 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219665327 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218033771 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.670507312 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778286496 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883286254 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.221144309 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330395653 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219953928 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219494237 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220903144 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.218772083 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248681022 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.23526845 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.280113375 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215377988 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.618644391 seconds)
  done (took 349.393432732 seconds)
done (took 693.200386323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.923308295 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868125076 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.008566097 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.884041503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.86821271 seconds)
  done (took 10.6966012 seconds)
done (took 11.840532611 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410992111 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406885472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280941979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.416201189 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251240023 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431659248 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391003133 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242537507 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323140033 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301300931 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323932631 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270596439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24945092 seconds)
  done (took 18.444738044 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546342547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525128797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281606236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549382819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256864069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538874102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418016563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442688997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428542528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249670508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237425036 seconds)
  done (took 16.621647124 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547911801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537293235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284882494 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552089811 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260849736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548630738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42345053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440581547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43196036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2508565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236918871 seconds)
  done (took 16.662245464 seconds)
done (took 52.873124839 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231540508 seconds)
  done (took 2.377969008 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.267428231 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.434406562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248525217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234368407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231100016 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232901226 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236661734 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233183457 seconds)
  done (took 11.266774154 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231157158 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.231834602 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231170692 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2280329 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231568704 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228157544 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232223052 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230604216 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231268117 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.232286724 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229471417 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231494576 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230292416 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22972207 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231938729 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.228524146 seconds)
  done (took 20.838195182 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2299849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228250226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229541079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.229810827 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22911067 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229243964 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231115318 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.23046134 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.230385765 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231309804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.231587956 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228392302 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.231021428 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229387767 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.231410991 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230813893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228701337 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230650498 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.23416997 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230400401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232550115 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231444279 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230625794 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233185229 seconds)
  done (took 30.683928866 seconds)
done (took 66.310962238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.416140315 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.962359372 seconds)
  done (took 9.527393843 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.236075983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23458447 seconds)
  done (took 3.62366071 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.234029198 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235929206 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.234335062 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233784354 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234192988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23455534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235149649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235352709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233552852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.234842977 seconds)
  done (took 13.496224643 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236032257 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233563398 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233470638 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236212671 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235241438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233814677 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236336737 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23371655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.235313295 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.234943531 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.236958048 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.234348977 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235846231 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23564553 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.235437615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232961971 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232095941 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231961817 seconds)
  done (took 23.376079552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235997924 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236474841 seconds)
  done (took 3.623140731 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.232517004 seconds)
    (2/7) benchmarking "second"...
    done (took 1.235330795 seconds)
    (3/7) benchmarking "month"...
    done (took 1.234516331 seconds)
    (4/7) benchmarking "year"...
    done (took 1.234181917 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.234790344 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.23465713 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.234151428 seconds)
  done (took 9.791071705 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.237021306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408861619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491889831 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829509114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238954457 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24082808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096322529 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23990862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24332192 seconds)
  done (took 14.178883014 seconds)
done (took 78.765019832 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.274436556 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24218606 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.42044346 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.249524193 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.262278868 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573909716 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.27169504 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.363929495 seconds)
done (took 37.809571834 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.235047519 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.034249757 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.998071852 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.232499143 seconds)
  done (took 11.418420092 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.220632883 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.189833634 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21693949 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.279385308 seconds)
  done (took 18.062013793 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.288650304 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566070553 seconds)
  done (took 5.011037085 seconds)
done (took 41.877785969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238554442 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.238981516 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.236412283 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239551234 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.235616896 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233699142 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238769104 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.238637624 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.235525685 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239049891 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.239601756 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.238554488 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240859746 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236599824 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236905972 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236254661 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237949744 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240234849 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.23834066 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238501172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238420876 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241079864 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.235686248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.235722316 seconds)
  done (took 30.864276613 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237602801 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237653387 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.238436725 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239514787 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.237071744 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239519958 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240080803 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238724756 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240677345 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.240438394 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238854887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238352541 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238814617 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238252975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241587747 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238339073 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239957717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238195525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239966357 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238150367 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241576622 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238247285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241204618 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238810491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237930624 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240944428 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237409135 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241798322 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237495381 seconds)
  done (took 38.33040546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243239622 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249266056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241921818 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243780648 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243540857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241515439 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242741435 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241253277 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242796769 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.242354762 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241720453 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242381486 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242728573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243338357 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243525916 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.243488634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243909937 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24373635 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242717704 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243858524 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242357507 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.244598321 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243220392 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242566509 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243585229 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243816931 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243524057 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24488761 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24463477 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244267009 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242984075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.243388978 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244448378 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245013059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243096098 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244623803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.249230847 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252847297 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.244049731 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244787922 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243516265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243736763 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243191689 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24435677 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243307051 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244777758 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244497272 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243962101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245587747 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244486634 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24329407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245077695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245449645 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244675861 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244772183 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245233325 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244520063 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247713759 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.246427942 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.246004707 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245412455 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244326819 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244927248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245069723 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245184302 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247404945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246303405 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245173685 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245426377 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245657625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.244266704 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247516281 seconds)
  done (took 90.756192006 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245764107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243389326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244664788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242489857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242499446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.245207915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243192322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245940555 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243960109 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245161962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247029274 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24441968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24170871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247818275 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246867118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244344971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2483085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244194744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245883976 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250156804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246656392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245323403 seconds)
  done (took 28.556889269 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246844616 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2462954 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.24315533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24844798 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245496524 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253165282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247356805 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245861111 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247785284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244947216 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244416005 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24852473 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246187124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245199453 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24590377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244991759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248726656 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246732139 seconds)
  done (took 23.602950185 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.244628917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245037348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247567617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244095817 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246795525 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249277838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246591043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247475213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.248964323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245435089 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250802906 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251070037 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.2497961 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247676598 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250100784 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247199306 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249933702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245416741 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252084658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247628113 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247509766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249935491 seconds)
  done (took 28.619956413 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24943713 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249719564 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246311444 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248023147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248288693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250338579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249700924 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248762333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251616417 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.251484106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247653988 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250774794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249298429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248689177 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249416623 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248565191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252581797 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247374696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249398471 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247516586 seconds)
  done (took 26.150116998 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250216233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251073287 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252372858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25235134 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253249556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252044243 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253811668 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252153782 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250362909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253720234 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253186998 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252634812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252986829 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254745817 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251446841 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251658912 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252763036 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252380576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252649319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254274549 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252440104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253158033 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254038261 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25333179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25499133 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252197488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2539208 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254587023 seconds)
  done (took 36.245984715 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254032627 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254617241 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250797851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251915621 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252333003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251049202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.253313636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252111364 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255636836 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256400129 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258331455 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255845277 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252432697 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255763136 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253722473 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256561945 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255618875 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253230047 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253229766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251747629 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255851215 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256516342 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.255465604 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256121112 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253133627 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25827643 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252769913 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253711695 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257500863 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252235535 seconds)
  done (took 38.801086795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27385571 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273518221 seconds)
  done (took 3.71691249 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252300366 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255341943 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255252238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254994133 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253400788 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254286021 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256485366 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251720664 seconds)
  done (took 11.203355778 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25752545 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256576729 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257960725 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.259617972 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256387392 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256430214 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264701634 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275890485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258593766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257137924 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262660911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265049693 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.260264518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256988689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256611569 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258319453 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256883238 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256636587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256050817 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258766343 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258715705 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260952746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259326313 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254022246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26157486 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.269898472 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280718584 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257849391 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257794793 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264126945 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259737836 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.256305987 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258465036 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257091164 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257835567 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257011424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266922195 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276204874 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.264903544 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27690401 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259613631 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256081349 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259716671 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259877601 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25925061 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259030492 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259870582 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257197277 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257016462 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263330079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.266523871 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257759949 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256089889 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264307492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.261428069 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265568144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276597727 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260010629 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.270404782 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270979726 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.291429097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284941886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261143916 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260195437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270681881 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.283893233 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266863994 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275630005 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257808337 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260894227 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267636955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291384245 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.284967728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259958892 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260120459 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261013358 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26201697 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261607147 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268452177 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282814089 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260575206 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259821766 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270290025 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28637565 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260387896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259434221 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259483632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261886889 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264365045 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273950318 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279876629 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262330438 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263759815 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.263389274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26415649 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262063961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261364641 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262938209 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261211909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263686459 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264038013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265561398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.273707904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262625476 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262245598 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267312213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.281143974 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262788635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267197054 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262959813 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263311936 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.263252771 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.271073077 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.261775195 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268152933 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274904176 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262259563 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26402049 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262725037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263307177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274395478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.293224929 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263404649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26504595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.270639042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.278551004 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263455973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267223795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265120834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.263919387 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262410805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26599101 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264046433 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.267364973 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264382232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266795776 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262404266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265822215 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267901267 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266264237 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.26688942 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265980486 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.268805404 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266883636 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264902419 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.26663514 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272762907 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.284806141 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.267224818 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.268493718 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.265277156 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269366484 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270049652 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265978667 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267915145 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265781734 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266351597 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265683524 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266964101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266746458 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267554987 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267920519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272158675 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266761161 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270276138 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266705155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.266294981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.268998174 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26987977 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.268448097 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269420972 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266794357 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270929659 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.275835044 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268149409 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268909657 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271716333 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265670235 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268028407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268220976 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271689237 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.279284274 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268955523 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274860855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.286299822 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267035295 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268196648 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.270057061 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268964118 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268912501 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271057531 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277940912 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282091252 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293656227 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.271481963 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272262722 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270835751 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.273310041 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273754662 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271013152 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.270133906 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270036057 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268293989 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269786473 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.271105126 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269813791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2686131 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270956736 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270354451 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.271151175 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272079497 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272845771 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271883446 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266660766 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271847328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272289039 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270012021 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26822179 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269835706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270951682 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272574771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272079109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27666259 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.268981028 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274156121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272767123 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268843449 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270027757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272090939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272446564 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.271334151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277509009 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289715429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272708195 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278047966 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289812914 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.27176458 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274248292 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272672356 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2712424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274631385 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281593599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272418611 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272754249 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271663807 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271350679 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273096452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.279177404 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288680852 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272951118 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273363505 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274063275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270475002 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274289431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275135568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273716691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273560428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273844234 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273468618 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274312617 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273210911 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272778559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271794093 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276509293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282061523 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277108005 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272663587 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27664275 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274228237 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277870344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.275996271 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273189295 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272940641 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286805308 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297306007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280596346 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294082126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275457121 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280837855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.293041899 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277237168 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273393896 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276243051 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.274133038 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273700339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272703808 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276051574 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274039 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277623889 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.277669851 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.281821389 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277868906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276467161 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275610283 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275739479 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276066044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.276105052 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275913635 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.278694156 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278594097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274777992 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275619287 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28107713 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295198064 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277329429 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275630429 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.278394517 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275901179 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277348092 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.277006387 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278062112 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285405379 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.281587743 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.289014426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278025691 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28780286 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.277223285 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279013611 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.288316539 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.274489355 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.278406752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.278997877 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.278429453 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284276876 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.296259134 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278334488 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281015568 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27899807 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.279103224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.276784463 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277391077 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277197347 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277808428 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284585552 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296449674 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281053603 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281849155 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276735005 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.279215065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.279125508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278625362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281649821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.280061185 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279917195 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278005421 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278225066 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.277681688 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279939762 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.27924268 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.277986497 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.280671505 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289098047 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2988283 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284460062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.282091512 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.289747718 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2987707 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287362249 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299204799 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.283721058 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282920944 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282240446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284055753 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.281429227 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.281093992 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.280282609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.282899235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.286314455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282770138 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.283285103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.283042903 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.28151045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.282623422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292568181 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307110837 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.284895987 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288295728 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280064898 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.285168688 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.288175999 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283941718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.28229945 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.285591094 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295970514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293003644 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.284245662 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.282070295 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282979181 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283531649 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281076578 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.283473901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.283293946 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.282407552 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.283746384 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28392927 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285318933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282484554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.283494459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28422267 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.284914553 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.295021488 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.298962714 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.284132637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282244067 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283033512 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.283590494 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284040179 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.283140962 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2837602 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283644002 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.286361085 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291841999 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292205037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.286937853 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.284404458 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.286188743 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.284581335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.285818438 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285415633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283861225 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285968186 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.286914694 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.285085327 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.287835179 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.28402282 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.285178558 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.284870468 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285568305 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288632273 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.294352811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285488072 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.283738681 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286678857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286771397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.285967809 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.287281121 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.293811883 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308227427 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.299439147 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.298223316 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.291007616 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2880948 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292018709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295581364 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284094952 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286329314 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288328306 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.288532582 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287754747 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.290747993 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286806748 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.294464067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.306709867 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.28675973 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295761274 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.305360664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288077232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.290969515 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.294154246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289806357 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.287247603 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.289409741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.289457908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293844605 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306874677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287687629 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289759621 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.286140958 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290709915 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293435119 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2884128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.290413645 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.286718808 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.291592395 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289233799 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288207184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287113854 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.290827686 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286613575 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.293103975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.297203998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.286562167 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293173452 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287935999 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289161361 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289714746 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28691367 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288464759 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286445679 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290556005 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288303413 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288548603 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.291508096 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291032505 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.29031732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29204625 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290019059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293256588 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.302607397 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298985761 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287566462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290403809 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290070718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.293669687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28987984 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289434455 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291627497 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.294174148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.2904855 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290898475 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.291658627 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.295178359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307985973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.309846032 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290975737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290969682 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295166012 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.291766764 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.290329283 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.292472959 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.294571811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.297627228 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.301542815 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.293836039 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299940339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309629469 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292246216 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.298023922 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.296681735 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.302394288 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.29661523 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292370936 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291783861 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.298694581 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.310907391 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293237382 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30490969 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.325776558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.31190346 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.297047027 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.295468908 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293814755 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.296233837 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.295117976 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.293699198 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.295255094 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293854569 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.294570986 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29728715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30211595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.296262919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.295815096 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.296488944 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.296506355 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.296620176 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.292402922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29349989 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29341658 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294727443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.294452016 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293165525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.293758354 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304174007 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319311661 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295531497 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2952572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.292596449 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29999701 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296189867 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308782297 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.30487479 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.295613012 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.29578477 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296025709 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294465568 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.293181501 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.296503663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294656349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294614618 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.292871183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.309468992 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320481526 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297218391 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293519939 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295440246 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.296356806 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29711921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296719869 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296827133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296049193 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296362651 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300919996 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296044394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295769826 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.299133833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.306983563 seconds)
  done (took 763.818330124 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295324984 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294899046 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295083378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292984855 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293932195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292997172 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29533997 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296633958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295978311 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296146241 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294276133 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296376917 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295105701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295131835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295809576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292878911 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293949893 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294375619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295937665 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296055544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294958176 seconds)
  done (took 28.402345133 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298608794 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296993773 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295831585 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297421416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296733649 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.299809087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293396123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29997615 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298008719 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296465214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.298841556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300535153 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.298013054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.297827861 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297433611 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298979641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.301551708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296899641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.300283752 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298126487 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299317126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296667941 seconds)
  done (took 29.767276046 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298520548 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298790486 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.298568576 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.298423736 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.302046216 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.296495292 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299575424 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298758219 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.299517726 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.299490998 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.295817056 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.298247036 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.306970747 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302728624 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.301791205 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.298783747 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.445561303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298306324 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298778836 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296679185 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.294468385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.306175821 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.314613382 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.299223588 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.301055783 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.301216616 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.301562505 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.300806916 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.301152565 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.300458915 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303926371 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.300301926 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.300006425 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.303408162 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.301611906 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.302225639 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.305575309 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.301683196 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297182531 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.302674934 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.313596849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.325190505 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.302792118 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.308434345 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.317206866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.302659555 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303997429 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308392669 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.300935026 seconds)
  done (took 65.167986493 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.302846229 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3017349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.301261591 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302978547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.304423652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30360318 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302904532 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30231144 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.301182543 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.300440965 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.3024784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301377364 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301554412 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.303704477 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302604091 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299374678 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299841379 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301090429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299761178 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302143698 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.30132213 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.304725769 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.305316465 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303096537 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.305323628 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301023003 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.302131253 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304550267 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301650238 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302621395 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.304487908 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304597 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.306607396 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302072048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302247393 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.306425356 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.305851373 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.306311621 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306611254 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.302369174 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.306313674 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304999772 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.305025653 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.308264329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303663835 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.30417088 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302999589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.303054004 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.304688085 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.305612897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304872861 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.303804236 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304706266 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304565968 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307489562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.306791113 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.304406501 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301304114 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304667836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301403788 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.301355794 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304304931 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.301878287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.306240733 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.306447985 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304095331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304481743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306434774 seconds)
  done (took 89.860144934 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304813441 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302482498 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303841792 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304196167 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302356549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304198056 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303591629 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303288888 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305174352 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305594133 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304899733 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306524102 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.307311231 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304855589 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307493472 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307439151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306462794 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30752731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304871526 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3095883 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.308535379 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307605731 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.309090578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306412315 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308644932 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305204767 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307734402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306806915 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306235036 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308870165 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30581613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307390313 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306606959 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305635151 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306560149 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.308905636 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305344299 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308248243 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307845394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306983157 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.309098389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308739004 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309803139 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30881063 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309719164 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.309338699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309034129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.310150736 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309878646 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31012542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.309358732 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309157205 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309643951 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310013784 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307110992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30960378 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309424828 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309177499 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310775789 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309847027 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310687081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309051368 seconds)
  done (took 82.277373169 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309938187 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310586471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307516567 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309475652 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311253122 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309389217 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311414573 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.311834766 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313226097 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.312961174 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313100624 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30950715 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309421506 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312676132 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310314319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310257636 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310968995 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311103713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314691628 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310676173 seconds)
  done (took 27.440928072 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310864687 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312091481 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.311038081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310137113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.314291846 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310008557 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.31311315 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313168502 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31166617 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313168798 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314247808 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315368677 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311274415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312767224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313511079 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312434377 seconds)
  done (took 22.221009709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.313109142 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.314539144 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313796724 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313663524 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.310432692 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.311112188 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.315802374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311556888 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.311468963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.314922055 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315546994 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313672612 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.313312783 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.314131636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.308057339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.314832569 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311271959 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.311717233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313049617 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.315567672 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313882264 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.312624578 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.315600559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.314668104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314466696 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.314474611 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.313138958 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.313955067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313259063 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315463236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.31399736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.312818313 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.313026358 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313385944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.316082653 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.313068931 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.317737357 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.316609859 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.314977303 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315985891 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.316781576 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.314443265 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.317773318 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.317769716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.314322008 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316214789 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.3120354 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314116837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.314596534 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313084511 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.316258702 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.315771075 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.317515278 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.319560322 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.318024902 seconds)
  done (took 73.51233956 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317654451 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319285264 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315286655 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.318489979 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.320103236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.317331308 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318527114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316536324 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317040894 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319549927 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317087534 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317687585 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31640131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31781552 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.319124078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319822703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317417142 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.318791936 seconds)
  done (took 24.949204578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.317472392 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.318212122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.320275579 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316593115 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.316353548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320798279 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316952011 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.318611716 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319412885 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.319205206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317869109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.322141021 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320189585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.319786079 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31719762 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316766243 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.319681546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321374313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31866632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318325999 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.320897306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321236213 seconds)
  done (took 30.245961968 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.318256912 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.319319927 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.317102765 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.335690325 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.337813202 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.341779248 seconds)
  done (took 9.197241736 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326962607 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319452794 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317452731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321364101 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32090116 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317732007 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318946415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318856849 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320982903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317879035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318607657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320684161 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320028821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319180639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320615795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324496536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318525311 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320586932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320170986 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322671909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320885621 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320348633 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319000605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321186946 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319667821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319749026 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320648991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319670522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319004236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322433898 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321032249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320764873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321047316 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319566769 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323342541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324391377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322461875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324947604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323197002 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319356572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322687728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319868454 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320947787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317716319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323739742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321630639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320870289 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323128883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320591688 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323029086 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325286291 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322109443 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324549934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323085684 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323661855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325645844 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323461101 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322682224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32432746 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322026591 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323153634 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324422421 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321553985 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321061578 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323960458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3227176 seconds)
  done (took 88.475814352 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32315335 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322592598 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323071779 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318801509 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319070167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31978227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319292942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320074195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320003187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323043728 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324826988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322869276 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323632531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325142828 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323269656 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323679559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324131296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323089198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32356612 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329113488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325045134 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323649906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324088564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324647667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32452653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325438581 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324183141 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324864832 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323925843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324199724 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323265437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323868349 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326782676 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324390643 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324748788 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320910607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32386336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323541668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325167441 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326387335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325131444 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327569271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325057428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326242498 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328278585 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324982344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325824321 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326281676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325116903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326080827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328025825 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325602826 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326416952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326171302 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326528615 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327349272 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326162771 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326694703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327111316 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327887346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326766322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32530328 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32872899 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327070586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324948772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326539553 seconds)
  done (took 88.660532322 seconds)
done (took 1781.99673412 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.352114262 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.439021049 seconds)
  done (took 14.024842141 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489054663 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439303238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.32483042 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.355952418 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.323167515 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.326780167 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.335632741 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322038616 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324066836 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.327925999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.327791511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.514074147 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.323105064 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.323411472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32753749 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419337001 seconds)
  done (took 43.049606337 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.355760677 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.335453167 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.45452018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350957897 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.356132653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527509288 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388166114 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.332512786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.519678716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376576458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.024300103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.352733125 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.333103488 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.552111074 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34673903 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.529327857 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600991366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.01986882 seconds)
  done (took 30.995146331 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.826504615 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.347784577 seconds)
  done (took 9.413958739 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.325250543 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.339319486 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.365935429 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.352998296 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.367327638 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.393882252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.347844214 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.341469538 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.335140484 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.384148103 seconds)
  done (took 64.797679271 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349663648 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.334358184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.333339482 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.332533243 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.325488371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.337451817 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.332343681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.33035259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.309364799 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473912618 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.354215732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.339690518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350654739 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.334115647 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331588313 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.371012187 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.506876309 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.350570484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.332784095 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.341117119 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334464585 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.478991041 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.3792871 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332862726 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.469994158 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.339643439 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.338467132 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.342177046 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490596183 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.349242066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334477849 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.333547499 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.334135399 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.912689157 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.793684082 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.34470349 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355183238 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.343996254 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.333947479 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.538403025 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352265238 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340145561 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.325750287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.773728086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.491326453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453766977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.706042399 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33765557 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333743769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.40177334 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.335504981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.337134571 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365777864 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.114738844 seconds)
  done (took 112.46457956 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33413318 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.815795138 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499056395 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.349994002 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.228812489 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17202492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340203913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645845458 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378392631 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326260439 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.676561056 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868667027 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340487324 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.371237661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.978000389 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.351660257 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327789802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.143727934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.347818402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.326355443 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7593028 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34449487 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327370722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.643896039 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.365695997 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823747234 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.922143053 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.852825911 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342567174 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.326076797 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834018608 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351876237 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.407536319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327560579 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.622543571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.734930094 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718779026 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.349617179 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368590659 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326956471 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.35614692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837905943 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738330228 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.349653686 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344850653 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838084057 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.349416182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334008245 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331513075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538571803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.296445436 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329998319 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.916964615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32940101 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.597440363 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390933827 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351431669 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.865034168 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346297769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.509131192 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358663 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327772069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33674011 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334666091 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331126674 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720018865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405888087 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.335774069 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717245494 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851526763 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.352943535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889135946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.231782411 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.349688823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.383259931 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33150145 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.071715413 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865328999 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.362076509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32969356 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.698250164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347203461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.664287761 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345279867 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330742415 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768922197 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.354463249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.34980574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.346967933 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.332812379 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.123616303 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331159254 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.626423749 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.361177765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331776318 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.331808411 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.384381393 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.332578737 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.347102064 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.338511986 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890405858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.354258034 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.645528752 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349232665 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332166536 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338478683 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.333059997 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.332769038 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562354385 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.854062994 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.339436595 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331708601 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.338700705 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.340656462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.590389696 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.339322698 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.665917771 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.349255114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333702969 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.352195156 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.210142754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350001807 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332362476 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.350143784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.191744039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560874721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357628148 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.333122055 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334756646 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351286271 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.883173998 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339514672 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.404361366 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335910766 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070648793 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367380198 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.361362256 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.962236908 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341506098 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334013621 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.350582984 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334875457 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652137595 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624973052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86795315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.350444902 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.334500128 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052905411 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.352372868 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477674663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354627145 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.308892228 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535637325 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.355433563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.335646772 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.887438066 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.333411033 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557230724 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334734845 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661573691 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870532845 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.356440671 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336829586 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.085126992 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038690083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.935405788 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.338419493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.679965114 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.351420289 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.794875052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.339343542 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337683342 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.93450288 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.338382391 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346095928 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.336788294 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.338266422 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395094048 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516953381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.165333599 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335820865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830121854 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.416901014 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337161394 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340435269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341429587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.69142036 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364906362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.338277985 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.343084195 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.336316776 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339779063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.837365079 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.308559596 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.336719866 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495230978 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004220192 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.359326101 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340916775 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.001025397 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.694893406 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874052852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.382191103 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.674802457 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.363163497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380005824 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.177824084 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415887524 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87981702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.358156976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.340299864 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.970066242 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.355568701 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.407969394 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.339625166 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.341841509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903933784 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.353506183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.343573432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.882797897 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343050209 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610206754 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.340887727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.373957666 seconds)
  done (took 1116.16482129 seconds)
done (took 1392.144373651 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.340695645 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.345812862 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.325757803 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345080545 seconds)
  done (took 26.613897015 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351126052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35019884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.348718651 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.350396755 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.353602046 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.347380011 seconds)
  done (took 9.360869151 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.43810359 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.346379401 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34592098 seconds)
  done (took 19.388001932 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.585221701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.703456172 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.747057302 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.738006813 seconds)
  done (took 11.030878777 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.351985352 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.35038564 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.351658833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.354549578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355054383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355144802 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.355894506 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351099764 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355116818 seconds)
  done (took 13.437716539 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.609407384 seconds)
done (took 86.696010664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.334712128 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.780017048 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.72764192 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.317385641 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.383284847 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.357882878 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.021759346 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.340690608 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.415676787 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.391923657 seconds)
    (11/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.386141213 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.613246993 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.367539204 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.127642802 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.390140812 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.333065446 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.36976873 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3514465 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.330243247 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.033280654 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360862862 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356780404 seconds)
    (23/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.285620972 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400956964 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.193943749 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.342142353 seconds)
    (27/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.194873108 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.075828095 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.849435182 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.846121636 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.919267728 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.409105017 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.47664604 seconds)
    (34/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.376725348 seconds)
    (35/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.9049512 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.941696464 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.489709254 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.329485991 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.321352764 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.338137578 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.842072863 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.452955968 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.642981267 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.624690366 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.929543375 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.934608439 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.941775922 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230495331 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.323624922 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.345055914 seconds)
    (51/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.559280045 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.059300106 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.666746868 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.75583588 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.031453978 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.41604823 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.329141102 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.359993257 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.615031094 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.732429313 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.401614342 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406675403 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.545439569 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.876708204 seconds)
    (65/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.347693751 seconds)
    (66/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.496590384 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.377730578 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.31054771 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.444206306 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.350918424 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.628146802 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.306638517 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.690628975 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.4310831 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.005474282 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.444687439 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.366643772 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366840805 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.504798328 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.363935288 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.764662239 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.757506267 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.608119655 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.509615741 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.361974217 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.038322749 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.657663404 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.511165291 seconds)
    (89/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.541574137 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.909635378 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.803105394 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.24342687 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.938263992 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.100753744 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.59458017 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.260101866 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.650120335 seconds)
    (98/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.88943697 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.954724752 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.34792408 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.438756099 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.450876684 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.349953803 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.305817571 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.919247972 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.393524598 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.023409358 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.842792543 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.412012508 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.74911581 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.78106352 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.570448345 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.3550262 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.325148046 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334779589 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.471221125 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.352786434 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.384591539 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.434131959 seconds)
    (120/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.440850609 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.044866687 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348747914 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.730620827 seconds)
    (124/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.329540764 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.722464466 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.812689743 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.431884362 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.43731326 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.879377697 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.375484106 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.37987471 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.377370359 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.356248812 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.453191044 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.607018924 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.634677772 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.666814792 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.220268803 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.618931451 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.865141801 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457088576 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.99918197 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338973129 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.543325981 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.369969734 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.485886861 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.338483501 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.17339033 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378113658 seconds)
    (150/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.090498447 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.645937041 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.428847415 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.197179319 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.376465227 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.49493246 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.295962605 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.357093754 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.434763678 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.546709054 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.490936952 seconds)
    (161/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.07874218 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.932235995 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.372231032 seconds)
    (164/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.232998241 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.378942114 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.078419503 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.813294578 seconds)
    (168/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432793885 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.403224427 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.589339009 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.288904847 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.47647751 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.786357109 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.374975118 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.346140003 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.431589196 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.763445362 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.35910456 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.375712066 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.024123345 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.422848475 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.360066443 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.3793826 seconds)
    (184/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.81270184 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455176476 seconds)
    (186/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.35826235 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.472056286 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.400563812 seconds)
    (189/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.467540684 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.060542163 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.359160462 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.386370509 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.373455123 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.167002737 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.362635772 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.418477832 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385624384 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.444944879 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.188817548 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.353629117 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.423859091 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.302328971 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.558615812 seconds)
    (204/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.774160822 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.016910682 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.767747535 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.40239153 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.707678779 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.446238153 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.404949918 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.359547281 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.015500865 seconds)
    (213/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.548044645 seconds)
    (214/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.335080783 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.459715374 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.447532548 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.392969691 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.462593873 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.366082129 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.394902487 seconds)
    (221/309) benchmarking ("sort", Float32, false)...
    done (took 5.422429294 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.236005303 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.811022555 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.000876434 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.898029217 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.56647899 seconds)
    (227/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.496734486 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.348211862 seconds)
    (229/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.03201452 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.364450269 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.791431604 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.960550036 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.911715373 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.236997289 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.394169593 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.789905267 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.351508008 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.421713579 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.365156096 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.867581286 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59150944 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.507446354 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.364187531 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.501224032 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.105349232 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.965988253 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.080769785 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.407046664 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.36994692 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.739704081 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.406855401 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.038371939 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.383476949 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.899829897 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.273193249 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.841539056 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.890707666 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.356345976 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746855575 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392574906 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.474746248 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.15092967 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.365734978 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.900984504 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.680116543 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.822171849 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.382274427 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.771723857 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840456492 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.384678874 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.437562175 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.36613169 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.404783425 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.378663378 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.40261739 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.448129591 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.016532165 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.130750591 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.441860586 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.475336773 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.011892029 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.397986349 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.387774401 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.472961495 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.787513534 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.695498431 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.185039558 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.352909196 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.610594267 seconds)
    (290/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.204386925 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.383837234 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.241987523 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.476499256 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.408720781 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.262106354 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.360608125 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.834448263 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.823363817 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.468467949 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.352124455 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.809951122 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.434199408 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.388683857 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.818377815 seconds)
    (305/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.445483849 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.367702792 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.405871989 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.179110976 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.176429724 seconds)
  done (took 944.952415831 seconds)
done (took 946.210430135 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.400371028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394909523 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.378136089 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.398372094 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.491807139 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.405866236 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.389227864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.380035119 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.425814009 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.428895666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.378695194 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.401685955 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.381591143 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.378409177 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37785446 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393898483 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.511592055 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375379028 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.3958301 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.389268378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.395741658 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.378398944 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.427937627 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.404754847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.384650275 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.382840042 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.38509832 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.398874577 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.492077526 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.38262309 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.382915104 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.393106928 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.510581213 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.372951349 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.374378879 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.39850008 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.391012916 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.389808052 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382967685 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.41372961 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.958295498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.391681436 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.381850001 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.381512667 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.381426879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.384412787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385693431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388397613 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395399565 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394744465 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.947158947 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406286149 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.384748822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.380925343 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.393218258 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382678627 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.385269679 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398338809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.400105105 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397527336 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.499495619 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38157812 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.383807046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.399665138 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.39103389 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.985190188 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.389259614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388095895 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.961957167 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.396823712 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.987778182 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.401200748 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.38388526 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.396675755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41295035 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.514434579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.371664603 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.38221878 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.391166719 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.382122322 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.393187766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397217698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38787573 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.383946895 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398307146 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.408707903 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.393975802 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.384910489 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.392906889 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.403245373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.392402499 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.395609044 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385307721 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.379171106 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.393845157 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.389169353 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.386941852 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.387697732 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.388561 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.396132114 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.962216421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411893783 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.381903982 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.381572265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.38291791 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.401122048 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.962776938 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.397764299 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.40670838 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.432650872 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.386377361 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.506325485 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384512262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403082684 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.395510312 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.390058227 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38168618 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.505814926 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.950027008 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.412379058 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.388684507 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.385830093 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401981367 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.388551505 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.383570406 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.521209487 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.382642818 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401455619 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.510222236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.398242014 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.42017913 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.384915178 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.390034723 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.413576225 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403770636 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.418585782 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.389783412 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402746358 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.402185441 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.383605336 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.399027491 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.397143436 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.389304829 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.393678836 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.380552567 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.412710574 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399857683 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401362888 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.407360106 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.507647585 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.385722956 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.508776436 seconds)
done (took 234.955166509 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.448457483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.384961724 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462509814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.384688947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.487165181 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.482847858 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.381326141 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.383752845 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.381785024 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.765892963 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.382576357 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.382280835 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.384011798 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.379447883 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.466657753 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.384719377 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.382327286 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.7285869 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.384860015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.457783483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.384880618 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.382219106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.386546912 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.7665544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.378636927 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.381263034 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456950233 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.386413033 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.758008813 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.380754999 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.378267051 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.787278796 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.475865998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.402108062 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.394467466 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393001502 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.490321672 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.402434231 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.470392557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.470916789 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.47046992 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.423443901 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.386574762 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.380702001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.387095388 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.386432122 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.383115362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.414037319 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.383403522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.385248718 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731071054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396789117 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.385209202 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.385657382 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.386094796 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.415509829 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.380146417 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.385141409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.477788367 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.388507581 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448667871 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.769650134 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.768451308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.38702519 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.386513995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.387512317 seconds)
  done (took 151.991354064 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.454103009 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.460449913 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.507707198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402836488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.440352174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.514301037 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401632343 seconds)
  done (took 11.471756138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.393813514 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389306862 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.437423445 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.438287668 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.38964958 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53679343 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389762069 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.401061043 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.386527455 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442069267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390651104 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389654446 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.39536979 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.384637631 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438417201 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.396351958 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.502700127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.390148673 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387854889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.54212978 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386945616 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.396464171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.442138098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.401486829 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.389596093 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.395036074 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.9563132 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39080749 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386200102 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.390251853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388561805 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.426316199 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391315141 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.392752574 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3889385 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506678048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.389951337 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.389776084 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392153973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.388675968 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.391830319 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.392055769 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.393303323 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.388531858 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.3923233 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.413736382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391684694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.391813666 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.392171153 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391477463 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.442976772 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392721196 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.389809516 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.388775568 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.447352157 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398040587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392965938 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.388984143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392003531 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388575958 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.543695969 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.44029158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.392156441 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441225725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39298102 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393224637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.392188914 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.392897589 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447485183 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39200538 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.441205969 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.390405025 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54721735 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.415452954 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394594764 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.39542521 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.396442261 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394095881 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.387129886 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.398465776 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.389786303 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.395363254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.398706425 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390727531 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390390005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.496933487 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502473056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.390951501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.407630602 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.399635806 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.39133735 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448035525 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.391406457 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.391769921 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445877732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.509024531 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.446414851 seconds)
  done (took 158.844247275 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.396719562 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.402135568 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.396101948 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.411326805 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.395767735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.39554955 seconds)
  done (took 9.693546384 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.395852477 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.398030452 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39554475 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.396117783 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.395507702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.396473044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.392681457 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399108229 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.39909934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.393779509 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.395444893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.394518441 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393541563 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.392230322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.393920975 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.393071785 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.39547212 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391367618 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.393580052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393729177 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.496821575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.392929255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395147796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395506049 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.398869852 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.39289826 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403323332 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.396675195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396841527 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.404683279 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.41207291 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.397875907 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.39532325 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.406107464 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397375675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.398737832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402285787 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.397601127 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396853595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.39559092 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39677225 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399262152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.395956615 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.401061485 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.399656459 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.404663005 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.402269403 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.406349096 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.398664449 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.40089734 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.400668548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.399289006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.398124452 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.398020576 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401098512 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415849482 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403944495 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.400552935 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.399713258 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.401054788 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.402622039 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.400997487 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403009207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.404438473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.395721717 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.4013291 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.402001083 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404472538 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399991913 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.400404513 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.402027065 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.398293428 seconds)
  done (took 103.111989226 seconds)
done (took 436.396427634 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.528706198 seconds)
  done (took 7.829494589 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.586305206 seconds)
  done (took 7.891231178 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.898558909 seconds)
  done (took 24.206212487 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.415883872 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.446629404 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.400664228 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.3953743 seconds)
  done (took 26.961208311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.680435324 seconds)
  done (took 7.9832598 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.389340614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.407463274 seconds)
  done (took 14.102352498 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.610686545 seconds)
  done (took 7.91342485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.068860767 seconds)
  done (took 8.375733311 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.397859458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408225739 seconds)
  done (took 14.380019772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.371266234 seconds)
  done (took 7.67505497 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.615958145 seconds)
  done (took 8.920689388 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.396156233 seconds)
  done (took 7.700510396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.463645934 seconds)
  done (took 7.768635941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.323651369 seconds)
  done (took 10.626424907 seconds)
done (took 163.633753011 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.39019552 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.392272745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.392736369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.391012327 seconds)
  done (took 26.869336938 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.89960628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.433234809 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.438368308 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.445968255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440153377 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.435470639 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.426428642 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430701203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.447471983 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.439845682 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438317194 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.439178238 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.435730235 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.428253571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440483657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.438975105 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.448729431 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.438468089 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.429228958 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.439536851 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.403561885 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.448266302 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442003452 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.405144149 seconds)
  done (took 36.219488635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.921475149 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.473072702 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.558462128 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.454828078 seconds)
  done (took 7.712147412 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.452414437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459962307 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.469684276 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503878537 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.540554946 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.46664727 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.432278392 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.427038995 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.412205478 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.456246627 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.531091332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.473922121 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.562602872 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.40435771 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.592697744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.404492425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.404047319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.456980588 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.508949219 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.523743554 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.40650075 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.457289872 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461270239 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.473597012 seconds)
  done (took 36.589667206 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.418576802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.411990654 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.405179717 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.40401644 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.425922639 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.40618635 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.406639907 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.407425799 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.404539931 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.411942641 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.403907529 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.417853929 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.406611818 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.40517251 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.413333488 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.40879881 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.412608442 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.406410601 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.40443186 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.409841486 seconds)
  done (took 29.498301103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.396476968 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.251287142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.750099184 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.657162871 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.401679361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.392514383 seconds)
  done (took 28.156647969 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.481957316 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.657235225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.40684327 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.822562182 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.923906611 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.421844964 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.405542024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.685409833 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.050466067 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.042924746 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.472646603 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.483674234 seconds)
  done (took 21.165955561 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.414832595 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.397568698 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.413005203 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.418639415 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.47090448 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.428263943 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.415228044 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.399428861 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.469774094 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.488523444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.429193661 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.471578691 seconds)
  done (took 38.52823309 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486520118 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.455360994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.554458414 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303434206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128520259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610069106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.313016421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853364378 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402457919 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677463817 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411421755 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492913611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661047003 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416157774 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405340163 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.515546617 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648408668 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962816125 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406607094 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.756915431 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4310955 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418698402 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857124711 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.434741073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61616712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38868381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.666252829 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179422112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728496935 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41752043 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413740715 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40684452 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681056063 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134077882 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521175501 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416694024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.299210094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.956486704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.383487718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.821929661 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419143402 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407436796 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416882048 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404306123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338808934 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417153887 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864604354 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.404500982 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.114035887 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403309299 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411823056 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500494049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.409267441 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.39662027 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521323352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406659693 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.399762521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410165842 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980120893 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315653066 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418055196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.340972082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.910217556 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822485153 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097322242 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.523286107 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.411365791 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412731119 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343367877 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.745785732 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426482502 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54604945 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.427231439 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070298056 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167182295 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419963016 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339376319 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033857553 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415476953 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.34368459 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631695173 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181949317 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350645805 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.350305823 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344411356 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237757867 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418190205 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.963285173 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418056416 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857229117 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.41520786 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426485006 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432394286 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636980797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.284362106 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409275798 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.405268905 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519280243 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42543711 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86073636 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338997845 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.407404983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669118596 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.617105631 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423716986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.532850174 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646069891 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423246925 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424389903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410630767 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.4208789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.051704925 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433353504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195216226 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421865189 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187170198 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275655997 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418806391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.514120728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422874926 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677408949 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.290584659 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574307376 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481411211 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414495883 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411091522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.869695332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263716131 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.30911863 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.409177833 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417461094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.422576534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.412209037 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372833058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.403223942 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42828749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.183365445 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637996929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410074745 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706398297 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346523534 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546565794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423164969 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.631024957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.726736467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.420775998 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6755385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413745855 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440597772 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425175 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431573467 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508845663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436819842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.423031059 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672173548 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.413728569 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.417846274 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899550293 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193124164 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417720355 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.414219068 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300664782 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054133261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396602175 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415343336 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307032683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.428383451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482748548 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420793973 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.42417579 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.491735895 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419080675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.418995945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.412964874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649448142 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42294117 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.875257019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496233666 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.63592437 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073275878 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445327814 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.351480227 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.12211075 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.108118734 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41534673 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604433816 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415915966 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421237044 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426776492 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.102364338 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071599442 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432218972 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.802220126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.423497169 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427722856 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.420233834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412348136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.44818435 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378692863 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419360651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.444926252 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560902485 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.426811865 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348479544 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.929047109 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417987602 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412261532 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.197554066 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449202563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778763579 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9259797 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674902183 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.266650082 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427495039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.009454066 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449480277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.420254796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43135955 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431787926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.424599281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419807366 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.425135426 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.901936775 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.867918854 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980376644 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213161431 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034432891 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511234422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.427386347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.311427826 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.870874262 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348968006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073434266 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631638282 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895562896 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371148549 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638674204 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.765047771 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28600677 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424042398 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645841108 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437906702 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.41791583 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431432982 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630634074 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449579797 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419380136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349152307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.695280784 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673336816 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426514744 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500554282 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873582838 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430495019 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.197746152 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.414544422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.922518092 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634197135 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053221548 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812725744 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421752146 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423285962 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921002279 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424594083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946216888 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099683188 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.435061378 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.638781778 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357150314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.427002284 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430239519 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.412290729 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.950010987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.416383796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.672437812 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426314926 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354609175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425223265 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02102185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.293421049 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.424507852 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420920591 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295387082 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428846183 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748611711 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.437577499 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.438933228 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435741372 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.353464947 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354177015 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.110614158 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425288457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388893849 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997878703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.870648722 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517997139 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455138431 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274378395 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.676663692 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.434168228 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085732871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665563609 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.3838206 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442895895 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.521604769 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433343299 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.405839325 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303251688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658064673 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308328213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644255709 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.609871479 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.323174184 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.420259756 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633335232 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302867831 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424684835 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701699471 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.148383515 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.445748932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205245514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460046582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42750541 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444245823 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.920672422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426048412 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491387823 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432030137 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431838374 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.433451539 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614691254 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425384518 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428496957 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.436251939 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516013152 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428463475 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.444510551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189978562 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096027745 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237526696 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100116701 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458007426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425890639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421694601 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35466819 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566595447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95249533 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695126659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545501135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003886873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448024474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426290728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432662789 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641231674 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699696123 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300862722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440300999 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092388835 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.320619056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435427176 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.639570312 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010526175 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087036831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551982667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423541026 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901208875 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695892425 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.514975322 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42304958 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022219808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.451324978 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.942295024 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.457009172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438523968 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578404183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440514927 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155528271 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459498521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.584567333 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.198181283 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942535281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688551026 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.025975032 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.440183325 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094934483 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247802008 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692728102 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49618707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437843346 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.552093479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570399283 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.428004814 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.322190048 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426431035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274385921 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.136194578 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436219305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098938309 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715138626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.423504556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.428435998 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447242646 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.439358778 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655489745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256250016 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658001455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43818273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433774219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.001877541 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093318533 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460288075 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36632543 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428168068 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700898655 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686066254 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451108503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880610835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.142815131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075383998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.408866815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454116208 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440211879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236566441 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09917582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.479115198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013549518 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093523329 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428482951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70858708 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.43864428 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432422109 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728063773 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.437567017 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446917641 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444852818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.102744256 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.333288703 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.434756046 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.880605752 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.370690207 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.658694088 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154552498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364675587 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429922467 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.633163496 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432284836 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549996807 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43888167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.437291618 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430166419 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.190585015 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722932109 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.433631982 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.41400897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.44597902 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.452778229 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442770194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689348406 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435098987 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.106008904 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.782556451 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689242773 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435861428 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.415512588 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.433786435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429813086 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157150357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408201733 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.115131799 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100888169 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.451095954 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.444958349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436469706 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.65210978 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646088043 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450137681 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44817674 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436169542 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450625734 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.331763089 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207670165 seconds)
  done (took 1643.088197538 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455589895 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.479998472 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.447492454 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.445320305 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492634839 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506083606 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.513549443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.51544511 seconds)
  done (took 53.19675729 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.451500357 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.594825877 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.471006904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.446992546 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.44756323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.449242709 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.964314627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.456973685 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.439010635 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.441213407 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.436353374 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.437722134 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.17407311 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.446715389 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.435929544 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.424252943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.439892005 seconds)
  done (took 67.304413667 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.444247988 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.022757023 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.478882242 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.436826329 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.160944895 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.450439229 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.041653502 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.437996665 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.429464524 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.506383001 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.088832087 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.487562412 seconds)
  done (took 82.331290001 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.441470791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.442795957 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.443262411 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.440946336 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.442815139 seconds)
  done (took 8.554186713 seconds)
done (took 2080.518180332 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.766672057 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.245350277 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.170223623 seconds)
  done (took 5.759200118 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.583895598 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.634025403 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.796541958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.764567031 seconds)
  done (took 8.12521495 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.7163921 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.822304117 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.628847121 seconds)
  done (took 6.512707209 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.05168491 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.455466387 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.58551438 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.435479686 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.438540647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.439474216 seconds)
  done (took 20.660445071 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.439821148 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.447951651 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.441327311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.443641475 seconds)
  done (took 7.118920335 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.416719322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14751145 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.41631503 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.434431992 seconds)
  done (took 18.759431658 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.189255933 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.210637794 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.187159904 seconds)
  done (took 7.933355666 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.436778242 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.305736844 seconds)
  done (took 10.088056062 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.747054289 seconds)
  done (took 3.092325923 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.573706671 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.772395298 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.609165419 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.574822889 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.633664141 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.944683311 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.374741967 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.882035736 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.555710335 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.958415284 seconds)
  done (took 31.228589409 seconds)
done (took 133.479166895 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.703299043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829657327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.635330423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.673632103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.669901117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635863626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.734973681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.644269255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.185379683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.168143389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.714113253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.668559337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898669535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8341072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899810756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454903003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.712864694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.73774153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362641543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.441052257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.733930188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.312582408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.548404136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.333183766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670825337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.591019736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.892582566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452913346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445517206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.917070591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.590928932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439770315 seconds)
  done (took 200.879626649 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.443153921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455225469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438068684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.453243675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.437495186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438309135 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.474853198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.437964056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.454677617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447783889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437984198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.438072326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457468295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453788792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438805543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439256151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.439144116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446837586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.45199488 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437015545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.441567326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.456110219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.470903516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438907308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.446681467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43857882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.438850236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437925667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.456171879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456137674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438657765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439237277 seconds)
  done (took 207.630556473 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.443175098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.458525052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.458707609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.458673787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.457925494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.441949255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.458255607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.464911569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443293069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437797648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.440039115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.43924057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.441726304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.448376008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.459124791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.441579843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.457933079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.440354752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.450172429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440372325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442112581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.457024565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.469613616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.441495989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.440712874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.458990465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439996578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440546756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.439969295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.451519285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441568065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.455694936 seconds)
  done (took 207.713398332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63996492 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.454180114 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.461060514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.390751114 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.454116111 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.450919571 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.446081051 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.648964134 seconds)
  done (took 15.298050438 seconds)
done (took 632.865859151 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.983189616 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.684615406 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.673210037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.474187129 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.315625498 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.489557629 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.471448106 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.667708423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.438863948 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.67412205 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.804769409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.485381162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.953966398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.468855493 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.748877618 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580027568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.407718952 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518779206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.809416323 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.070115466 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.746589704 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.018866391 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671586481 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.426803159 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.974945743 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.022793547 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.350290247 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384184583 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.486347327 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815131987 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.390939518 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.625473014 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.543894253 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.540078707 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593233002 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.57680412 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.599501989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535579586 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.687500152 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.780982604 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.062633216 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22245021 seconds)
  done (took 99.131462468 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.435290996 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.437098677 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43501751 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.436130609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.437838696 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437252187 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.435970555 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.436915678 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.437949533 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.43667633 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.436691471 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438929265 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.438321822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.437080968 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.438253881 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.436194678 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.439368739 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.440999592 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.437310303 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.436634101 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.436723009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.436893736 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.437575388 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.436947041 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.438245803 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.438096403 seconds)
  done (took 38.726983402 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.455905863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.730256072 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.900662302 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459504269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.45504086 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.461884777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547743907 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.458530116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.460003629 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.460556348 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.644363218 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457999203 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498196667 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934220355 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.456581298 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.457679721 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458326883 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.457919239 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.736892408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464267993 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.571059527 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.457820231 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.549661878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.465428009 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.483340261 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459010762 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.462438449 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987929045 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.475616884 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.639439768 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.372175042 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.54567137 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941552279 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.931091245 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.374243085 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.461182274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.458638488 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.645908757 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.460382781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.459563453 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.548342664 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.456830671 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.91271614 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106210995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.477249561 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.460801897 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.011724045 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.661766107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.749646088 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468977234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939757156 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.460495177 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.462551848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.462505728 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.750935526 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.469765633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.461635992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.024071516 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.48236887 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.550303213 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458708177 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.458782326 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.744328097 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.458774318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.733503307 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.460651408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.469973794 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.480632649 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.921198576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460896074 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.130426827 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478596746 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.462039985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.642639627 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.734007177 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046303638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.481711483 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.752380152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957441081 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.566085051 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.462763286 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.982450729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.569750375 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.463903817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.46434071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.464564669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.464044528 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507430087 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.550745085 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056324363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139204143 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053162772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.577927754 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476616566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.465106079 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.038215291 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.486111385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.463496873 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.926525988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132924249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.482204656 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46980095 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.137777624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.482345074 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.555476616 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.468620406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.942307393 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.465039651 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.509710317 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.465281978 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.471793819 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.486201195 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.55496806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.468600908 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.464260596 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.103601184 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.674739391 seconds)
  done (took 192.285307157 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.462152431 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.454931735 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.457032197 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.455872069 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.456405659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.464233833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.457540778 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.457188813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.463510578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.465926422 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.457220226 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.458115377 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.460827698 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459665798 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.466736572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.466579936 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.068405976 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.459144481 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.458885608 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.456985131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.283330518 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.460765503 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.458167329 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455913034 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.457839347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.459598399 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.474094086 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.460352042 seconds)
  done (took 155.685520467 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.466543362 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.124776066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.482542744 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616174109 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.48625508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.464939106 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.616055817 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.532140078 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.487061882 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.464857314 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.464831933 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.810226043 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.467030303 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.055102009 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68770248 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.640147567 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051881154 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.482476118 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.466786575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46500673 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.619431134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.46916236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.832013036 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.117764397 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.484422941 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.146903134 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450677822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.469415939 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.466281674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130642542 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.480772454 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.833573395 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.553420592 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.535294334 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.16957825 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.076695101 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.068927647 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.639094037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.468935146 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.464769753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.466425351 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452514727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.114323681 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.48509113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.468716024 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103334086 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486918917 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.470639062 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.477439271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.466859815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.540298651 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.558620897 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.840528645 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.116566631 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.571996946 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.487373172 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.622772018 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.864305299 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.469017742 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.057593766 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.451192356 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.120281424 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487488669 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.454328741 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.471291337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.47400929 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.640710579 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.623139566 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060563285 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485862489 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.057629748 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.654800074 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.46803977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.470973026 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.471951706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.12437067 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076391224 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656218574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.620961808 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.693596734 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.457074368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.470591753 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.455273207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.560774599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.467530349 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.158373028 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080440522 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488524952 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.472407224 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.473818765 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.471238598 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.67612982 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.172288806 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.579181828 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049110641 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857507472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.840238565 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.475996301 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.541469542 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492745324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.843213569 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475020158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.540050562 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.932044517 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.841279365 seconds)
  done (took 176.73925451 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.739227798 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.8580498 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.571666151 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.614186383 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.117357808 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.083983067 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.811018675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.629761251 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.596015929 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.75527884 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.74482859 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56166407 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664527199 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.556554243 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.255563539 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.567452266 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593306868 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631394055 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598345528 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.577846242 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.186860434 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.774136697 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.661591755 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.539452312 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.574768603 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35260017 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.086418705 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.057559534 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.665304795 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.944829523 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.017265507 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.685370249 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.52241095 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250254514 seconds)
  done (took 71.221494727 seconds)
done (took 735.141627321 seconds)
SAVING RESULT...
DONE!
