cset: moving following pidspec: 5155
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298882243 seconds)
loading group "string"... done (took 0.584081645 seconds)
loading group "linalg"... done (took 7.12452831 seconds)
loading group "parallel"... done (took 0.168968549 seconds)
loading group "find"... done (took 1.118218918 seconds)
loading group "tuple"... done (took 1.735987554 seconds)
loading group "dates"... done (took 1.219111088 seconds)
loading group "micro"... done (took 0.224543349 seconds)
loading group "io"... done (took 1.021950937 seconds)
loading group "scalar"... done (took 38.792697239 seconds)
loading group "sparse"... done (took 12.807247814 seconds)
loading group "broadcast"... done (took 0.987830693 seconds)
loading group "union"... done (took 13.219174013 seconds)
loading group "simd"... done (took 4.479918372 seconds)
loading group "random"... done (took 9.044519588 seconds)
loading group "problem"... done (took 1.943879973 seconds)
loading group "array"... done (took 21.608300769 seconds)
loading group "misc"... done (took 1.980130602 seconds)
loading group "sort"... done (took 3.259296777 seconds)
loading group "collection"... done (took 18.155268716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540596499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141986233 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11741756 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139442683 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186984859 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133470225 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146427985 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085594841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.068977998 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170740992 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140813076 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475025123 seconds)
done (took 5.217349809 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.266134849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088032733 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09715086 seconds)
  done (took 0.998653686 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066830668 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129288387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081990712 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068320489 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067292381 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081879302 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067963393 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066432369 seconds)
  done (took 1.381332935 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077134656 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06960329 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085994319 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068106144 seconds)
  done (took 1.11916179 seconds)
done (took 4.660589629 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895017043 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235964024 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189064632 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451618575 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147768706 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188516115 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670856904 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331492077 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210466174 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100504393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104974403 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376729255 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106867704 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667973406 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078533231 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106922071 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161986748 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.446428668 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085249447 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08337084 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104754736 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142912387 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103749834 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077794368 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167839876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070214414 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146999327 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096242092 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069184974 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243838734 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190541902 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690700892 seconds)
  done (took 10.603279092 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101990751 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118168539 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069338732 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140357996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.117405502 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071821953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072165314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084008015 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091661139 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159756012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115394591 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105960612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083176287 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070380973 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102133298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213348628 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108719809 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085627715 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088212851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076001198 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122589073 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082865824 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094894288 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07875566 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154051802 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196388324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112031944 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112365741 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071474264 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081693302 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133460131 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141805602 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066501758 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082678192 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139502385 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111896505 seconds)
  done (took 4.690272799 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.022589679 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160876953 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092091783 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152012186 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086326867 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109239688 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084645563 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100526872 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245859678 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.070562362 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111519614 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.471380378 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12835326 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101837623 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069188676 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08450153 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069435373 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.507853789 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14442834 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102263601 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102629456 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074072732 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086725626 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360086843 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069185463 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067608519 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085288001 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0607633 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144518846 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068202214 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.211021992 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088551859 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089016997 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118653344 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185252847 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097145178 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122911035 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082102884 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067597092 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1684272 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073696366 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082712794 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06684563 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10582099 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103561858 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120091119 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083468089 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068318323 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180754056 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067315108 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100164537 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.904991367 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067590636 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165107875 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079395419 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082633051 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266969051 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102853082 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066919432 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081776785 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276052736 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164982118 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068832795 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066620083 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083580271 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067993728 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367192645 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083974774 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.011712907 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069743951 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076736759 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085679946 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067285601 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089542557 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072970712 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101731876 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066931559 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068095734 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083439962 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066805011 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085248521 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085786844 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202777707 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084012629 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067624917 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065727681 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103047264 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111731784 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071334211 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065844576 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116906413 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069303236 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084354294 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103179454 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085329427 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10085335 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066111686 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084111776 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11495546 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085755766 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16010147 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066883666 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1116555 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07278934 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115239691 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095546616 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06900793 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153838141 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064996288 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0828839 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06815878 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065344964 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085255953 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069230841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098320256 seconds)
  done (took 21.369862032 seconds)
done (took 38.503886685 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.29256371 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093207021 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093618304 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075707805 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093488108 seconds)
  done (took 1.543522042 seconds)
done (took 2.408473631 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121012044 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117941341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064373683 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114645059 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064189125 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118505107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115905409 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081845688 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119017126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064923257 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113438904 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065449034 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064290245 seconds)
  done (took 2.119252725 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086011054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08571217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087673993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082742244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081001976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083575286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081391731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106562399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082233206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09006883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065511973 seconds)
  done (took 1.792594057 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084980635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084042472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087668579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082119742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080688379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082596328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080836478 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1045227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081328293 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091350879 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066073198 seconds)
  done (took 1.786873977 seconds)
done (took 6.553624152 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080469419 seconds)
  done (took 0.937071357 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.704871298 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.669454937 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084441003 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133462558 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221248889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153978237 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.443003816 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110117705 seconds)
  done (took 10.562669046 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103408048 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088128162 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072187146 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090436248 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071185122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09035194 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071235807 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069017451 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086863542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072242764 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088811654 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070794808 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086404557 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074484384 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070494769 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089203065 seconds)
  done (took 2.217369264 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093960792 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094586042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092249231 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077007256 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091272726 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074412025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094985209 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075773995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08906966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073819366 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093349568 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075881154 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089920673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06719564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092546419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.0779762 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089297933 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076791954 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0932386 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078099363 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093995235 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067089764 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090527133 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076925983 seconds)
  done (took 2.98936072 seconds)
done (took 17.569432969 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134110084 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077137222 seconds)
  done (took 1.07239807 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084825165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09949588 seconds)
  done (took 1.052800876 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085988746 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082958047 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090035798 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096180048 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067278336 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085030296 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103422784 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068472249 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066152991 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085350747 seconds)
  done (took 1.699745605 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072313756 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094355931 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072868247 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098457387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075896594 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082467761 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074203738 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085951088 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080565376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08105234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073043442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100820659 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072831218 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102680208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073019161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086930641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088957515 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070228385 seconds)
  done (took 2.355744564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07016512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067956761 seconds)
  done (took 1.009044176 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071172926 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064481025 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085109607 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066821112 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081805675 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064623224 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081539192 seconds)
  done (took 1.386117567 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407635789 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109895465 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242867584 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091291944 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105429467 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263345771 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085884322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071964063 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090235844 seconds)
  done (took 2.377919787 seconds)
done (took 11.820290251 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082158732 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086368823 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112473944 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421842158 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110368354 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068212469 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143970904 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.208753072 seconds)
done (took 2.108407331 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128065971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623752331 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405471101 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214436476 seconds)
  done (took 2.120847334 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.386384557 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094468482 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075869663 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069003514 seconds)
  done (took 1.504793668 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069201918 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070493734 seconds)
  done (took 1.020715806 seconds)
done (took 5.650860759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08770273 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084699247 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068318412 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064842728 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085437619 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065587836 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066502617 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.083603535 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065746387 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066722544 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084541221 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067119562 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.083225891 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069287877 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067083142 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081553561 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065849076 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066792418 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081737206 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065898796 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064608142 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08470759 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065135102 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064388139 seconds)
  done (took 2.669052673 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088262308 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084839239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073682312 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089169588 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072989661 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088901294 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073819456 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067640774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090696829 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069306584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088628924 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071349141 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087344412 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07262417 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085934134 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075346776 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089059338 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069239345 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069691216 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089165074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071875705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085557356 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071325295 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090120019 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071633287 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088881267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070622813 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08426139 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074071439 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087774665 seconds)
  done (took 3.276234731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074532397 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064879751 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083033634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072959254 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064440322 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085302691 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065361997 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082114443 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067472634 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065395452 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084961074 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065212539 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064972113 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084097707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067007161 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085017162 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08349068 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065931937 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083625604 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066364027 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067546888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083361031 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06514266 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082561609 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066528722 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064394074 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082267541 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065750687 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065316145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08277309 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068803449 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067894333 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083022953 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071684667 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085404795 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066046444 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068526821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082100665 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066179983 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064425649 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082388586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065172525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064181318 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088667608 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065443746 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084071532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065919477 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065311935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083199313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067760803 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081724725 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066514732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066223415 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083324909 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070203661 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064721203 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083313964 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06455522 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082227675 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066042995 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065062041 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081193679 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068095631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065409154 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097804096 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072109572 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080858604 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067648715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066408032 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084535315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067723902 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078484307 seconds)
  done (took 6.165156738 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119919666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092134765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085131885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067254281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080559163 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066384853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068291887 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083442235 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066764965 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088023772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0660219 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066208501 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084781286 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078091538 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083063007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067713624 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087009111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066081042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064979991 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086982044 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066286007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085682002 seconds)
  done (took 2.606556787 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188842465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088679774 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109954554 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093576332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068262422 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092923223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0701535 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089393909 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07096807 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089000487 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06895389 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089602242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069333478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087151816 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070263576 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086832058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071633092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086990956 seconds)
  done (took 2.476052553 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081055754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066417062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108570304 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066715053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086621591 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069920655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091226729 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075758131 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087653641 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067184184 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093704616 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069741101 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086567987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068358621 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068986106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085522799 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069463142 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084584368 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07694122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08998828 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073283377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093880638 seconds)
  done (took 2.647842662 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083703377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068900364 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10408754 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086385301 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064982429 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065452197 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091815636 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068560856 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090925183 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070015907 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067255403 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083888143 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072795613 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085605271 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072110414 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084724232 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07015696 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067049799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087790977 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063896864 seconds)
  done (took 2.437320173 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089950311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086191833 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069728666 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094481375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069670984 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086258319 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077153217 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086380401 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069339174 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110529607 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069415016 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086036093 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077976923 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091250679 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068911957 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094243384 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076243322 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094996869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068881976 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086613163 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.215682957 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069498921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093251761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069475319 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068205038 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087209557 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068784166 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092377353 seconds)
  done (took 3.310548572 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070322049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06732838 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08265956 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066730627 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064857589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083403445 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066429856 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064637849 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086249716 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065895727 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066627206 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085396207 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06819705 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084712142 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068879584 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067694825 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085092969 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066109362 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065193101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0830067 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06793695 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067755672 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08554252 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065364954 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081194239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069370482 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065697802 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082454602 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068601711 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064448946 seconds)
  done (took 3.069355661 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079784577 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091760031 seconds)
  done (took 1.065657823 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067817089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08135119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083773527 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071921027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089289502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068616612 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09211881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07233115 seconds)
  done (took 1.520082491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085160523 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077546609 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088450054 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078384535 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097012356 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08309643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156269979 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087343585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07409389 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08355395 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082259205 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066969118 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092495893 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068203345 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091305764 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074198039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065415269 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092150482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070612385 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085183027 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069488025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092888207 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070677732 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063992392 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087863223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075623459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096682406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068472721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088594265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07628926 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07264599 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081080389 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067574183 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085916879 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066482179 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094709901 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084134968 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086567708 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077998306 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067951358 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096027455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062751216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091388284 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074044478 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094554104 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069615625 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067988602 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081460364 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065123761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087155213 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064734391 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066941409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081398625 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074761602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088048649 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078555095 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068081974 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087844132 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070250008 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08906727 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074128271 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086646523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071258675 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067753042 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09562856 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071931663 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094105142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063945147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062385768 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084237235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07735991 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108048542 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073230418 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086455025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069930025 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064427293 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089753167 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068200389 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09125156 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07379892 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085970589 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073813 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09177246 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06817435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069492029 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093967155 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06598996 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087562316 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065762527 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100798129 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067443102 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065237944 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084002801 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077267489 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088791472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068098921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064395831 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093324867 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061705498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086812677 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069035666 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067318486 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096205418 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089921025 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074665927 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092578536 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076647276 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067569938 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089149786 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06509386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085917832 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067808307 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074188099 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080370192 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070660057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085109116 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06959503 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07483452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084326005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068327402 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092486831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073433096 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065727443 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084061178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070209925 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085709395 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072083852 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092841852 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067549804 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063500651 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081341129 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07118188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085431495 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072571629 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072371966 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089990973 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062936663 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084617863 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072704892 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093562215 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067895257 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067590667 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091376182 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06829151 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085401286 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073548541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086316467 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068199404 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072942106 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087151098 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063629263 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087930606 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071096049 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065670543 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090049556 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070859467 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087456734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069582838 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065946856 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091595372 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068357532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085392227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068291852 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065769717 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096312214 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069386716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08173853 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065557207 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092043738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066269399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067185321 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08570423 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070100796 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08605397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06702871 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067433144 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088182851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078103805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090821049 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068404004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091617421 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079133648 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08468326 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070916792 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067476691 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086992844 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0694522 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094635788 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073635446 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08973044 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071632638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064505963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091758503 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074354391 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084830053 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067078117 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066317807 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089906804 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072835887 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088756237 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068729747 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06519475 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087156727 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070584959 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08873869 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067733992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084716025 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073605159 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067444681 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092431507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068372955 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095870635 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07092718 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081520803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071411073 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065344716 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092140338 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063506108 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083326862 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067827059 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067620581 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085562854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070074531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079834364 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075596276 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073991501 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086710753 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067603225 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085396787 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075404211 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068302714 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090434032 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070861813 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09208101 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07742595 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085200962 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071063368 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076917103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087454663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062200967 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091325135 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066891084 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066134098 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085949943 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065984353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089219799 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076861097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093718562 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063289529 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069003609 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085223125 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066776831 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081467456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073216288 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07008479 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087119267 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073466117 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086952572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069396009 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070897245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086790084 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068146639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087845092 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071102422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086157325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071458241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06680756 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090300658 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067042674 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083446981 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071104874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068494727 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086531226 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073257724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085546702 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069176349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069837987 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087268726 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068084859 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08638794 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068285822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070874939 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087554655 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068267725 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088365007 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06468249 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074399482 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086101321 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074956677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085878693 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066050987 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072097177 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089070024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071889835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087319984 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069410579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086750504 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068879387 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069799467 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093403478 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065034289 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096315096 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075657607 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0858669 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071301915 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067017819 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088147802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067291895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085569791 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069959607 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067813113 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085928776 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071999716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087718619 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069298151 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068873303 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087899716 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068278386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086367209 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064326365 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066637461 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085739166 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068214922 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094618638 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069621164 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066908226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085733665 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068367853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084998288 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06572103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091648336 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077254764 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067073498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094117545 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066676306 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087848999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078317241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080434214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066776646 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065115675 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084299574 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07541795 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086438593 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077318225 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067329334 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08630681 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065401668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086128132 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068197159 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062570813 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084650032 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071798137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065639903 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086373459 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068611158 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08905381 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069692359 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095450619 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068324586 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068176963 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087859547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065384833 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084749506 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067827962 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070295977 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088650073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065173923 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064700822 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087243701 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068689702 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08779728 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06835674 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068409997 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093973559 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068107286 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089249006 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070989339 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083627651 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071271659 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067464326 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08726513 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06701881 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089099279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072053288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068828397 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095934307 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066768353 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08732822 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068702561 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065270927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086767314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067299661 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08625138 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067557719 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068517941 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094969025 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065877074 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089565343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06764003 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084680649 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07574515 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068148491 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089682377 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075217439 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087847377 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07031589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093250215 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072758107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070501639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088415576 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069513771 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09240844 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068028211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091933156 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069549822 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069494702 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088221626 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066338641 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067492072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087377648 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066935605 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092814693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069278698 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085367083 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068938224 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065522907 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087341425 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071166142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093008631 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071204661 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069885233 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082758737 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065292545 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08728198 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066716864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068468411 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089652226 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072922425 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088545765 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069254583 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067093743 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095704175 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07279406 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090570046 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066635448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069744602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088800405 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070061254 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087929368 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068013472 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087356508 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072871842 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069138076 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086399573 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075083188 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0898372 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06991466 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0688436 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087573374 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06818585 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081414863 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069850319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068868737 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091744567 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070264444 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087048156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078015332 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064689044 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087428611 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070410951 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086887132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072110982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082014057 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069812 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068526612 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088088098 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063249472 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085099354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066686867 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069208632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086224451 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06447292 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095627559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077243209 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069791344 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086214092 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066515375 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081893831 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063939658 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066695843 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088152989 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068977757 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096450089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06752074 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065984088 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082940502 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06832512 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089803451 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071219309 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064733863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083285303 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067091128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089079062 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073431353 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066148944 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087141448 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07084049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087849184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066978428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070549623 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084701801 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070808482 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099410997 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068783829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086920912 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074716262 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092502358 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070639476 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063251236 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087284802 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070746929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086422774 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07001045 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068980194 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102457215 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070907405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086435192 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06839193 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088051384 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068626101 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074988081 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088360015 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068594482 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090651192 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070639365 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094357583 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071956101 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074302411 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090374582 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070912349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086021124 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069249925 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066213682 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085941087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0688619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08757065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073056654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094870799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067979552 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096549379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077670814 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070270566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084887504 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067753458 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085886881 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064811818 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068673483 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085838771 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068038779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065740429 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087259004 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068489721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091975301 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069298186 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067547425 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087457035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062728221 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088726022 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070751162 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067755745 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085168431 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068143636 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086865543 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072320347 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070680199 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085050628 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069285983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088026778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069826037 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063087008 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093257067 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067321679 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088855574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06852006 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067594341 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088449793 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071200731 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092477113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069913225 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087765626 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077421209 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070326855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085005298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065156939 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091164089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067273294 seconds)
  done (took 47.129348706 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109271877 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085008044 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063105039 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08287867 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076063484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084254472 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064434655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063461567 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084452507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066709943 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082901675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064464666 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090332945 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086462468 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095024776 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06814464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083679358 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06464397 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082612943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065266687 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091487767 seconds)
  done (took 2.60060285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078695374 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091293124 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074040787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097268554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068612956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092461492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073786729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091413695 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0955366 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069812088 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095758104 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072492162 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087325285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069289556 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087090186 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073625348 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097302214 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069089193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091538497 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074427597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091487062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073961083 seconds)
  done (took 2.75574675 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070584207 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067504267 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087554627 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063935383 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067090523 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082367916 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071188259 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.091783129 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071250573 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065444032 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085544898 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066680086 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087074335 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06429115 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066732055 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084504729 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131629539 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071237882 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066712547 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089212826 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063167571 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088846409 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064221293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062675428 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086011599 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070984794 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087953648 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06629735 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0663629 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085996926 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06758973 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064267055 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088714675 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067546834 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085163519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067235983 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066773079 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087550797 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063496501 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083818853 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06943333 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063522916 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087214062 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069500883 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065141233 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08550452 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06841808 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086114645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063998355 seconds)
  done (took 4.64283979 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088627081 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132145217 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089948345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090108386 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103827899 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094825011 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07180992 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113530893 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064496325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087024038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082986969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105291101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08779148 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072916629 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0930437 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068754958 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067576747 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086725211 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069909084 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086948935 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071044157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093875043 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100650716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081966695 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090680742 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066365689 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085990856 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072159149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099873141 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072614783 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091898898 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072105712 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102651052 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069051755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086739829 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069645869 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10371654 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06731534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089913691 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064691491 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089336734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071542606 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093755581 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083988945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088043789 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073236364 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087841063 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064542329 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100001589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069135476 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095011333 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10038199 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072733996 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066811037 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093317864 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101809407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068322395 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064796777 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090536892 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098539057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066093076 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070463061 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101802294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088542261 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075481975 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101156323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072373922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091007972 seconds)
  done (took 6.822980355 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078904012 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093339426 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082900086 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101624289 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093123547 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075474317 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093096618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074708705 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093605377 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078320236 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093710117 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113904133 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070009332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096513751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073680712 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093977793 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073930806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094889613 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074226026 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094466802 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092792647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082556461 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094210219 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099475069 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104303725 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08897362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074009959 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093038573 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081372292 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094169675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105342567 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07345487 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093156552 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081390895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10511633 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09280885 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0667431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092760191 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073549932 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093402858 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06983289 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100990013 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072992432 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089733085 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073172896 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094276687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102183294 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085407989 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096949915 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097656856 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075445526 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101423053 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073423962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094489884 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102126944 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106386829 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102067946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101948646 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074453072 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101401875 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102105402 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088543498 seconds)
  done (took 6.487087325 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090840615 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096546528 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09699383 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064700878 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065630918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092290132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065518969 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084541683 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077416595 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095541565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079992155 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09155034 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073982258 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098832813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089998107 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076334294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09120751 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071916604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096220338 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071375076 seconds)
  done (took 2.629413601 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079955151 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104056064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070104756 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072155051 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092779903 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07273596 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090882685 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071178105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088372887 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070696621 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097441109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077502955 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088200011 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073992242 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097407325 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073180159 seconds)
  done (took 2.281263703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082367983 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098290975 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082003654 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088951394 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066239339 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084923081 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068471504 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06313151 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085436835 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081446763 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088821614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069423231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087908059 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066853005 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063598031 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091252446 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064054361 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086018463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068474978 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102130753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078957588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086314345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068956419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068400971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089481499 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072593984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088863783 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065631859 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086326563 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068470691 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087847987 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076406288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083752011 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068050224 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066454685 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085977339 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067449373 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087202393 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071257628 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066685373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086643196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06751193 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087591673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069330158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083029967 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069636016 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06415936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094365082 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06573499 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0877172 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067690218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089152612 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070641413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076959667 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091454778 seconds)
  done (took 5.25838731 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083879912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069837952 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084677173 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065711621 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089966627 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070609127 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07001937 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090078681 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069070145 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085347016 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069666174 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089741657 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071219152 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070268708 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090451661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071298552 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082947259 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069583947 seconds)
  done (took 2.358257514 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075840437 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067366442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095127775 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067689014 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087399364 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070897409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062911735 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087438503 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066074074 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086960024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068865151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069876933 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087116314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070641414 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086326416 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068455892 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068912167 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086724812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067630867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08271082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071193076 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065833199 seconds)
  done (took 2.628113319 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07572452 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093859217 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163817653 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108872121 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083063397 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.1014744 seconds)
  done (took 1.594398885 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095002403 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100065376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068301124 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108358437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07691978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089228758 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069845653 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088553034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078663578 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103426945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069463431 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098569889 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096816662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077912297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095836122 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07484937 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089701552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069178195 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088405304 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10592491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071355831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096681843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070523654 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089321746 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069894586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097518021 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07863128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103777332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088516831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079116219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095153352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070427291 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098161566 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10156192 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072365645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097815268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071073943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10787188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074857672 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098351399 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07076611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096536482 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097453476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075171464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097954954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070016272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09509747 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070091885 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09080015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113477653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074853342 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098216867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094441266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07922453 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098565535 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113626215 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083446063 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09861582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093978662 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084532595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098127126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075546356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098137406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103033388 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075879208 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098436113 seconds)
  done (took 6.789565487 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08852868 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107752398 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069969976 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103703491 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097820306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071839623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089183837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070674544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088784944 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070257191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130836397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069475712 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098571056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097544576 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071028901 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089730228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071117794 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098644491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069232773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11359595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089100632 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078217778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098046168 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097073485 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084481932 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096420936 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069885803 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089907933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069663747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090647914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073905209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090416972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097040453 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069930602 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097392786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070252437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08950761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074615298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089707042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074706289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098569216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107623932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07044362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090578576 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082653831 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090203902 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069336719 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090293747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069232281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089781895 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082643934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103883319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103052596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096510928 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071058367 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089029944 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070679422 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089636122 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071825868 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094844914 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077924307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09035758 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114786432 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070891088 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090645921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078298721 seconds)
  done (took 6.68202563 seconds)
done (took 132.783659215 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230730283 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190495672 seconds)
  done (took 1.385905371 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072153821 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09620366 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100832706 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128777093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089224064 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101192927 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119849453 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080903325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067167209 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089181887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067773935 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088880616 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133382846 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068279385 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088718485 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070473558 seconds)
  done (took 2.434224298 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106846255 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197558259 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11178156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066687207 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101279801 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079747968 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087340368 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078796836 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093242803 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068187821 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078103924 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097306183 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066074128 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096937673 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073318896 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099470147 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066032928 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100203856 seconds)
  done (took 2.643568487 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109285426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145833324 seconds)
  done (took 1.225696675 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203973483 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125460502 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204907965 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.419200677 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208899213 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281486435 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180620647 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179376391 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162624108 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175395164 seconds)
  done (took 3.109991391 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103085538 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171145708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313660686 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138679002 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08799136 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117224848 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139810713 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.109733266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083038602 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101784425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080544009 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099444262 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117949509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077181059 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096047536 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07939739 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12118418 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075959209 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098012497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077281462 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118774655 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068384431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095340057 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076261565 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09761189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080477772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06675037 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087956824 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075890272 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097313558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079179972 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115059059 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099511645 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131574544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082449103 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15168594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07970333 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092171894 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077999118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072829128 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099184165 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097076746 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086342204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097547048 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068159636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077641723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088128327 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0679083 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100630127 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078754449 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100797545 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078732618 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151377707 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079560838 seconds)
  done (took 6.378001351 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746052263 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110654819 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096019938 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.798977865 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08845266 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106298864 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.703055036 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11776056 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206883811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75282119 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089451509 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098045784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.177172857 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213311369 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.895519172 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.279683223 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.626239582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103588199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108704806 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13030259 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137864325 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173009822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146451378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431943291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075231169 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093494567 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135680404 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074873564 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157711494 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084872059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093401073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151587448 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.222334903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.152623325 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097305084 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069848245 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090687912 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145116209 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217846807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186764346 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15650144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069131497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090635943 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137705695 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129330799 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068047163 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138439506 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.148661935 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166301188 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074825416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096384023 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139867058 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137541253 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140826797 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100405614 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.264825626 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277025864 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070091932 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118762335 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103408241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211821947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103453283 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.193903877 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136243847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.162693182 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091230597 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728395367 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144608718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091963507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074570872 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117366544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095070195 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137214799 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142399944 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.347263614 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161983645 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073637578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091150561 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206387722 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082042211 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092230816 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138423367 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074633339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120648171 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162372958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141902296 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.144392342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207808067 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139342343 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157700257 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074108916 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122760441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074776095 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209095169 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168562001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138606104 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.203791722 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138947083 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139205506 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14504803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095675276 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.147810146 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11703147 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079902497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135127186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.186617929 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120763294 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081629557 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094781983 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13888249 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124153838 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084228525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158897834 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147574847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.451534021 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144041665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088388579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085825998 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136876026 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158863906 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076158061 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229344692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100683779 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165715951 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120299001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069466876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119478741 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136990372 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078951237 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12161998 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156961502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077058569 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212500849 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188203361 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076746435 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212077313 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159486892 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076155893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145684506 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119719629 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144119106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098332144 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137428742 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074998747 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768875484 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141458712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120689007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093384347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154620297 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092007174 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082625417 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103678556 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067830449 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756293456 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084885102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101357375 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102641722 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075239901 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120636176 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135130628 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093650006 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137810723 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174252394 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098506016 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117297615 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081499034 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156793606 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077479356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103007462 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082491584 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104292172 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121759383 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0731658 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103725041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145674896 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139644254 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188048286 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.539098045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069708198 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104324019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195928107 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070721846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257285119 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134856136 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194521292 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140111162 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079296851 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283190845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141970132 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176897292 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10526769 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150166938 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068643419 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13530268 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139487143 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092352722 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074795675 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.13807343 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164073684 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141292945 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.91149701 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072030528 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201603509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067992917 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167915666 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075943896 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096477393 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.23439465 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092581078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145654983 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141509593 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094552166 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083341341 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.663913002 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104726527 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137444851 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096063183 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.167585712 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161429621 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13553663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137279549 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0749153 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157098275 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184543878 seconds)
  done (took 40.074778701 seconds)
done (took 58.225678325 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260817146 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180368777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241823744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14505447 seconds)
  done (took 1.900079423 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152265757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103594586 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119020264 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08744379 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103823854 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088740234 seconds)
  done (took 1.651629084 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406921747 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262324485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22859064 seconds)
  done (took 1.89609903 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259376421 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213576562 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447609441 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296918506 seconds)
  done (took 2.349147987 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174904061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114280514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068816956 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107983677 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158820398 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253838785 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12680951 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185393552 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080361897 seconds)
  done (took 2.320116514 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195921982 seconds)
done (took 11.314405258 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097817678 seconds)
    (2/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.226772243 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156286182 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.200296091 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.184388133 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.297314322 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082587288 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.300098066 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102817053 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076391091 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105149016 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073642804 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099016305 seconds)
    (14/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134123254 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.149573542 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095148945 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113933738 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083464458 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.169718029 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082349872 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.177811496 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.160470349 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232421351 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130139239 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077065622 seconds)
    (26/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126780727 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081361759 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.182231125 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.256794043 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090588047 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098771177 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073576615 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087257741 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07476432 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.259200001 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074050129 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097563007 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.223844308 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.255586101 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111215607 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069689492 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.248213987 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180341422 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132101414 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066669407 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114149206 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075369341 seconds)
    (48/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.072295718 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119879256 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.282390482 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073756976 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093462109 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069099407 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172402444 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074404782 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115284589 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070236408 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118378741 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153878303 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100897336 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108025776 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091198051 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100315984 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07544788 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172749421 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.254650048 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157204407 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053309333 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113810075 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.148628218 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080848424 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073364475 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 0.231155946 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.217578324 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.266964478 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115596466 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.223526053 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102637464 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191715459 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099624835 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.091186858 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053343631 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120423396 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.227008576 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12439549 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.157826984 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 0.163683305 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071159255 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104435546 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053975848 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165327849 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077874358 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.12664827 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105806485 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111891027 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077381394 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069302277 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158009553 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178862707 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067791934 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10366931 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072939116 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.074911718 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.191090309 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075747892 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052507125 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168232702 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.240531964 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.235543777 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113820043 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054069593 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.242219273 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10321908 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143379838 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.238632557 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.158740037 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096916839 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098372096 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 0.128115124 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098218253 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091976314 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092367696 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194678958 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073463085 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.163519787 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074312309 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090255993 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055712785 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.252020014 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05513134 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064119766 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171555287 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076157017 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.20004248 seconds)
    (135/309) benchmarking ("sort", Float64, false)...
    done (took 0.150182958 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074792087 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098464671 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111591367 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.241055183 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066926634 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191454403 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074623298 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076952424 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087451998 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132426603 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076284581 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054361635 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087141821 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070053877 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10833084 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116661389 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.240217205 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075724067 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.258513317 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067771415 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076988522 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068233002 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053053863 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097879183 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069429349 seconds)
    (161/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052630641 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112063546 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136431509 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076346026 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.229245691 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095401212 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078026495 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05307546 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.255043433 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115659505 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089799154 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076430942 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095118007 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052761618 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077225129 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093463763 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052767385 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.409404447 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100077091 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07144442 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073593983 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078435767 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133701023 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102169376 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114436961 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099454093 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067415634 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052767946 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135281188 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138752413 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06631711 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053025199 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085951556 seconds)
    (194/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070121332 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05276982 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098979724 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067539517 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198839009 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070550038 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.131241358 seconds)
    (201/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05412015 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07169564 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14250973 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077512031 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096524088 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076994568 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075830271 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116743918 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067882416 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076087071 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081155054 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073278621 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128596973 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065667803 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075536135 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066974755 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054116778 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094989993 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093779651 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.076252183 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092500167 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065889557 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07057871 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090389529 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070895032 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109502795 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053940348 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066987757 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162653851 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136135642 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074323228 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052711827 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051953957 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077631684 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124603061 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096718055 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067690692 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.12783804 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055361029 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080542879 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077075679 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055302691 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054293366 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096251553 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05479357 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092124937 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078196053 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069338083 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052697205 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078482133 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067525764 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065977957 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100676632 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069271813 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072417296 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132642693 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05485709 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075272145 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074492394 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068206638 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095366414 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075666921 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066049061 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078610119 seconds)
    (265/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054466792 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111250017 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068254957 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121237666 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094562253 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198969251 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054006204 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065979982 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075667951 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068625203 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073880253 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090511065 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067903909 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065931662 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09140663 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06795575 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097907301 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06983999 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065703753 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088416342 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075293197 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15855766 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054339924 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099773939 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054195184 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067912586 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092340465 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147314432 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09885697 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07296001 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052763443 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100330619 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067682862 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054446239 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090970168 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081035484 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105180401 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067534365 seconds)
    (303/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053060541 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10686169 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072214987 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053738929 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100403132 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069698969 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075704217 seconds)
  done (took 35.199386054 seconds)
done (took 36.211510785 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084395793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11498962 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07707949 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115686062 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083012545 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101494704 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075923542 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079434601 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105731047 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082365562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104110379 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055453058 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099022252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076475833 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099420093 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092641693 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102668737 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074355128 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07415455 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089671821 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07459957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089148983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069368513 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056370027 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101446012 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074542465 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0731516 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099783453 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065990999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089682183 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070610139 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073322684 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089785641 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079806078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095188468 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075504488 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075598839 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10149788 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068557194 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088639793 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07551681 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066241816 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096399241 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07460091 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071612125 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09570497 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073879109 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103797065 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09195576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092416905 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075712188 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099924016 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07885527 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073724849 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09543109 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074501938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094687688 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093668574 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098281414 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070936195 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074578046 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098861331 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073363594 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074063467 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099667567 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076607553 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101591735 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073318756 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098832554 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074152402 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06641556 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098930581 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071228423 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066252025 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100429331 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077675059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088671716 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073781739 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073427303 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096740243 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067184005 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068640857 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093139711 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073933344 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056951186 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071045779 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095856131 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067976737 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07480321 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096728286 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07394467 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067861178 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101532798 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066226568 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095263307 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06761089 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066431253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092412324 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071430099 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066262146 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092608303 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076058247 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091189969 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074670434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080228477 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090895351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073970256 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065985317 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090993449 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082444568 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10029053 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067494416 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091761053 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068642839 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074270571 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08973051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068096524 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066500876 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090175352 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074447605 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066406581 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092382181 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074103473 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103822147 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06814973 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070542804 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092579454 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067660448 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072061994 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090932106 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067433391 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06869666 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088164998 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06875874 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089888357 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075813032 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069038479 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098445711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069329036 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074431114 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095985468 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073255807 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095395586 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067493065 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060560214 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092031226 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069935865 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069350575 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09014106 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069865019 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067238776 seconds)
done (took 13.47264308 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069359293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169113736 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12625424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096686698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111290466 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067427041 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101267193 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104286765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093339123 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127485775 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089964191 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108685702 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115257719 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090279398 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068400254 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070650896 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093070233 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.0886616 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126707107 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109993245 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117205281 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090554114 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120420571 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092768487 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11302245 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104461594 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090963949 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071898778 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07032766 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117292425 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109594673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071850339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066923162 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12470123 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118153324 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08573343 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090599066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086055973 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089798367 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068383224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114984901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101345179 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106521316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081755915 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09805791 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070104474 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091092016 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086989834 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11561619 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08166209 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112724591 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133429174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06938927 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10725501 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066413265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11213064 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105587064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071727407 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068170601 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0925467 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067805888 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070056649 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112993041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115703348 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072429687 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106675115 seconds)
  done (took 7.418374249 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08674679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117971571 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08611721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108229852 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068167554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067889468 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092142719 seconds)
  done (took 1.693075343 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070460057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089515701 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114704796 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08948525 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110638544 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087926978 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101961357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067849458 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10981104 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069641955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088005156 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130129559 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068626555 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099127902 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090744058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09190702 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09075998 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091843851 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072241412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114804622 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071695879 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087397534 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094933756 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067701583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106378549 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068454235 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138793856 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073898263 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069285937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096682697 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066639511 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140361417 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105218882 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079688184 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067531512 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106582844 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083190488 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090284818 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084687747 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096021123 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084629802 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068908588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094127554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067967681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07195586 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102880225 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069436122 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093063655 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072030697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088335479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093528401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0822866 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092022093 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073338254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06981686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098168523 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077654573 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0928482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089286478 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069500645 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109409812 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083112841 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107087673 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083828003 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09592266 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082315809 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106097192 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072074596 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069663212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095991685 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085014175 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08908642 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070855199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078451711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094415813 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091092283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115638912 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069916304 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101685406 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069625145 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068801998 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091784272 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091435806 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095693472 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06980784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072113911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095160959 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067057373 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066590948 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096268167 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066962644 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068544021 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095899308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069297796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094874062 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085650329 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068602613 seconds)
  done (took 9.503856745 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071688236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068543539 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094056143 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06978721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068334602 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093505723 seconds)
  done (took 1.548700822 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100529326 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094739376 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083170743 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097161504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1080652 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106745202 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083958705 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108100998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086378212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105471124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082673824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107310105 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088829395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099190592 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082568787 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09801342 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08351062 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101685938 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080882592 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09813491 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089629487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097638851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076447561 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083067246 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.097477521 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074034296 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102867015 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080162369 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104827463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083468431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098196894 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072453869 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096161051 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083995205 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107654347 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073326087 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098032905 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073552157 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10115067 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07349078 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10679276 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076486365 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078127931 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096988884 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105799106 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074692222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072217497 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102424477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082147123 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097788462 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07269479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097924189 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07310185 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095775295 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074888606 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10630972 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07408892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106219033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076316619 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073018373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096108671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071749069 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107263439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071855713 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106711145 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072755912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097359217 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074757224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098474111 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075059639 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072673689 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095899794 seconds)
  done (took 7.528822036 seconds)
done (took 28.75914962 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652840064 seconds)
  done (took 1.727807409 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.78157604 seconds)
  done (took 1.859484133 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.358868502 seconds)
  done (took 16.444791681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.617404824 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.762524259 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81076439 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133412479 seconds)
  done (took 3.403320472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.895686369 seconds)
  done (took 2.00033337 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237235305 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223699696 seconds)
  done (took 1.544639568 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772896046 seconds)
  done (took 1.865299461 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.327858177 seconds)
  done (took 2.416350366 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324566096 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180454919 seconds)
  done (took 1.597006456 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52952586 seconds)
  done (took 1.620774925 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.009337558 seconds)
  done (took 8.104672473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232557257 seconds)
  done (took 1.340779232 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270809855 seconds)
  done (took 1.36745502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.252750868 seconds)
  done (took 4.349290461 seconds)
done (took 50.727505286 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082400012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082140689 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106865487 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078928299 seconds)
  done (took 1.440570226 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08109791 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074128475 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10354553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073964377 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103184696 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075519014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100174293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080027284 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07315554 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100839955 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074729522 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098583983 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077227022 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09953727 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07373595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076951015 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102754527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074519031 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101399806 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075452084 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071765033 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100959898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076454302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098279244 seconds)
  done (took 3.171404555 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081001772 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073585386 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100073749 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073556446 seconds)
  done (took 1.426125107 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080631807 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115744671 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091715677 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078453225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118609265 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111947193 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072447372 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070556755 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099005085 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078523416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092727935 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100076421 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113441667 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078190069 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104119884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068994134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070154739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113715154 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078083082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103854524 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073082229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080666451 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094567882 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090666738 seconds)
  done (took 3.284503657 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081018663 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103861999 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105648901 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089626189 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119067511 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066845074 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103756936 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091829732 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151452794 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066844699 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097472813 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067287004 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098420344 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068250617 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077819573 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134536318 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112231425 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095802897 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097868806 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092858156 seconds)
  done (took 3.032746619 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078381279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070577142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090914395 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070301411 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077386512 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099128517 seconds)
  done (took 1.593239451 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07248826 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068009277 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09228743 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06886249 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072352545 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092883395 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067866462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067634977 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093527424 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068137465 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067020466 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092253773 seconds)
  done (took 2.029619983 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.439271193 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071234561 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093968754 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069292196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071792999 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092392048 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082012948 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068563772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118025723 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067294449 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09295436 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070847641 seconds)
  done (took 2.447733698 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265383933 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078585805 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322723183 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168435341 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140596785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155494226 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105115846 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140754382 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197237475 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138661808 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199757946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2251731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135182537 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166997143 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116540716 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106247899 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211148674 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220053316 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105490746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223577586 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206515442 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156762453 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18066959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130105221 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134956371 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15081047 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073339969 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107403516 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230957324 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160890131 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201348945 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138034195 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098843772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231032045 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225020884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196348198 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161921893 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087827982 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157147531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167254078 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257351819 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116217439 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19475486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136529168 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107497397 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174755609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14666988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147807961 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137184598 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116323019 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175900587 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239810377 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164974401 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114367984 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137654726 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142629477 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144387053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103723301 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265203912 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194634255 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158591387 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098173409 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099205939 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21251255 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160909689 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142148943 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154437151 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120888084 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167361393 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212486159 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147155428 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172765266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1848253 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091273986 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147518184 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196368434 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156542124 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200767529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17858203 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076349951 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152353113 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131283298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083096373 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171634396 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076812464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233447155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126906912 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140361085 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139768754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136056868 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112924563 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220536275 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202005237 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104947603 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093647223 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130431919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15069326 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17683329 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114889834 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134908329 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148423338 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080470289 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19036076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078039879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153018429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103443614 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152138423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162204728 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076957254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155045516 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130025352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128961749 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164004693 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218787474 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09177746 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109377915 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19949765 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180000542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131644215 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177450599 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187189174 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128951525 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130157774 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204327012 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241605642 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092146447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222069467 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135981477 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085504404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114810944 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155622044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140565296 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150312771 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08374667 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178990243 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200116029 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103991844 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096773926 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190513667 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08399255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108825125 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14129509 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12755946 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097506828 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128076016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134833814 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168590011 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154416845 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13547944 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153008815 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126691683 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226161165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116507145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130346806 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107298231 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097544841 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164888762 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190097485 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108686482 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223688535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155447894 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131338952 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148758007 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084920622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170068172 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106799826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072683476 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20168917 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138371796 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111978576 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209384037 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13071864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15556241 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153121387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162285372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159503992 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187174012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108456192 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115064955 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140167618 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155059214 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10029905 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097838715 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110241109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130675878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12248064 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086980445 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171387574 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181513441 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099804091 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141582272 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125638272 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178779295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10437543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158746144 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147192764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12171599 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185112392 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212108948 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164156381 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128223557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174284965 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098187928 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076341749 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118319248 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157191087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11051976 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08582709 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145177918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20578588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158025112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165637012 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138993246 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150310274 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185724353 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099431783 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117122511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205008983 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154389425 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159464329 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093144894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127884032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175036298 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136307423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244325524 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143539405 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153552763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209878577 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131724595 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082813405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133578173 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165522654 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134149437 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208503719 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127231111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090840393 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137538365 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10804901 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131404794 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157260841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148647792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162153909 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145246903 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191012002 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080344745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144464545 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151827668 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15064971 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091643396 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149067285 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217447985 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098851303 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146373667 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211302129 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08152738 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152753155 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236687825 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200415106 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087629308 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138376102 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15109171 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158725445 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146899992 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196042208 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139732068 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16534572 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112435725 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113323237 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114851506 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100509673 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134154825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123515596 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138925563 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145223423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121379004 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161237043 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139138813 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138997819 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147817087 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09926761 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119494219 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124791587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207940994 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149885372 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23214136 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129234751 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205987815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198529289 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104104825 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080402642 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108247411 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170050526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112238042 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162660056 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123156415 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107036893 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155611982 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199750469 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096790526 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096763584 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13874717 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164586761 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138875982 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126072744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107714552 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221984777 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13189091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080471526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154357163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13298444 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13052299 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234325737 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063826489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125511018 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078170444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108212767 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159125808 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210830392 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085711856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15530453 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150776076 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15079834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159760788 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129672823 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097939413 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140674462 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205878429 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158517041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117081305 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115126893 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185510185 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187049489 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133975817 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124216789 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230657141 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186348457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222317205 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117585443 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145718757 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144606095 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11173878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198991767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11102218 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19966624 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111002342 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166640735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132537134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120647418 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158526161 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125561603 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107149346 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208033663 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149725298 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109846395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082957754 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145498223 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151842694 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134584944 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103743788 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168837874 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073793471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194585428 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201441491 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110799543 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135976192 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09775748 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111578705 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136999357 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132326938 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114696219 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12375456 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234044283 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118338093 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182458577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19911312 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14382623 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167035147 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128919916 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665040447 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079340497 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213987654 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149409189 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237504407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126898439 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148629054 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139703907 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15260489 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17593451 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134232622 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206056531 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162497791 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14931484 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108284011 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132062019 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139923711 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093419447 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135142461 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143763828 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144818756 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131480657 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149840091 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156527726 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111011808 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09695963 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218061152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146548033 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172387112 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198692532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087137112 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149714248 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198633396 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081893313 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177444106 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18726174 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137475106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12777424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08304202 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13443221 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232991332 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075168039 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22128825 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152843432 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140015271 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14388404 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147125747 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191420101 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137690492 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155598332 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123456141 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141832285 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145494859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086757367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107137437 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133796591 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14295738 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101662026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130858025 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148227915 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187547482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098462364 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098950469 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131889387 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17425955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237595842 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117725988 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084311107 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174594575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143849603 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145550364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155924399 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083622462 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111603116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083092384 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142601373 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141370685 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146390566 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105165664 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140237274 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227021221 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113490821 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227039531 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125214786 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136488531 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071910075 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108187168 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124358076 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100069358 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137197916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12703267 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231984165 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099904373 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12044436 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121679263 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076433794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110948786 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160841393 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140415733 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152106648 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127524827 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065855242 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138339862 seconds)
  done (took 71.724764333 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149331995 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.124578294 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.135345694 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.195667284 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164847107 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259435203 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202152918 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242977247 seconds)
  done (took 2.657265425 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073882984 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121164021 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103160964 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117785894 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093676484 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070440976 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.298461193 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110934479 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067928738 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118967566 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119993903 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09553957 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478316943 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067175869 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095317064 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.09027486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070085554 seconds)
  done (took 3.373042576 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435901014 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.642646821 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.461899739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075515273 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.92464239 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091865936 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.417130962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168121494 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074659208 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44304228 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.749878824 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135777008 seconds)
  done (took 17.806204492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08003883 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070548122 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111770225 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084993851 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099642999 seconds)
  done (took 1.639997148 seconds)
done (took 116.71993722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084569733 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.35066111 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054840882 seconds)
  done (took 1.629252706 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087119345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085352215 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113560317 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08390534 seconds)
  done (took 1.565484111 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078620515 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077142304 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112521451 seconds)
  done (took 1.460834583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284309115 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167533024 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091699614 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0873354 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079854097 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106929129 seconds)
  done (took 1.469381618 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076100142 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076668446 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101876086 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078587282 seconds)
  done (took 1.52167209 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080188732 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054267138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056026075 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085076767 seconds)
  done (took 1.470739719 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093974423 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106521479 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083882729 seconds)
  done (took 1.476456189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111270718 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114097811 seconds)
  done (took 1.4213521 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085907879 seconds)
  done (took 1.275162655 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096101531 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142212007 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157024855 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138045148 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167496741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137265367 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086597267 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116952791 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105273136 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089462343 seconds)
  done (took 2.432104594 seconds)
done (took 17.536333701 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081629653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393810469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362503235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117424994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671170055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357183971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014373804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119405486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122281657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096634729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085010609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676104884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977013934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349645934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965258426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.419755546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6778805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070001181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068757706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096404271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971689287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095917713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06935113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069196188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678296561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371740652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096460138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420182563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068545544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098878807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356345623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095869696 seconds)
  done (took 16.299785688 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074547019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144216643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075768688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08452116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099141022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070722102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099513897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071005842 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153626872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069517766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113545836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07000196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09848555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071207929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087610264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096915577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070517518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069407971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097367172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069505739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114406566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069509705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069154218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096945803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069409757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107792592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070066517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068272679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096818628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071327371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097725202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07132106 seconds)
  done (took 3.985039712 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119400434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154305858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074978688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13100232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114101504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099181911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171587332 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095047871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156955199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068692435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113231708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069223637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129072691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069670441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115295739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070108844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06999556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097343097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069310951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096050814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088883447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068727116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097576979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069616127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096701284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083351238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094632655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071916186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069681138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098471995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07349207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069439712 seconds)
  done (took 4.272695315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076822918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075554027 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111636779 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085236736 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096832905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074659767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073807859 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098205266 seconds)
  done (took 1.900625176 seconds)
done (took 27.65645054 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082672088 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071247061 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102140321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08294401 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099913325 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081654128 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068408545 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103287088 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078835313 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073913271 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10481425 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068236477 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099655258 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069945706 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075585669 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096991802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080688029 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099722542 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081497985 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080307518 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098854985 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078443364 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102024841 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081766265 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105840476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082309527 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083094052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10284627 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070050271 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098806161 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079270911 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084072312 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097742144 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080684831 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097111806 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069935924 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068889541 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096830754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080535355 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102277658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072920213 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101204565 seconds)
  done (took 4.83310558 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092633779 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08952234 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11409596 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071240801 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100207497 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064716281 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117771154 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073296205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.093817189 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090834815 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057088151 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087820995 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072858274 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062384923 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.096507893 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05889614 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060091788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085131681 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062406202 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061054384 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085485573 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057262406 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062007998 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063356166 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085528795 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063758443 seconds)
  done (took 3.237975545 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079997135 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08513941 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117307092 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129390877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135332647 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078007967 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107570245 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089011616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116911395 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069249545 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071560399 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.127014305 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088544625 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103387916 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069609171 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115807711 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084516225 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069995093 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102920587 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09196532 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113192216 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079574259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122040348 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084441002 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068100814 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099460395 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07250167 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109565914 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074764616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077054925 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101296576 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072243361 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097188457 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081411353 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072340271 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099255036 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09176361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106684369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080635718 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068914128 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10069272 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069684574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116852665 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112766395 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096504542 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076946155 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112447673 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07990947 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069441335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115051082 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07832955 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067589636 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100949356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069105153 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095716367 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083390839 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07139451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099663792 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078109701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099310918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08307102 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072085826 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112977846 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069457944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10287874 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069524158 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069834646 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095537805 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094209036 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097415219 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112874222 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097610031 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072423207 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077298213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104924254 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075205542 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096213635 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085829922 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077542673 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101274113 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077527473 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099178565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073913081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090048846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099794813 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072384617 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070043002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104035266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071950242 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097945997 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083863349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069531734 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100614339 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085908446 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09569212 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071457338 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074531509 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101934924 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068772116 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108780926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074372179 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068939183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106685891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068851397 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099114108 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079468408 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072657326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096439682 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073974144 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102699271 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071035452 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069920376 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09971875 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070785304 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10589445 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076909562 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07294681 seconds)
  done (took 11.616429143 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194780845 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187963481 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073301624 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180640825 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076786856 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108524607 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18095252 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097240606 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097132287 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070574834 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069414521 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13413066 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123872609 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108816179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108733613 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070079388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114687274 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105771616 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183414901 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177318258 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116407745 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078954179 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070824194 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099395049 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071804577 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078021606 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11548643 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077026758 seconds)
  done (took 4.39728223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085365487 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.139072763 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076340974 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092537294 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122075916 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069185677 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104274866 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071163696 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109716336 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081659438 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097132603 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075766769 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074852117 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107167199 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070299076 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106782705 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079757561 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07063032 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101700973 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074719085 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109238361 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082392366 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10039259 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069990423 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076212332 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09704636 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066060278 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114783202 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069577215 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120463272 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068462501 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074389671 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116826809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0704939 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096828591 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073970684 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071976881 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100975329 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072025116 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067320198 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096666717 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05975678 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068391488 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1096975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07481184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089895968 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07557207 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101896155 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076264865 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066842326 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099873626 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07298359 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072319531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110936351 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07419022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101099034 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075384543 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067736289 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105074985 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073024593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066446189 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095586592 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075360357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095593088 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078729836 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074028319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096051749 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073412395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074611314 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104476899 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073032116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099009982 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070060286 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072247238 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101955973 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074341224 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073038864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096348949 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069369963 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069377028 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086291826 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06904398 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055434415 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101219055 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068137708 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095130371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074437794 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0750274 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110157204 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070615553 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103991594 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071069876 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068022402 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100903535 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065354159 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099091861 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08960426 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112665652 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070307197 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067174083 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115399237 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074594318 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095556738 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059802909 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075943933 seconds)
  done (took 10.142271992 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100198945 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09405771 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100543376 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085284313 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126544967 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094613327 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104784457 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075698799 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070071693 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115628687 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069584131 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104798109 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070540569 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077979149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126858739 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077575759 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099173548 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079460066 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072477178 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139157036 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084803981 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112241753 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084309893 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097629833 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074995532 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080754424 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12639283 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081993744 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109209785 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088628559 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081781515 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126640323 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088070568 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102078641 seconds)
  done (took 4.462620725 seconds)
done (took 39.890071212 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.309035452 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.501307626 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.278464038 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.247229431 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.28610476 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.309634112 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.293074077 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.279978376 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.646920499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.282426812 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.523680548 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.964142743 seconds)
done (took 60.149676079 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.298164374 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.420192928 seconds)
    (2/2) benchmarking "String"...
    done (took 1.550699642 seconds)
  done (took 4.208817725 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.63932322 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.31337796 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.57318265 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.281145098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.282320886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.747116738 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.926041729 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.128107309 seconds)
  done (took 28.47502495 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.280984798 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.651020574 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.655552606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.65267694 seconds)
  done (took 18.466655474 seconds)
done (took 61.312163753 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.280865482 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.362516951 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.324671912 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.266325956 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.405786951 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.305477859 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.430239266 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.346910586 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.28211961 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.2738495 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.299038879 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.281772518 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.283056674 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.434261991 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.283869485 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.283493827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.364578175 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.898892074 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.679821227 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.285104673 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.325858132 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.301921501 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.284203297 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.283209426 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.315422284 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.284927809 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.281994256 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.296099123 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.566215354 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.288559641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.380338518 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.5736732 seconds)
  done (took 192.77951915 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.281884456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.099172217 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.269669126 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.302118968 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.624937984 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.486995583 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.439083301 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.749233124 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.300785888 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.307355948 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.437616955 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.284649592 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494329794 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.311356552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.291637666 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.285925009 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.484295596 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.525510622 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.301384197 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.5599563 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.28558368 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.351099055 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.267166616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41758912 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.304579831 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.329332708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.298327377 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.302092505 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.483221839 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.405097701 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.285925442 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.292436686 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869657246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.144031681 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.295499318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.293294272 seconds)
  done (took 151.688084856 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.578078334 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.282997477 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.28447222 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.284129437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.315617798 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.28532369 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.822500131 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82355254 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.827671016 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.384546742 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.287006144 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344390965 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.549856863 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.286194343 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378637652 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.298188909 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.285297794 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.300561182 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.310098018 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287315869 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285615871 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822512418 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.299579046 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.311140444 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292038288 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.285880061 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316020443 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.679238196 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.285102997 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316541184 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.603725467 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332202414 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.284706049 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.587833222 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.798123596 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393819227 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.286025153 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317029294 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.286897006 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.554918668 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286433181 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.286028838 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287216605 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.290616714 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870873312 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.288055243 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.824521429 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287690113 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.165474188 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.286556545 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.286143854 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.568120494 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.287474994 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.705981716 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.28511365 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.287889601 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.289908254 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.287464152 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.286803186 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.317738953 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.561895817 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.385181872 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289263146 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.290244604 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316728092 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.287990111 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.753620164 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289116615 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.989215657 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.342958505 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.392528693 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825316936 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.288062656 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380477712 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406151598 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287134354 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.288879907 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287473089 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.287282259 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393242307 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.287341311 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.688039771 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293922238 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290009906 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.347329892 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.383322063 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.287048437 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607503102 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.288661559 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.28899802 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994219212 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379787963 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.28905199 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.288086985 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289364229 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694951975 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.288374607 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.828215872 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478960552 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.290995573 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.591718059 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.290569427 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.705275434 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.80978658 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901194254 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292585483 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396947866 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.293201615 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.291993562 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.289685901 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.318398142 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289925419 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.346890766 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.290979444 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.685981018 seconds)
  done (took 355.408817284 seconds)
done (took 702.680080726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.997545162 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.975533853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.095586997 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.973881722 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.955645474 seconds)
  done (took 11.229463796 seconds)
done (took 12.46115096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483462824 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483396351 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.351310713 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486538124 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32200543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502333405 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.462663278 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.310225935 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395590997 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.369100468 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397571541 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.344675854 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320449093 seconds)
  done (took 19.46136062 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604473091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608696669 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352384888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607297864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327911063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608151126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.485956737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.49557188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491463008 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330062834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304164072 seconds)
  done (took 17.449162052 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612579335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.59595019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357194972 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.617046623 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330795403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.620394036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483934695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.499908597 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482721104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306403845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304412156 seconds)
  done (took 17.444782152 seconds)
done (took 55.588385958 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.302344915 seconds)
  done (took 2.536046555 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.337746392 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.500308136 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.316169954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.304764044 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.301711588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.303148761 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.30430314 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.300895857 seconds)
  done (took 11.904657345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.299734677 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.297451696 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.300712837 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.299704838 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.297362918 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.299053887 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.297578269 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.296189713 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.298083053 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.300333329 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.300566915 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.297287396 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.298320344 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.301082579 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.298254531 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.300791013 seconds)
  done (took 22.017891636 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.300186726 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.296640214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.2981165 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.29773379 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.297142178 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.298348982 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.299160258 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.29817742 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.298375154 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.298344764 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.299216215 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.298108701 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.299338194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.297217603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.299291349 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.298866041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.298259688 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.298409116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.302579812 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.299154734 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.299627684 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.298394238 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.299457178 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.299532817 seconds)
  done (took 32.406583208 seconds)
done (took 70.099174492 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.334885058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.888178245 seconds)
  done (took 9.459199148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.301915933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.301632953 seconds)
  done (took 3.841754161 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.302115932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.301345433 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.301431956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.302980214 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.301886529 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.300738674 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.301455211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.301789198 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.3027917 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.302751204 seconds)
  done (took 14.256612714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.302878097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.301580951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.300041871 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.302888514 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.302171166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.300264076 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.302196976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.302138172 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.302982932 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.300392543 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.302769555 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.300234853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.30292264 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.300110878 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.303490608 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.300242473 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.3018594 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.298744303 seconds)
  done (took 24.664324995 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.303357022 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.301965322 seconds)
  done (took 3.842084718 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.300231216 seconds)
    (2/7) benchmarking "second"...
    done (took 1.30029855 seconds)
    (3/7) benchmarking "month"...
    done (took 1.300260519 seconds)
    (4/7) benchmarking "year"...
    done (took 1.300443519 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.301631874 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.300651524 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.301919812 seconds)
  done (took 10.34278739 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305839408 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.480000516 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.559633485 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.862040494 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.304459422 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.306248823 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.161137148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.307202568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.310028836 seconds)
  done (took 14.835463933 seconds)
done (took 82.477532739 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.32317785 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.297459002 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.134344844 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.303912056 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.328612973 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.596998108 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.338471668 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.424606014 seconds)
done (took 37.986970441 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.315304305 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.009059801 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.007094181 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.308624712 seconds)
  done (took 11.56397188 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.292094361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.232272921 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.293797171 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.313981844 seconds)
  done (took 18.372917755 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.914342067 seconds)
    (2/2) benchmarking "read"...
    done (took 1.705350997 seconds)
  done (took 4.859372489 seconds)
done (took 42.350118176 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.30489723 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304402893 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.305421483 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302197153 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305011802 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.302538224 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.304900177 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.302106955 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.301372201 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.306169547 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.306630302 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.303127211 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.305686814 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.305370329 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307656907 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302802573 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304175281 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306203099 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.305368969 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302986723 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303473595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306928424 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.303263372 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.30302259 seconds)
  done (took 32.544758297 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.307740883 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.304663162 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.305878898 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.306195455 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.305525321 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.30736338 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.306988541 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.305100698 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.307377864 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.306968688 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304021252 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.304317656 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.306698023 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.30486493 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307947716 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.304454755 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.308254679 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305459506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309188525 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.304492388 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.307095846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305796664 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.305336177 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30726242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.306374155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305384397 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.308723763 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.306771642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30727095 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.306633982 seconds)
  done (took 40.431864632 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.313924083 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.3168972 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.308855566 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.308787726 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.308180296 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.30840235 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.308922027 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.309396285 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.308805617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.309184574 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.310618273 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.308593132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.30884979 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.311353583 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.308691416 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.309234837 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.310197578 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.309304384 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.308567452 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.310368128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.309137746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.308602207 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.310209296 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.309195112 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.309917734 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.309252463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.310000152 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.309732606 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.31035925 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.310299433 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.31103344 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.309260983 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.309465585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.310559564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.309826233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.309636202 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.315040546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.320300875 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.310227067 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.310534864 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.310446039 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.310488247 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.310882483 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.311248056 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310718225 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.310898543 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.310261475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.31185318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.311342992 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.310270482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.311632384 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.310827003 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.311036298 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.31121524 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.312481548 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.311492113 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.311289572 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.310936258 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.311686958 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.311908385 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.311498776 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.311452738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.312041909 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.312139686 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.313297371 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.31248733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.312095677 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.310848356 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.313533196 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.312198893 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.311588724 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.311996646 seconds)
  done (took 95.622497346 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.312453134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309912054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309458726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309767821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309325483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.314008497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.309366375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312118233 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309623649 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.312041506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312471282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310298935 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310768752 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314371952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312043647 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310316429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3129525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311514184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.313011616 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313312046 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31225868 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.311258128 seconds)
  done (took 30.099821639 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313022559 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313553944 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.31108098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313325466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.311513129 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.31278007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313174389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314594422 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312974789 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312654574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311064882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314368775 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311476349 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311637404 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31176215 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311762142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313673236 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311316583 seconds)
  done (took 24.873712243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.312180792 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.311581881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.314718775 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.312214077 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.312890376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314975073 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312863374 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.315538082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.314450559 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.313267992 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.314790793 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315760851 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.315167891 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312318843 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314751577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.311473839 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.315494848 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312542176 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315156024 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31207186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.312673207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315518817 seconds)
  done (took 30.152547772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316422548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317062827 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31322799 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314136661 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313672257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315518231 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316352921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314442579 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.315511009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.316318103 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313697461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315773079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.313703743 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313918398 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.313931547 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314342623 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316920649 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314251263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31683321 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.313554724 seconds)
  done (took 27.550287231 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318244802 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318243548 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318489815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319392374 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319144796 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318499412 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319040387 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.318075678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319612758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320289502 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319103544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319113917 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31992144 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317632396 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319985482 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31831466 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319573574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320086946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.319887588 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319990796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319965676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.319743828 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319521176 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.319327878 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.319131678 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.319202084 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319065435 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319881413 seconds)
  done (took 38.191871978 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319007738 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318086996 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.315029739 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.315965558 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.315832148 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.315776495 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.314880224 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.316585352 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317989821 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.315059315 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.318861181 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.318150102 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317865107 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318114454 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317970783 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.318361819 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31864466 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.316481633 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316435855 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316201373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.318648131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318677824 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.320591225 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316375553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316877325 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.319609004 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316741282 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316887754 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319338274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317410532 seconds)
  done (took 40.776135975 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.33936919 seconds)
    (2/2) benchmarking "in"...
    done (took 1.338368907 seconds)
  done (took 3.93225659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.31777154 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319717856 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.31871809 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.317450676 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316576872 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.319937099 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319904148 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318098007 seconds)
  done (took 11.802678293 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.320279572 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320087534 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320842634 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.319957182 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.321532625 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.320587871 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329969789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.334984301 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.323005219 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.321366328 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.328110944 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.330069158 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.32566329 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319993734 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.320366791 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32265682 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.320383236 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.322229245 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.322182379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.321708092 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320961395 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32349626 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323500526 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.317693652 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.323521174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.335710677 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.326896601 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.321290345 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321831073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.328272609 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.32151995 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.318737027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.322579628 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.323444082 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.320843837 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.321547239 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.333133809 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338597342 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.330751755 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322710955 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322615452 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.319833362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.323975757 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.325083212 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324183223 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.322993893 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.323078396 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.320414395 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.322924851 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.324691613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.3290244 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321420485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319937127 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.328980151 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.325741945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331261762 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340250582 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.327614935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333710025 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.336691554 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.338161796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.33344569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325806705 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.323982494 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33512333 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.350782404 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331750907 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.337271543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.321139269 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324220352 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.335024715 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339121463 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.336869223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.325259177 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325878874 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.325133048 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32563841 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324833999 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334695593 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.344880266 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.32574833 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32605402 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33618221 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351510597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.32396583 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.325829305 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.32640683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.326218503 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326561263 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.33822911 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342606114 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.324935218 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.325409785 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.324792171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.328566845 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.327030856 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.325098761 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327240195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.323135827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.325568786 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325631031 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330728802 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.338076041 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326648751 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327740161 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.336397072 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.325533004 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325737514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.337470087 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.326010473 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328210938 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.327781671 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.335769023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.32297254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33001387 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337510174 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.327643482 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.328843313 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.327727593 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.326919696 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337584726 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.357667325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.327124411 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.327519202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.332478491 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.341633057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328278004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.332450185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.327637355 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324895302 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32522166 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.329986009 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.326780725 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.329897124 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328793405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33085422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.325490078 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.327792981 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.328708123 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.329178868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.331043652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.327770585 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.330450825 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.332247211 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.328798996 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.330739034 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.337708053 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.329414846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.33083769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.331140601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.325567301 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328485703 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.331468038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.330770948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.330382293 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32973021 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.328999927 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.330626504 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329173127 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.329770937 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.32998966 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330470361 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333779158 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329523176 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.335720672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.328438903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.326621148 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329597701 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.329981674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.330545872 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.329891438 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.328709323 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.333798212 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.340199668 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.33023305 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.330536691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.336073057 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330192279 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330830843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331532157 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334177281 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.34074057 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330192133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.339893934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.33087652 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331824844 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.331236104 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.331580288 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.330735798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331714852 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.33432746 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.34097275 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344971091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342560246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33159981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.335756002 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.331504396 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.336541163 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.337840672 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.330799502 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.332186079 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331452227 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331529556 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331677559 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.335905785 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.332679021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.332269182 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.330497767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.332278242 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.332505628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332530183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.33346294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336089507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.329747238 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331992259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332902856 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.332549592 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.330034592 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.331258794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.332163298 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331522027 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.3326939 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.344205138 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.329515563 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333713094 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334244991 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.332857264 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.332280103 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.33337663 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335858001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.334962203 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342296527 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.350446169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.334523888 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341206797 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.351141049 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.333306506 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.3369282 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.333186246 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.331475624 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.336549814 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.343403386 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.334224567 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.334018599 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.33408913 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335264326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334623085 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.341999753 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.331899503 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.332946964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.333725048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338683819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.330904219 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.335768525 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.334934996 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.33560833 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.337188306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333953949 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.335152219 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336505912 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.334755326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.335486264 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.336579468 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337658189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.345063548 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.342602678 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.336136111 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.339244992 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.335102783 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.34032878 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.337508354 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.336508133 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.335717259 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350458048 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.346405374 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344721838 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.339569968 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.335063485 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342857868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.337117663 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342229279 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335496434 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33803468 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336408169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.335153338 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333587028 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337557709 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.336599828 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338751231 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.338058899 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.341371 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.335894536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.335589821 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.337001207 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.33750631 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.336807711 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.337195581 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336415981 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342050683 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33988806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.337159726 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.337354398 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34633611 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354962013 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.339895455 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.337183176 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.338319122 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.337172309 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.339709719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3382204 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341797605 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.349257692 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341217632 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.35067411 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.338888081 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35030742 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.337379353 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.34066897 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.347911072 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336037074 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.336845771 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.339456933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.338576542 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.34884719 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.355129448 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339754471 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.343965817 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339774062 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.339904985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.338241138 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.339101477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339145398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.338646049 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349409998 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357289069 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.343899471 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340847761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.334944041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.339492776 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.339101272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339518196 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344593177 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.340822391 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.342303786 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.339072826 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.340075809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.340418451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.339942697 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.339916968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.336645715 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.338935681 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346777547 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.356682665 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344618883 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.340116857 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.352215948 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339843564 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349186807 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.35755731 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340910633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.341430528 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33951697 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.343609234 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340478563 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.343293415 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.341640615 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.342900632 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.345641104 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.340367715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.345121747 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.340565563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.341474091 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.341817238 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.351145678 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368378515 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343703475 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346954785 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338408098 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.344728604 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.348325184 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.34340998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341032537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.343986267 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354377822 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351051715 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.342122728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.341195943 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342581276 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34219999 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.342350261 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.341814187 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.343384484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.342258666 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.344193409 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.342345693 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348438824 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.341318329 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.34321361 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345004838 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.34342453 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.357182774 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.342436444 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344408849 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34321964 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.341982483 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343691302 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343085461 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34254093 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344455676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.342375571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.345135424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351221298 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.350823363 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.345784129 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.342176866 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.343930148 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.343517072 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.344787379 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342665951 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.343826329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343415118 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.344478284 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.344076183 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.345311766 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.342853761 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.34240564 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.344060543 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343019676 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34586842 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353250136 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343296443 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.341050127 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.344276191 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343615944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.343742326 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345869313 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.355518774 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348181193 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.35717995 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.355279447 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.349418842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.345810536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347970253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.354692262 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.343003039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.345691036 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.34511767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.348086689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.346020704 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.349787173 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345386226 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.353475055 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.346418717 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.346020728 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355331372 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.362239995 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346115555 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347015246 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351868335 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.345673305 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.342733837 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.346018748 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.345551277 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354637325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.365550457 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3460511 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347599396 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.344850522 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.347534294 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351157998 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345825162 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.347319089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.342500369 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.346358141 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346506259 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346440981 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.343783943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.346538194 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.346654998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.349269755 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.355367012 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.344119096 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.348837045 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.346530086 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.348014585 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346577085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346427382 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.344122111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.344771336 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.347632471 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347336874 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.347739452 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.350048598 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.347276701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.348813541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.349081931 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.346992063 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352311653 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.36028752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.356035414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.344287657 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.346589257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.347953922 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350401176 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349207052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.347692887 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348994452 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.349470208 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.347405506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348358151 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.347873212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.351890238 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368478057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.364153081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349075315 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.348576898 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353886222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.348172567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.345420961 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.34900485 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352223764 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.35197107 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.358475182 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.348335901 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356186172 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365961113 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.350046925 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.353492488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.352908312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359662084 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.352197718 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349680144 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.350078889 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.354972812 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.369990159 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348542994 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360464851 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383472064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.367693865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.350346377 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.349646188 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350014428 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.351100938 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.3520581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.34998502 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.349701708 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349387449 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.35048991 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.351042247 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357193736 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.351941817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.349762946 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.351153909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.349713702 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352821292 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.347051633 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.349986333 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.349770471 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.350285569 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.350882957 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.350527721 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.350960375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365241993 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.364194161 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.349844521 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.350685648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.3479049 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.357028635 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.353009183 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364118909 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359777235 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.350895492 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.351492664 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.351881881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.351482317 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.347967182 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.351798403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.351287033 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350488791 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.348702197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.366355052 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361805724 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359072425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351670411 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352036498 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.352004396 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353509215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352630083 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352472951 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.355437328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.352807008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35700217 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.35388706 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.35209683 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355951564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.361701229 seconds)
  done (took 799.728520701 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350330659 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349917926 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350758628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350151911 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349315537 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34952927 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349728309 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350297171 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349067471 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350508309 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.349461919 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349892255 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349395574 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349385661 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349697186 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350580936 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349713585 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349449207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351004857 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34897336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.350956958 seconds)
  done (took 29.634198503 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.35312148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.350764945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.349785647 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.353799105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349717696 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.35365043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.350454626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353604356 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353607376 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349349175 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.354720823 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35341367 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.350777164 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.35026115 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350895965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353853084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353443538 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352295016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.354299606 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352125633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354754556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35114228 seconds)
  done (took 31.03668461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.356505672 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.354734148 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.354957851 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.351575008 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.354571663 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.352503739 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.354857195 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.354968875 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.354304672 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.356098538 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.352615319 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.356406268 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.363328137 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.361184907 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.358190704 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.354433494 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.499009716 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.354672697 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.356123226 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.356100617 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.352746237 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.362365457 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.35353062 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.353952682 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.353806286 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.355968248 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.356456685 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.357804419 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.355312367 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.358836851 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.362245368 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.356396256 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356917796 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.359335351 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.35624784 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.357966587 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.360615481 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.357899084 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.354421361 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.356386273 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.368293457 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.381321742 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.358106273 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.364547689 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.356830203 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.356388064 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.360596207 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.365725825 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.354451689 seconds)
  done (took 67.952340849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.356758095 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.356987653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.354310676 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356698575 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.357885428 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.357507847 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.357594737 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.35787721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.354241121 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.35402064 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.357163707 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.354559973 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.355352059 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.357893632 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.357097527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.356028095 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.354727065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.356105852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.354740099 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.356161766 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.355631326 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.357642103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.358002586 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.355796819 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.357787923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.356535231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.355904656 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.358615187 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.357096088 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.356520013 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.358097208 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.358612174 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.358885944 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.357118664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.355921983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.359390191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.359106375 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.356245697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.358653997 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.357379147 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.359726373 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.359909258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.359920568 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.360318594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.357804844 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.356521637 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.356283914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.356889028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.357020224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.360258244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.35920357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.35721684 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.360751122 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.35874311 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.359734875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.361295413 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.358010685 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.358009242 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.360372219 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.358015366 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.357910443 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.359233496 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.358698955 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.360525807 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.361295391 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.358215005 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.358026258 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.360332815 seconds)
  done (took 93.615763863 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360348905 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.361958158 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360609772 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360768172 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36135507 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36120569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361346339 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.361174778 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.36081436 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362057664 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360990849 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.36177812 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.361796493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.361696127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.360730167 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362435421 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.361503495 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362477592 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361408066 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362232813 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.362740773 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.362503847 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.362606065 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.362122075 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364115213 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.363029084 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36271778 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.363025635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362337611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.362778525 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.363759626 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.362493153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.362096449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.362708814 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.363044165 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.363160284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362856956 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36265171 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.363675646 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.364158846 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364113242 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.364007615 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363837653 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.362366396 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364270971 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.363141141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364306102 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.365174447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.364022562 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362781313 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.364836765 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.363391036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363910029 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364053976 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363416863 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.362912508 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363749046 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364219754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364842627 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.365160975 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36525701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.365164874 seconds)
  done (took 85.792418867 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365084059 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.364266262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.361750833 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.36098691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.365110558 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.361330815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.364341587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.363795816 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.364002549 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.363706559 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364109126 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361386645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360784452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364322725 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361235536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361423434 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362067544 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361346064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364034606 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.361566694 seconds)
  done (took 28.554768873 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.362577428 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.364291848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.362478695 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3623496 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.364879465 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362459945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.364986278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364867358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363038453 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366378344 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365650851 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.365837358 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36291202 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.363099198 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366379003 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.362432063 seconds)
  done (took 23.122642439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.36386378 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.365458302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.36629759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.367660435 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.363662263 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.362251269 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.366771177 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.363211788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.36273635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.365283491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.366443579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.364549895 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366627456 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.366350846 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.363897017 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.366598891 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.363257345 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.364268281 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.365952241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.366890265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.365676968 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.363444431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367092722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.366069493 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.364965262 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.364710019 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.364274468 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365004356 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.364701016 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.366473661 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.36620175 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.364627643 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.366077005 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.364214668 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.367068554 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.364932905 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.36719839 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.366948566 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.367106108 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.366952371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.367335357 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.365406374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.368679513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.367561821 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.364473311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.367622096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.365177622 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.367901049 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.36567745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.365813001 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.367917001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.368558724 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.368895105 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369518006 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.367626108 seconds)
  done (took 76.42572886 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36928134 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368756574 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.365763759 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.367776316 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367241964 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.366714024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.369044375 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.36724848 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365453021 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368176207 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366972771 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.368053489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366615286 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368885074 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.367485495 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368864605 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.366670291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.367409057 seconds)
  done (took 25.918191874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.36628754 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.367648865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.369937189 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.367547404 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.366844005 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.368847104 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367247794 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.370129506 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369237642 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.367157062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367346897 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.369329106 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368967859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.370815416 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.367675524 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366918809 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.369479117 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370477383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.366788493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367007788 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370542655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.370303539 seconds)
  done (took 31.409591818 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.370107626 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.368523504 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.38863504 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.416002849 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.401906667 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.36945147 seconds)
  done (took 9.618025991 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370179696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370297232 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366668961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371265325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370467588 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367731768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367949862 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368695099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371052661 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368275115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367990209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370294721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370941939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368102263 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371163607 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371001725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367771708 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368656171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370159414 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371535446 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368579302 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37126294 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367598966 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368991072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369861414 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368380308 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372874803 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369129148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370205813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371336719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372069647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369037143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371554776 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368831358 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372681842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371794746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369006997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372856228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371984413 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37086847 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3719528 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372803875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37265954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370140701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372879538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370349084 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370244869 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369279941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370277005 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372784321 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372292585 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371245486 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374398985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373233697 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373474018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372883387 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370609699 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370852837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372464443 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371230898 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370585002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373055154 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371560816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37173133 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373718993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371230491 seconds)
  done (took 91.772755421 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372205092 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371271479 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372543163 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371998108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372213488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372197274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372016471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371460509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372526434 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372438332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375028932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372385874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372338306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373147724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372768467 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372211582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372683857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372909713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372670095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375176991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373108066 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373214114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374093149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373456336 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372990444 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3755652 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373509056 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373189579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372871574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372973893 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374504931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37293615 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372486982 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.373371124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373417585 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374577486 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373432405 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373673967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374252528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37601415 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374272988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376965465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372745785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374136476 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374372533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374737311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374243885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374386919 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373164344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373968283 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375672527 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375161466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375477136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374970121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375215462 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373955829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374898775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374786054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376306117 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377422788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37533156 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374579897 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378402455 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372798501 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375796074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374647154 seconds)
  done (took 91.984340668 seconds)
done (took 1863.783779617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.486877927 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.406776555 seconds)
  done (took 14.204684436 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.539602265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.490973946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.375047627 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.376601874 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.37709852 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.373409638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.395848241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.376615102 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.376466371 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.376066676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.376672608 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.56421975 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.378601258 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.376882421 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.376515053 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.468720323 seconds)
  done (took 43.920128101 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.404116716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.383500806 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.495836076 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.396341469 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.403133904 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.568435617 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.435264034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.38204037 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.558556859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.419012156 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.956485933 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.403640167 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.379161562 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.508970263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.399623764 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.568197417 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.634591657 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.039129501 seconds)
  done (took 31.647249914 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.842341465 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.382670479 seconds)
  done (took 9.537743118 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.395396144 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.436992571 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.407607996 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.413011904 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.425686072 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.42453988 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.376110286 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.443267008 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.401080169 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.402289421 seconds)
  done (took 65.445504468 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.402365743 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.383335704 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.38242277 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.380787387 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.373307064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.373499074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.380888809 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.376681285 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.106179816 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.512912797 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.399689922 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.387684227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.380482653 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.381997611 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.380749918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.417969009 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508617723 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.379510278 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.377867123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.388655199 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.383034767 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.520875538 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.427915064 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381381389 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.513179196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.109359304 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.385132366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.387666685 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.499782807 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.379300549 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.382048349 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.382166166 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.384605641 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.968885934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.923488981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.395567719 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.407009565 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.388852601 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.380186516 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.587148904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384159244 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.388145382 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.389093253 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.907176863 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.547102296 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.498890252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.702866677 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.383201057 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.384053944 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.446723553 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.383830288 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.384825438 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.412873035 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.18094937 seconds)
  done (took 114.575041654 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.418092911 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.866006624 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54682856 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.397141532 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.180072299 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046227003 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.378489119 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.676073148 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390824765 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.378513351 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670512844 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896412551 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.383276658 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.386774695 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.432449273 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.435959226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.379116994 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.176634599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.379686403 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.381628593 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802649257 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.396290985 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.377832021 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.416903512 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.418352962 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864566474 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.91726743 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.870362199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.383265803 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.378024789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85730156 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.377679024 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.431571074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.378936565 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.662599068 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.759906507 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.736580515 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.383398865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.392642743 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.378656897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.395666494 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859955587 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.745514227 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.379304071 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.39551126 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.881196927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.379600803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.386122819 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.384144594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581995884 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.329164964 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.381451285 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.878288762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.378644466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.719865051 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.449519744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.423889834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.894716998 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.381347555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.489631433 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382506997 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.381925163 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384123455 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.383951589 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.382809464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.750626547 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795140804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.382629007 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.753822291 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852183898 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.380674088 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914500092 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.304669727 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.383560498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.419453414 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.38003797 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.99882275 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894171471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.424028091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379972141 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.737285767 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.384403867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.670936706 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.396553135 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.395331296 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814642034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.402983108 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.390135705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.380875811 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.379061798 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.008851263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.382850563 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.675558239 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.414450427 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.38045677 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.381027084 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.391609625 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388054156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.38062636 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.388207453 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914067296 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.389034578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.696248547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.404479827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.382359554 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.394339026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.384120629 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.383905053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.601784168 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.883527839 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.386737534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382335075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.380601693 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.389732782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.646070344 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.385412516 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.704658954 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.383493854 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.390579149 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.381976444 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.09825168 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.406716717 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.381390918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.386576784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243085557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.595026108 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.40263864 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.38230164 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.383435434 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.395553554 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.763835959 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.383696467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.420437962 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.385489567 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096856134 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.40834544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.420158715 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.986708383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.388547914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.372597216 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.401534262 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.386087722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.695549526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.669682983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690899058 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.382840346 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.401880907 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.072120237 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.403022939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533993086 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402479285 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.38786041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586826984 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662440287 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384416868 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.960401621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.381863374 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598743347 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.385959013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721797458 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886064982 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.384937286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390005331 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.100958806 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066459936 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.006468809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.385599824 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.672593029 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.387228052 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.83852027 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.385162072 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.382076713 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.815284804 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.388504572 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.392039084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.384213363 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.385503903 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452459391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.56283585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.781584965 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390432395 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.871622956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.43092352 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.384979658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.386081799 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.388880569 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.737316029 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.436847082 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.387466369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.38689598 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.386313921 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.388484389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880882577 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.347878795 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.387092975 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.543086194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030345379 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.387555718 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.387068114 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.049299018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.663467544 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917775438 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.408593773 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.719305815 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.388895464 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.428155801 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.127388898 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.412215801 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930049466 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.390218873 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.38779009 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.991267722 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.387140463 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445431739 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.385419109 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.386495944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921549041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.386518705 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.388108714 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.790113725 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390056138 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635984824 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.387787946 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.417890923 seconds)
  done (took 1123.305453755 seconds)
done (took 1403.945471008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.386921466 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.386172632 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.375361179 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.388152501 seconds)
  done (took 26.863892953 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.401714301 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.392141384 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.394934211 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.391588714 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.394127735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.393601664 seconds)
  done (took 9.695754561 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.607037245 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.385215406 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.387076529 seconds)
  done (took 19.708154093 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.620142027 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.701520792 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.773432357 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.648307345 seconds)
  done (took 11.072341422 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.395012801 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.395429061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.395993289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.398328275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.398295735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.397713879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.395863662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.396969638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.398312613 seconds)
  done (took 13.8987888 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.4522014 seconds)
done (took 88.016630577 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.489183404 seconds)
    (2/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.900105169 seconds)
    (3/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.427699005 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.409046724 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.581463101 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.254037897 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.646285185 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.690615509 seconds)
    (9/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.51392002 seconds)
    (10/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414910125 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.429647463 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.198104468 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.417612386 seconds)
    (14/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.474514335 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.256407267 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.875770145 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.966740769 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.868022376 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.413824389 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.21045139 seconds)
    (21/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.782674529 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.466427951 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.062382139 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.756627785 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.490950988 seconds)
    (26/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.128053186 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.517103868 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.650768316 seconds)
    (29/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.3754693 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.41700466 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.415452517 seconds)
    (32/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.243651768 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909646689 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.414965472 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.533408642 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.493947257 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.447327858 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.701302403 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.861976128 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.834169155 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.49688388 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.589390113 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.405150179 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.107116657 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.473549294 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.408863796 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.500272632 seconds)
    (48/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.767850122 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.041244805 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.856296069 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.673206336 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.455967026 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.493075154 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.947268149 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.426380235 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.397372075 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.448287249 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.762659059 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.427656464 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.522861082 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.378394721 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.400200211 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.442975985 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.271193405 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.393671693 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.37885815 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.693578899 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.266492601 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.403994649 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.395746374 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.418395213 seconds)
    (72/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4754658 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 6.392610583 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.776295166 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.585208207 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.009015446 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.99928147 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.750928648 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.46984255 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.394300138 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.671067838 seconds)
    (82/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.002812417 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.422144401 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.382219345 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.840140433 seconds)
    (86/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.052814425 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 4.446597651 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.509815277 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.396560614 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.858405417 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.514904728 seconds)
    (92/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.481036796 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.656511474 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.770182379 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.99470997 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.39722624 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.456717129 seconds)
    (98/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.379789242 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.510789074 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.398146825 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.124376633 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.936906391 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.050527213 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.733100422 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.595444324 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.372893127 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.394770056 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.717058216 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.902514677 seconds)
    (110/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.413067662 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.516000028 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.822399475 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.539547214 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.39355729 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.746485879 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.907657863 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.447124486 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.417012107 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 5.442884514 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.398413061 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.661650342 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.396235286 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.397194014 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.205516247 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.313849965 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.655002911 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.396986048 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.064652826 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.728042245 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314362517 seconds)
    (131/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.298351689 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.397763695 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.503700747 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.91595084 seconds)
    (135/309) benchmarking ("sort", Float64, false)...
    done (took 5.728349035 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.526905056 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.421689487 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.810211235 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.73664776 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.199832024 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.396099779 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.4377064 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.831124929 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.991943083 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.214067194 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.423964782 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.381403017 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.058385567 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.408026459 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.76257933 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.398563078 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.79149024 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.422373566 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.032524915 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.438193646 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.764611004 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.821896696 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.810677433 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.424407443 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.971451873 seconds)
    (161/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.008921579 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.612522216 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.415433137 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.448621732 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.33872557 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.462416327 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.406699651 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.905533057 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.385586599 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.437254101 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.540823529 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.595608773 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.283005985 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.090461882 seconds)
    (175/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.793088306 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.443582282 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.884743568 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.398757913 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.472643074 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.463371626 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.42292626 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.388116883 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.495423581 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.439254051 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.097766617 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.497949925 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.007879488 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.243067138 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.38902788 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.495365522 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.455669583 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.594106631 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.831143373 seconds)
    (194/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.557544595 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.319107427 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.436569895 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.826291653 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.416159055 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.106865176 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.796793618 seconds)
    (201/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.620833522 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.506325734 seconds)
    (203/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.398899383 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.395827344 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.426842917 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.484097505 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.95321208 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.618562024 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.991762423 seconds)
    (210/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.042239879 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.931552617 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.426601764 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.472001828 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.52367842 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.638225767 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.310586863 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.630027939 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.439867241 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.894878516 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.353331658 seconds)
    (221/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.458186356 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.438657772 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.473054586 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.835358893 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.541096733 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.830038927 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.845611744 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.052617084 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.400425847 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.399647735 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.426589532 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.202496091 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.569428876 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.387869543 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.479729127 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.489643887 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.138308177 seconds)
    (238/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.776436217 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.398631219 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.783442287 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.285930774 seconds)
    (242/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.953134778 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.95385614 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.431295357 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.39022266 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.962387743 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.444251579 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.546101581 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.830352485 seconds)
    (250/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.395523665 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.428702939 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.630062978 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.429814622 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.389449308 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.445498783 seconds)
    (256/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.746891357 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.405411031 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.729561863 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.516245684 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.403937168 seconds)
    (261/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.721358962 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.805661794 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.074188259 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.388891271 seconds)
    (265/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.637250621 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.411992113 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.83626396 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.446540169 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.422878104 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.406179968 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.052759663 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.235199909 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.301785542 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.407077082 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.434401116 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.404598072 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.449877796 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.632231499 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.87718125 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.427862267 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.489974206 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.508532755 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.487787385 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.523228203 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.564390979 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.509659834 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.131492803 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.406820995 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.099508568 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.409836168 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.314443015 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.406244289 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.286924329 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.449656917 seconds)
    (295/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.031889216 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.417681295 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.402774307 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.392337196 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.34632169 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.666265052 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.814492393 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20510025 seconds)
    (303/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.057068016 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.970827959 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.431779725 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.115969498 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.416774527 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.489998882 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.351910379 seconds)
  done (took 954.849196084 seconds)
done (took 956.178510948 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.440972393 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433582785 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.417719672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.440278423 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.528949268 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44659397 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.427986421 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.419648044 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.464897806 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.466897369 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.415771215 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.446442651 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.420046931 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.41849281 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.417321169 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432243527 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.480180304 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.41853438 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.434171813 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.430271965 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.434749428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.417387051 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.467027828 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.447598689 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.422135322 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.421250407 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.421684076 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.437215977 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.531822634 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.424208773 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.420357071 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.430555622 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.468114723 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.416749573 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.415213404 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.439115357 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.431645081 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.429731646 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.424559493 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.451188861 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.882375361 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.418912933 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.421471948 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.420538384 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.420326187 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.426060703 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.42098143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.424995367 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.433325281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.433274055 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.87739486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.434617543 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.424590072 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.422169049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.432415232 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.420651666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.424836905 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436404275 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.439870074 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435857454 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.460328718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.429402728 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.423840163 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.437767284 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.429236384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.916302259 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.417008001 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.43033286 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.8939068 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.429125081 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.920588237 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.429692329 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.42298561 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.435036733 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.453549781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.472047439 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.413776231 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.420221425 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.429500041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.418866521 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.431960489 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433647709 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.426956466 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.422849316 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435530601 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.451496054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.431974835 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.423785237 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.431555788 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.442784014 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.429662056 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.435171735 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.425159367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.416506739 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.43260956 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.426265731 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.426720735 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.425525082 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.427364587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.433555792 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.893753748 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439631441 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.419506027 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.420083521 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.422952694 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.437678992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.891787961 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.423883116 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.447149902 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.471677063 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.426216901 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.46679365 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.42719369 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43910126 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.434090513 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.427756352 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.420297074 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.46853256 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.88862493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439669732 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.425422944 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.423638059 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441427951 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.426884211 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.42223603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.480332929 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.426503636 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439315954 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.545703182 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.435755275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.45667088 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.423564338 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.428201621 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.458885711 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.441381584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.456766188 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.428269583 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440688162 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.441291482 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.421554898 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.436226545 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.437054326 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.427230641 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.433973251 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.420373025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.454844027 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.4391151 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438421995 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.446936163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.547560387 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.423095866 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.47112024 seconds)
done (took 239.400048168 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.486063397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.418866603 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.523245898 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.423060129 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.523323008 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.521601365 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.421426629 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.421058143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.418113164 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.801272302 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.420181769 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.421046771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.419624292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.422203313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506526445 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.423630841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.420557152 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.764383155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.424710504 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.49384408 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.41988357 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.422315978 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.424062231 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.803804233 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.419055692 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.420621735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.491189782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.424676192 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.770420361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.423845741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.42038261 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.769783301 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.514449521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.441998448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.434451799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.431781233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.526349486 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.441831064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.504219434 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.504766738 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.52679068 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.465398591 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.417749542 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.424755999 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.426970513 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.426310018 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.424040424 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.451049757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.42102508 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.42389323 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.764713164 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.435163469 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.423981763 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.424670801 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.4232321 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.45582979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424652442 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.428183802 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.515070294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.427560167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.488547904 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.807719456 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.805062204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.427656796 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.424447007 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420785362 seconds)
  done (took 154.5456772 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.493966698 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.49939802 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.544768099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.429954523 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.477641212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.549118245 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.430495595 seconds)
  done (took 11.783688534 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434472995 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.428082741 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.477278871 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475946904 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.426646847 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.57331784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423781504 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.437479619 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.425629435 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.480455239 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428302454 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.427458363 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.431141183 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.42673989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471126461 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.438633164 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.543958152 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.428812267 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.42733926 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.578722901 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.424051803 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.434691628 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478481917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.436542228 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.428952035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.43159296 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991995355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428784177 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.42605372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.429292959 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.423115635 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.46623662 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429868639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.430393221 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426073306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.543755891 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.426647545 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426865786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.428815119 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.427909793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.427291912 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.429367533 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.426195762 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422098069 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.429096816 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.452023668 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.426955237 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.427767365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.429216556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.429225089 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.48064474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427299957 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.426373885 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.426809821 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.48471658 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438280682 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.430732751 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.427065516 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426989669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426969398 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.583258853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477998903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.429832991 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.477750078 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427744815 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432426032 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.430463112 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.427937198 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48326813 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428077499 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.477426574 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.425976764 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.581797849 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453789892 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432636865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.436560139 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.435162516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430902731 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.429707391 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.436095579 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.42734549 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.431559723 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.434388836 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423652136 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422575673 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.532130973 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536449768 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.423571759 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.438979132 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.430600968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.424274885 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.482335928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.430498463 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.428025871 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47990844 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.545362822 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.484033785 seconds)
  done (took 162.497477672 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.433968159 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.433782785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.427836177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.445383781 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.429059417 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.431181669 seconds)
  done (took 9.955863089 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.431192094 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.431744857 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.430000156 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.426787911 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.428482102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.430616124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.429677259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.433252116 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.435764465 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.428176604 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.429113324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.430108556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.429189349 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.425450848 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.431674246 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.43057596 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430910625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42713238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.430089566 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429629121 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.525503489 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.432255777 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428966206 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.432701982 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.435091172 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.431577645 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.440927242 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.430674231 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.430151906 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.439411948 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433348535 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.428814083 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.426574874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.439907895 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.437368564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.431673956 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435757751 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.430362268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.42555717 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.434133145 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.434796218 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430449709 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.429884322 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.42791594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.433838425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.440021739 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.437580656 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.441343646 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.434329786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.430307052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.432923072 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.429907214 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.43144527 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.430700124 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.435510153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435036775 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.434830462 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.430815553 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.431344161 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.431182398 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.433229032 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.429873399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.433754689 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.437237548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.437307203 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.433476719 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.435478771 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439270038 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428178579 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43191505 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.436236413 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.429182689 seconds)
  done (took 105.582069106 seconds)
done (took 445.720054137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.424458484 seconds)
  done (took 7.787409639 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.608096183 seconds)
  done (took 7.974022906 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.855951754 seconds)
  done (took 23.227596644 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.510308553 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.545148791 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.443955711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.428829009 seconds)
  done (took 27.294070456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.524874622 seconds)
  done (took 7.893043089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.424721524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.431019056 seconds)
  done (took 14.221099827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.718673286 seconds)
  done (took 8.084791027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.988728801 seconds)
  done (took 8.360317265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.443607043 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.427200707 seconds)
  done (took 14.507904002 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.410694271 seconds)
  done (took 7.780376531 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.030588784 seconds)
  done (took 9.403781874 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.43305095 seconds)
  done (took 7.808538752 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.510866915 seconds)
  done (took 7.884359986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.804444055 seconds)
  done (took 10.177586203 seconds)
done (took 163.76983354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.434646414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.437075991 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.43582365 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.436976276 seconds)
  done (took 27.117520886 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.475460331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.475581683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.478093668 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.486150202 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.478106944 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.494221249 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.469023079 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.467910348 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.484674646 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.474194195 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.478719319 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.477664139 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.474117994 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.467867725 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.474138139 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.475089396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.484835091 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.474749689 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.465941049 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.476490704 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.441434962 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.485133826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.479201443 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.443478872 seconds)
  done (took 36.758120967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.636294782 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.512006811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.595649948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.493775806 seconds)
  done (took 7.610523657 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.493578017 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.495782805 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.510386106 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.54577852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571328547 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.50508679 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.465429794 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.464551211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.448700042 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.494127459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.57084503 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.510602377 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.583013887 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.442041846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.650642895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.441547735 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.444014552 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.49432438 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.546989253 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.578400649 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.443152904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.49551321 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.499124926 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.514239793 seconds)
  done (took 37.581858992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.443472614 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.451247445 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.447763823 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.441987571 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.442909977 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.44248189 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.449886231 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.443824898 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.464506821 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.444545366 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.442579147 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.442262173 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.441811501 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.442582755 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.443339005 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.45613762 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.454878085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.444759376 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.446711674 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.448211231 seconds)
  done (took 30.31124673 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.437690422 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.359546284 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.788660103 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.693505718 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.438300473 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.438669416 seconds)
  done (took 29.531286802 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.51794563 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.65943087 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.445181771 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.829714968 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902155609 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.444351491 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.445210653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.693275988 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033210718 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.031837089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.505912029 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.51761491 seconds)
  done (took 21.403049912 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.453333829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.440027364 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.452097548 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.455405772 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.505202293 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.449368732 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.452549141 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.439243535 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.506681741 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.508853273 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.450737671 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.505338826 seconds)
  done (took 38.996802888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527912717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489453696 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.419770395 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399906214 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.823944658 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650898757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359211732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92406567 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.444216602 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714693094 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447844267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532202716 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.694249281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440617404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.442963657 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.514738097 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666929109 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981954004 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441258838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667976865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466373638 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441661175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857942754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.470013148 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654333633 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.579725717 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.703317618 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441199802 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741516687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454829555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45318413 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44095434 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717164764 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125395826 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536865592 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451560332 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23525293 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15639835 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.445459717 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.764041426 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451136092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445504849 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450892924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441871184 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375676404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444770685 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931165968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.449011829 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.152264027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442530436 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452963286 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537643347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.447542683 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261893859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602009794 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443379929 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.442526461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449661037 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015006655 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257264561 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455257894 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.380623827 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.913400986 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763065235 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118505667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.545466478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.445705185 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446319347 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379058345 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.733655503 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461983873 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580434386 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.464871156 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1021299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209676241 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456307144 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.376193321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029585611 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443458053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.380733666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673544857 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443611901 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384606475 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.401515242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.377369815 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19585051 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453069349 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.911443563 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453249362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928535197 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.456770995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461457024 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467866948 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.669967044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.328975905 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444986135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.444812724 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564289461 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466218625 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923812374 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380309636 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.44745782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703357031 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.656466921 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453365905 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.980481266 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697986486 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446556947 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.46253372 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460037828 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.456622411 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099747669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459648715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25226645 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463627281 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446263737 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240484238 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458902644 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.54725749 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458890645 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714534667 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278784359 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447239127 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528825898 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448580351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448721949 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.763499551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962965766 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447158096 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.449631029 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460119458 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.456866751 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.448825096 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405006104 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.444128834 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462639931 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.449168579 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672086134 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446818678 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724160252 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381440875 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585184714 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547168208 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.670652534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.741724972 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.449188561 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707204628 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460676913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448980064 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461990715 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465288668 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546575989 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47032165 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.452464565 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704772288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.451267877 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.45140485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.783403401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453247039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45630456 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.454344111 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42375487 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091252897 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420371817 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452099724 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344388011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.461922514 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511828038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454577513 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458961918 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.401607627 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51540358 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.45616239 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.452444827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675564325 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45983731 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.780348225 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5293041 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.680730624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107578637 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461834567 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.384179457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.159562092 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.142962492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450252524 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.385506978 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450201477 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459555552 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459934781 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.194128828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10503473 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452256935 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.705660014 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.457594322 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459435696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.454326652 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449995949 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.387448939 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278244949 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468015228 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462538452 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593935451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.464228416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.386311411 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.454023869 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456438954 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450688084 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452075621 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484472926 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.696086448 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018310958 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707821979 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.279361212 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463304512 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.8995431 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.484224018 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.459810079 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458967916 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458325835 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.474282934 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462221473 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.461706163 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.765252761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134498193 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020512629 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231939794 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040712055 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45790402 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.462983599 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452481846 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94646488 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388319893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019954523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657827862 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943816559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405232967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689615555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.75248761 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27756417 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463971438 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682727278 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519375308 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.456378923 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466041269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666610517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487488967 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.465264368 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384295604 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.74003662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738221339 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458162807 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533013681 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945253577 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466588576 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456580377 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.451090324 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.823174246 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641648086 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165352026 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.631609838 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465718505 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456641144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96294478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458555358 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.679604364 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162057648 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464650351 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.691387582 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394864774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4639819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.46418803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.454994967 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.904292719 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.467395132 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.712948114 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46585814 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388742175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461335015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060064796 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.316623151 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.461902636 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455457802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248533537 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471043792 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758504673 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.458901544 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.38885478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460578671 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390205199 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389677866 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.149432557 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457921124 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425907742 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999980382 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.963078672 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600206764 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47761088 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307505273 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710060444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.470568994 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109199944 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681759086 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.484764715 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479723835 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.557035947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472766669 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.443412751 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456071851 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.692121746 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428318564 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.68054987 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.421796815 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.3606704 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455083942 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670031064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456225943 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457403901 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725273195 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.165403304 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.478870044 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265328322 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481052226 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473722709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379895819 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.927453199 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465794798 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535269272 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4692091 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.468527342 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.468893231 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645461428 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464624662 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459963689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.471386829 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549889552 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317080089 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.393214697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.463886146 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104575756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252943246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126571172 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472158551 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457363468 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46485628 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394176013 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606656344 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.684433518 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731293741 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577361302 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.098944234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481865102 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464534081 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462910136 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671030255 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731415556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351585168 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464755094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475040883 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.459924958 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468476381 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.669828462 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008775896 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051028128 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57907659 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463577877 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94539789 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733807075 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458791504 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459295816 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053941202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.461852608 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.872375887 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.46230769 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465949972 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607332209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.47129886 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148832586 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.471174064 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.620319874 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234706413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747294479 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71698475 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.007940081 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47025302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127955018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234680249 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724063879 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525789793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468889418 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.584232796 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61095467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.473418095 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462378101 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460976114 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309556251 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.170600563 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.470741118 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126664996 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725805175 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.45848284 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.468953734 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485558644 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.469868312 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.685649052 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23122024 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685708654 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471500103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465431437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278739079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129269437 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476229359 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39678901 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.464894965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726035945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697055595 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482300897 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.914240174 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.172646885 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058464763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.435651043 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483056536 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471531877 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236950341 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131547053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.409951023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010624764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022303411 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477286462 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739422032 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.467391908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.475692263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740106271 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.466126941 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462629791 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47842173 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.130248755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297559815 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.471967056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777206188 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.400846019 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.809488822 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249118239 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40061703 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463014296 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.667778211 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.464234027 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584450883 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472361644 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.477493097 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470720972 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.195463949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743967795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.467604836 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.465881731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.461733065 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466987926 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473582732 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75150421 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469671744 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.127380979 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.818150367 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718743936 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.479035216 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.451534244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.467732905 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465642571 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457998996 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.669437257 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.201900724 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057877767 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.466749244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.47692568 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.468425211 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.681764971 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677359735 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.469215545 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478085592 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468219307 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481689659 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.370234197 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972131265 seconds)
  done (took 1665.461595195 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.507283632 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.505647499 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.486747052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.491057719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481234534 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477061826 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.522839834 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493488209 seconds)
  done (took 53.369571016 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.473802936 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.719351295 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.495571894 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.468583558 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.476308356 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.464193107 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935261685 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.480184554 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.474334211 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.47455586 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.474934506 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.480611758 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.137557613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.474473533 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.480226993 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.459538336 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.474253152 seconds)
  done (took 67.853613916 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.481257984 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.79487169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.48061801 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.46774428 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.793167274 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.472059051 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.706514131 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.518472863 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.469713632 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.718184314 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.138328003 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.495986668 seconds)
  done (took 81.941729945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.475040726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.473455819 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.474331254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.474084433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.475419928 seconds)
  done (took 8.775944538 seconds)
done (took 2108.086428525 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.717670412 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.232144166 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.146570794 seconds)
  done (took 5.782155538 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.613767287 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.663109418 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.803678023 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.826659949 seconds)
  done (took 8.309292366 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.7460493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.846974137 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.656427563 seconds)
  done (took 6.650861876 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.986406592 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.476701363 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.609954568 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.465609434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.465845502 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.465146167 seconds)
  done (took 20.799936072 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.470548301 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.473362333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.470492368 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.473830014 seconds)
  done (took 7.292892446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.451247073 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.261516781 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.453243274 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.466858428 seconds)
  done (took 19.035142518 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.219894326 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.230876859 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.214295963 seconds)
  done (took 8.069031775 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.48169297 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.309467658 seconds)
  done (took 10.194519191 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.799257276 seconds)
  done (took 3.20233014 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.603608992 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.737847275 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.661781274 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.530794601 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.684340239 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.687980728 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.279881122 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.812841793 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.516573306 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.866921728 seconds)
  done (took 30.787144569 seconds)
done (took 134.31700987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.494457947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.488715726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.674273127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.512979133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.700414047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.673889506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.781601207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.476495267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.976926876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.966470748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.470063763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.700728069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.732006789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.490558705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.733778071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877252663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.701626553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.53900731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.155976815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.359221971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.782788584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111724658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.306896056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.129762631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.699810095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.62747956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.687279848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873002592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.33648266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.74394125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.625254251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.470965517 seconds)
  done (took 198.306083485 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.479292064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.468957584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.469318839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.469196687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.48456737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.47101159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.473101679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.471201395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.468922508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.474254481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.485050512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.47616021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.473914518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.470392809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.471699536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.470079021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.476283123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.470717386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.469900473 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.473062848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.473417556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.490118616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.485618504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.480488383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.475967749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472326141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.478451916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.470997143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.484071177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.470771485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.496706329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.472571906 seconds)
  done (took 208.626134735 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.471312268 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.471910721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.487789104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.487314194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.480584316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.477768661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.470951091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.471753102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471629753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.481609212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.470507233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.486315618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.472647297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.47301513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474042779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.472991012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.487037393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.488540834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.474703291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.490553155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.487867723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.473348435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4724238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.494614697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.479181765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.473201076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.485304855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.472662547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.476271012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.472119031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.474232181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.475281051 seconds)
  done (took 208.710105165 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.669943653 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.480858334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.481030318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416678388 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.482390648 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.480595283 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.479359455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.67370247 seconds)
  done (took 15.574506886 seconds)
done (took 632.623070553 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.894583681 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.597311876 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.687620863 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.502125811 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.33937981 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.502362418 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.502173808 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.686687863 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.457130192 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.692255615 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.78477481 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.499685203 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.931208194 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.497749344 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.767954988 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.603066639 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374202269 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.519745254 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.836800557 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.167162859 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.770286194 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.076520574 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.688394899 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.44749592 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.934746444 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.076551864 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.23631544 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.404136706 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.502685647 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.839093095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.317621498 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.490407196 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.567208665 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.547451438 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.600843023 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581774125 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.459812935 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.54575 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.687877197 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.83369546 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.117648994 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.260789524 seconds)
  done (took 99.241859673 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.472143299 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.472398089 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.469581726 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.473183538 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.473650974 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.474528943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.471424569 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.470833555 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.47100402 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.47105033 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.471394517 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.472424601 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.470560302 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.470702287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.471715899 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.470579325 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.473362728 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.473360561 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4715626 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.471902182 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.4724166 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.472372111 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.471700686 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.473178698 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471702083 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.472683755 seconds)
  done (took 39.687397467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.484916549 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.737358981 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.927267017 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.491946527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.483006831 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.488075258 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.570352941 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.486635572 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.489077217 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.486339035 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.647400251 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.488114312 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.521014566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.938295295 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.487608358 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.486285925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.48564475 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.485719294 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.744549192 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.495095822 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.572793465 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.488023798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.571077184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.495695776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.488219902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.486549804 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.490821922 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987048397 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.489103208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.651383781 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.342361017 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.568931775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.942179169 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.941384988 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.348488298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.489489199 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.487422492 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.654133738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.490209361 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.487249848 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.57136101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.488479968 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.939388499 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.138088785 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.503177819 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.486444129 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.023286296 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.653048344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.759533746 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.494931208 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959118355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.489536243 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.48769056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.488731346 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.759032644 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.495091045 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.485568988 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.044080953 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.493743863 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.571986329 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.490073324 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.487770914 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.754072924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.490205993 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.74350083 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.489994195 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.496274366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.488210024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.938597563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.492214977 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.149620883 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.506118376 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.489101872 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6512973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.745538609 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046020203 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.492516447 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.761099927 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961566148 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.571958181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.494093019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.980419122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.576539678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.494390001 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.490342361 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491164096 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.49194681 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.534203227 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.572283378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.085417062 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.152093028 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.062949335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.577039697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.503653917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.489110936 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.047280138 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4931131 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.49031302 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.934375796 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.158914112 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.507109465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.498569208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.150404373 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.509095288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.574889613 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.496205523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.945558848 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.492274771 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.535901866 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.489640462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.496654053 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.493445174 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.575860181 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.494616999 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.491569156 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13207466 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.674708487 seconds)
  done (took 194.572771292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.485041706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.483761467 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.500529345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.48316606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.485147839 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.490434543 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.484692018 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.484705341 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.490117039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.485330985 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.483396424 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.487739519 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.488740338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.486092046 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.493181763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.492493527 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.096329988 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.485967325 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.488523329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.48379734 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.300826996 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.489494801 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.487075815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.484709546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.486106029 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.486208513 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.491533905 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.486927146 seconds)
  done (took 156.493852775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.493177933 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128632047 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.49594838 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.637109602 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.515536977 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.489978352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.635546827 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.555838228 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.493635043 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.491266605 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.492743379 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.833314746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.4946829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.072760086 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.698910699 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.638980189 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.072382817 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.496252231 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.492256126 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.490978008 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.63984322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.505368938 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.833230158 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.09932162 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493782082 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.099408987 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.481686884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.494335302 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.492215319 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.102507009 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.490989408 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.838042213 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.579718794 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.559461889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104342004 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072483144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.075919752 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.654649565 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.494501264 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.492521355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.492558842 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.48349387 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.101055326 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.495507547 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.495098273 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.094834095 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.510594574 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.49603613 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.504327724 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.492001222 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.559929792 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.558594409 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.825585868 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.106556272 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.57806307 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.516176659 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.639551464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.884430063 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.496723051 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.075980885 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.483048627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.13555896 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.498070462 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.483161915 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.494110292 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.499739602 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.659430212 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.641691669 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077047327 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.497593449 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.078614094 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660986821 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.495483948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.494335253 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.496958396 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.106796325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076774967 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.661582704 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.642908936 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.706603999 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.486586863 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.495539475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.485998183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.579866231 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.49547914 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.139087551 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.07954152 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.498656756 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.498152894 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.497284188 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.49871029 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.688519863 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.140695576 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.582723829 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.073571313 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857488781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.843191152 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.498891454 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.560924057 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.496311564 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.843821504 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.500299649 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.559527659 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.948753314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.841999936 seconds)
  done (took 178.240060854 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.761317822 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.757996664 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.592956339 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616417642 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.089788776 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.098456241 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.770578293 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625315794 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.611776238 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.75635957 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.743532494 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.589016037 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699762629 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.578461066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.246450216 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.573106836 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.596066338 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631232579 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.615242564 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.591652652 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.148093452 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.804927984 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.682964718 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.727427994 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.597470612 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.319537496 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.06173887 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.016738778 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.678767444 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.852246509 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.044059182 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667486081 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.493083754 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.223387265 seconds)
  done (took 71.291541458 seconds)
done (took 740.938812015 seconds)
SAVING RESULT...
DONE!
