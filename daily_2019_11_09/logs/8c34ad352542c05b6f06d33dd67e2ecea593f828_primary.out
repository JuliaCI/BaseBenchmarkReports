cset: moving following pidspec: 6493
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337849636 seconds)
loading group "string"... done (took 0.543360835 seconds)
loading group "linalg"... done (took 7.231578057 seconds)
loading group "parallel"... done (took 0.150043707 seconds)
loading group "find"... done (took 1.085814234 seconds)
loading group "tuple"... done (took 1.764452422 seconds)
loading group "dates"... done (took 1.214289502 seconds)
loading group "micro"... done (took 0.212740956 seconds)
loading group "io"... done (took 0.906998948 seconds)
loading group "scalar"... done (took 35.823666415 seconds)
loading group "sparse"... done (took 11.366115196 seconds)
loading group "broadcast"... done (took 0.892216436 seconds)
loading group "union"... done (took 11.706753594 seconds)
loading group "simd"... done (took 4.242359178 seconds)
loading group "random"... done (took 8.678462514 seconds)
loading group "problem"... done (took 1.837763903 seconds)
loading group "array"... done (took 20.075719967 seconds)
loading group "misc"... done (took 1.607894798 seconds)
loading group "sort"... done (took 3.214465129 seconds)
loading group "collection"... done (took 16.429114025 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.472447362 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120913848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112387627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115776591 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142676305 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112564708 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12053173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081975502 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.818349685 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143805919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117264447 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408419806 seconds)
done (took 5.080041508 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170272988 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080942562 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079708038 seconds)
  done (took 1.316074098 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064068067 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.118752068 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065573601 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065663725 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065291153 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065058723 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064912532 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064681533 seconds)
  done (took 1.66552822 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071834646 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067089492 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06723779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067371692 seconds)
  done (took 1.430912718 seconds)
done (took 5.813874744 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754944112 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199958388 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180413156 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392964543 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127416871 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152203987 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644319294 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.299966598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181318845 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084038322 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103154825 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313124751 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106058544 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638695433 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074228864 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089547636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13629088 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423265731 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066403053 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081975265 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087668586 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127306969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086348868 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073426667 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141977943 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066825692 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133850056 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078594119 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065418122 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205006516 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171145467 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646912088 seconds)
  done (took 10.128630433 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094820217 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096689636 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067497747 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13505592 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096378263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06827406 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069706664 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066436298 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086159132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126765691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087832718 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099654814 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064680695 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067757562 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083553207 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202562371 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078696489 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080441184 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069626094 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073931211 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117384446 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07709208 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076662857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076405694 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128123247 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180143331 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095269073 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09674659 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067201351 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07942951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114205107 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126172152 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06561278 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065234128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122884564 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093443105 seconds)
  done (took 4.589030147 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.281244261 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138322835 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088955342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130697557 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06380729 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082717598 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105007126 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064106477 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079542017 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197955338 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.290441162 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.565683101 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109494457 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102722556 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066608733 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067530701 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065765675 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.313158975 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107462308 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103651661 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080555745 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068990982 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06855823 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340124384 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067202381 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063026505 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06741531 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057292971 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122915071 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067252463 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.907001819 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123548446 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065252357 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099436256 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168505499 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087719574 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137551514 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065909266 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062280614 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145444772 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.067840871 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064108375 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080753612 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10073321 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109756363 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063307022 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06469337 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155021359 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06242848 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076043054 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.95426115 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150594068 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073407676 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061478562 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.237970993 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082503569 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066071508 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061602576 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086519137 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167425074 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128504377 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064404031 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063726363 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064919429 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066193803 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351871009 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063083647 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.989488742 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06447018 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073089383 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065874517 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066407415 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069779727 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071433642 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.081638842 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060962199 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.063334239 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071811547 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062987075 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062687272 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063214716 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08100886 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.336851935 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063313975 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06476033 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061243824 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08211042 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092496477 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063099592 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06125299 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095622525 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.063949073 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.276345913 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107113475 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067104232 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085255038 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069301038 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113874739 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067610455 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088725674 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065117422 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064447268 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099937843 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06957888 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098803158 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080542734 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067415814 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.391801077 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06516211 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064069388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06707717 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064568372 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06765808 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067149626 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078769231 seconds)
  done (took 20.749120322 seconds)
done (took 37.904844612 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233384088 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074084454 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074350731 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074630935 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074364277 seconds)
  done (took 1.802899699 seconds)
done (took 3.057138665 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118228099 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097920869 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063468766 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093770682 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063227503 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098554216 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098093075 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079849469 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09826193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063541722 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095607492 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063489387 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063300125 seconds)
  done (took 2.368317496 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081524725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083443262 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069235569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081400943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063029912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081300757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079399297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087629292 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079951659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071564847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06330964 seconds)
  done (took 2.088082863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081388067 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082926467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06879055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08056361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065565032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080695251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080137928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084326644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079983253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072658142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062896818 seconds)
  done (took 2.081943364 seconds)
done (took 7.779865249 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076365836 seconds)
  done (took 1.311131436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584165436 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074178504 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080651089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111467902 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181685769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118980974 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270252291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085719172 seconds)
  done (took 8.921242248 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099356438 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071407377 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072134821 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070809007 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067930415 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06895001 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06843525 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067692877 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071561557 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069850319 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070188278 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067398602 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070051747 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068650442 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068296196 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069047413 seconds)
  done (took 2.445558323 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090846569 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089812389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072115133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07370335 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071353359 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072147073 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073701669 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072912243 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069946176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071525559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073631814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072862352 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070579551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064469431 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073431498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075076511 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070138151 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073307405 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073584445 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074167119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073489553 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063791056 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070636091 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072973551 seconds)
  done (took 3.100676648 seconds)
done (took 17.021701712 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112270882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070706688 seconds)
  done (took 1.426409458 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080574433 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083093678 seconds)
  done (took 1.415736731 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083354659 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065041268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091577389 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078207348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065674287 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065552375 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089023345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065555943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065257243 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065404194 seconds)
  done (took 1.986423293 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068081084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077753614 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070684376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080485731 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073376248 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06389485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072082641 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067534639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077908342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06248634 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071269624 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082017855 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071207234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083942452 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072151877 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069283941 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071010229 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067756778 seconds)
  done (took 2.555888043 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06552338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067455805 seconds)
  done (took 1.387884048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066909581 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063590219 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066838087 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067116182 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063171087 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062305983 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063392556 seconds)
  done (took 1.705285806 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.378039608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109437583 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290106266 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070249228 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081131177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249580344 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065409189 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069929598 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069947858 seconds)
  done (took 2.678225256 seconds)
done (took 14.412367735 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078080898 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084677239 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094517506 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.358118263 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090891908 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064958038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113059925 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190193303 seconds)
done (took 2.341232195 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212304521 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60871975 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385403493 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195843792 seconds)
  done (took 2.446292728 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327528151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085437227 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058438779 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066430302 seconds)
  done (took 1.80428211 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06583035 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068665307 seconds)
  done (took 1.400256719 seconds)
done (took 7.127154107 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066815852 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065427154 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085287887 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063450615 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065368161 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062725847 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06292047 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065472346 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065065997 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065428078 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06772163 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065220423 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063078106 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063074306 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063037288 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065442318 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063380469 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06283141 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062879311 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065420325 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063212626 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065619456 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063016123 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062991298 seconds)
  done (took 2.863982173 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08322597 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066380644 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071459752 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071334479 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069260857 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070420071 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070480466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065988292 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070728529 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067609815 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069315347 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069360994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067599226 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070240433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067381787 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069400458 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070643667 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065737079 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067709874 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06933751 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070488307 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065743464 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069454424 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070254939 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06933741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070393592 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06760324 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065594255 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070499266 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06897848 seconds)
  done (took 3.355524278 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068751706 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062849121 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06398795 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0698129 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063260422 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064193711 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062807254 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06386596 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063819068 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062910189 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064574359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062542066 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062955108 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063998935 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06438105 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066311563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077821093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063362575 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062896485 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063639181 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066031253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063145113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063266565 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063095476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.169868167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062606502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063414413 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062658642 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063447489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062595815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065962437 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065939138 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062408715 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069529296 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066165315 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063453493 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066632135 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062716542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063463363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062994556 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062593983 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062596297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062609524 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069394013 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063166392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064785424 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063264561 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063814073 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063137928 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065315205 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062159428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06251376 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064435899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06382047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066280376 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062202261 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06345617 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062242841 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064015085 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062384171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062102203 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061981682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064734842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063385111 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077106516 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069278338 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062715281 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064238936 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063477036 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065305538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064647996 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075554595 seconds)
  done (took 6.032236896 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090598496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087073471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064540338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064329706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061209334 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063549471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066919238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06354145 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065025583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069297551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063569748 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064732382 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06490539 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075790522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064133625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064622423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06908989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061635791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06366779 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066631116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0634981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066987152 seconds)
  done (took 2.77404487 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152518564 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070040559 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105556634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072416258 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067111108 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072325988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069336702 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069142908 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06909216 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067690877 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067917388 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069426976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066904159 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067305891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067638056 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067974267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069482345 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067815512 seconds)
  done (took 2.642821712 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076849074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066384904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085505003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065983043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065627852 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068127248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070059188 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07368618 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067664273 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065607652 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073646298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067858807 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067487294 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066069913 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067977652 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06538956 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067658176 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065128022 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073448473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069931954 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070462927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073620487 seconds)
  done (took 2.819104849 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07898292 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067841164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082609385 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067972696 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061416083 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063796808 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069389359 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065171983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069088068 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067001301 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065343723 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063642863 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069064749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065732327 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068404576 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065009331 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066758988 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065231249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067626551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061681539 seconds)
  done (took 2.635182309 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085613229 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066944636 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067508637 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075834225 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066645423 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066703706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074569941 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06666674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067044365 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086572917 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06723464 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066578712 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074304776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071368796 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066536657 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074504076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074155764 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074277223 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066654695 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066582672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087066507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066535236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074059774 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066617372 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066595528 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066453247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066645821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071641138 seconds)
  done (took 3.27858593 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066163553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065871603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063362505 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063104786 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062794435 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063151802 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062621944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062649719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064953358 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062906421 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06508881 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065982211 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065725698 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064975907 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065388373 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065213116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065083119 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062572779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062832328 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062605606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065069009 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065785862 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06498777 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062718981 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0632452 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06516319 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062931509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062986872 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065011283 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062706825 seconds)
  done (took 3.213804322 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074276036 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071691298 seconds)
  done (took 1.436683599 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062453792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079360976 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062584626 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069321936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069442198 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066245409 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072782241 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069267793 seconds)
  done (took 1.838382253 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081057735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076069428 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067211924 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079485755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075653411 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081999295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131226938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066426278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072309612 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063811871 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079014267 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064445425 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07132959 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065444891 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07131113 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071716918 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063543231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071589191 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067730463 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064060347 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066673308 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074175004 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068190971 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061774654 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067384179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086756842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076606771 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065948185 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068459465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072660607 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071095166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059778189 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065677917 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065868801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063426642 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074776342 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079892853 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068420047 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073724066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066043904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076013539 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060650838 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069630518 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071679765 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075082803 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065729195 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06623177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060509238 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06321288 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067486383 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060706899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06573418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060824872 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074463948 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068846659 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075822905 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064064567 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066774617 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067880108 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068186885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073789347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067215473 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067941971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065254211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075026365 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069752635 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074171792 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060887664 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059727711 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063676803 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075185507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087785562 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071401159 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066211653 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066346902 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063212859 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068658103 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06639552 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070675777 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071383296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065920266 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070789506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072351026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065397298 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067789141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073514184 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063446128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068414306 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063171516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081079365 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064230584 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063337464 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063459812 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075482477 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068801071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065450455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063234636 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072754519 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060065233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066350138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066597244 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066864724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075320134 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069754874 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07038942 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074695444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072981614 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065546191 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067812427 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06225195 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066166987 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064525552 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071988184 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05994191 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068300339 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065913064 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065758464 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199008927 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064614114 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066906699 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074070784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071885549 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064894824 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062895267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068985806 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066109374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069676154 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074343398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065721744 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061422683 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061599881 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06968677 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06661104 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069642881 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070554291 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069372237 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060874073 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06510288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070883434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074468042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066066479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066729027 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071791563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067917044 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06526236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072131619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068345787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065295638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071987848 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067573832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061208478 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069254754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068743596 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065430255 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069512099 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06920619 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067996926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066875901 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064529323 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073913613 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067351639 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065097401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066358623 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06441413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076411631 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068549035 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061437892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063630455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074823425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063603813 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065495808 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064926917 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068495588 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066660776 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06502204 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065828228 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067225606 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076053993 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069698351 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066403321 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070930919 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076509626 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065511593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067984692 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065913186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066930968 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06611812 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074362391 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070566914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070391868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067324226 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062574983 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070732016 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072953994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064625224 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063266105 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064679317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069725859 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071019397 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069684399 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066150233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063481117 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066031423 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068786617 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067932791 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065165086 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064713676 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071750701 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064079217 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072486366 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066710328 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075196759 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068696904 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060915058 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068637344 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063687593 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071259288 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060746729 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063409341 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064567364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066602816 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06469514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06810096 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059714942 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07202313 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072247088 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065970108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06464418 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065039978 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071755862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066705476 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068999857 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068881936 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071649755 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075525548 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064822692 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068495299 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07544772 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.19326148 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060810953 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07141567 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064763588 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065307495 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065154338 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064383854 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069138084 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07505067 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073276389 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060117847 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068661776 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065357301 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065205898 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062133927 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070938236 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068861772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066779739 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073087991 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067405825 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066899459 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070208048 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065905298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066886052 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067870652 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069189098 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066812325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068516701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066052159 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068746723 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06544562 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064286803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068067645 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066645735 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067279403 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071071992 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065946362 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066200818 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068484973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06690874 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066542874 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066566089 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065412158 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068956148 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067707035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066438601 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067956336 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06123161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072727402 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066113186 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073489642 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066287327 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063306515 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073170113 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068119789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07185904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06686909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06659565 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067818276 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065417299 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068480688 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073043273 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063673469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07607531 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07373151 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067086634 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068488749 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06610774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067362526 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064768002 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066231069 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067007475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066152289 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065674184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070423997 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068139958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065808686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067464989 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066633135 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065697955 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066911403 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060772487 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065260261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065473241 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065731581 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075305631 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066602288 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065439014 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06525639 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0668299 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064872569 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062619467 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074025386 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075356752 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066428761 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072541377 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065242145 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067100161 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075853667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060005668 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0639813 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063560968 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063970219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072711076 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066213064 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074683337 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065676098 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064881154 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06286885 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066269938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064065831 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059778395 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063180181 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069425613 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064490027 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064546342 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065313694 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067450765 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06603492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074376019 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064439076 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066070121 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065705911 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062470925 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.194963265 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065867622 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069149385 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067085487 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064226081 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063641595 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065903996 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066574417 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068164722 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066120662 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067491172 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07507862 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065941345 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069109725 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06939438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061194469 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069316666 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066677212 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065990566 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065375573 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070381783 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069561774 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06676113 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074850912 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066836855 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067176724 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06672445 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064033042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066481947 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065977698 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066224744 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065174899 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067297108 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07431508 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06436844 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069087131 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066325003 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066455276 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072936797 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067185187 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069466346 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072619019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066306229 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067745662 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073911894 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070497562 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069483968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06769006 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067383006 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071615709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065849585 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072204352 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066524037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067491977 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068112151 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06496951 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066362849 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066332986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065987316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072463513 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066323633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065274556 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064720346 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064740982 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067123071 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06913725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073325529 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068576573 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068841174 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061064461 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063168886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067488027 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064805551 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067835614 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06850908 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070968361 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068306617 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065823133 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064666687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074196873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070973374 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069137053 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06346803 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069067671 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066489819 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068663709 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066690876 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065809188 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067078832 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069130919 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067310063 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064907751 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072176194 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068696261 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066393929 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067289203 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06611712 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066006832 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060980385 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065946025 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067559179 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070280629 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068119936 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065915881 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076217707 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063493099 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065862463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069125946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064693073 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070197793 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06059518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06695503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066201622 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066253413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060670536 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06448914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06323955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067406834 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064416598 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060772645 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075223143 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073805553 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067948668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064350381 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063922646 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.191074093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061258228 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065571723 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067753953 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067820077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075500643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065248846 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064771194 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062009597 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066781425 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068852072 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069703603 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06341687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06102717 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065575315 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068986668 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071239091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064530117 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066164484 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069003366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069066217 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064536186 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068976345 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062987372 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069925374 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078690173 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066929313 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06728499 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072488388 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074190131 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067636753 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061728306 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066462801 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0692531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067006039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067310749 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067639596 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080978306 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068993247 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064890134 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064752302 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067889331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06558702 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074034914 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067508239 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066608301 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070294742 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068138581 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075756208 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069068151 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073308183 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068624402 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069017347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06487317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066493447 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064081734 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065321579 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066880483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067322626 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071805051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07505855 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065109118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077010523 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075019774 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067811325 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062897043 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06648784 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064788961 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060939278 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066433502 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06419302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064524028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063932153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064313813 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066387001 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070294681 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066411675 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066328884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065815258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059993076 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068506726 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068233768 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066373023 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062382069 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065580355 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06641842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06947986 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068566295 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063427126 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067258001 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066836612 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066166212 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061242208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071892868 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064881518 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067156713 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064667631 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065591034 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066683096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068945366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070335824 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066457458 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067775786 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069452441 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068178129 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063194243 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062974784 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070697127 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063515401 seconds)
  done (took 42.251386212 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098918015 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062794586 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061184919 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061523673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073328329 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062475839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061367107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062078737 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062729565 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064519415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06132407 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061425358 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070217676 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077144625 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073423847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066341936 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061104607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0628109 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061332902 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062655979 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070221808 seconds)
  done (took 2.771213255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073601796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069802858 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072729853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074536381 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066450851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070426256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072186828 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06992091 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075500818 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066732825 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075233758 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069810521 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06623218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066549764 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066431397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070321717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075190253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06681633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070035914 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071973109 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070159645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071764993 seconds)
  done (took 2.903062342 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06652114 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065120168 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067194595 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060942118 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065362925 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06074459 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076417975 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063461064 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068214907 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064123628 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064072693 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064001953 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067039511 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060965801 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065443469 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063006861 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107173787 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068320199 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065246015 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066209409 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060761134 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067136247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0613484 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061064183 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064307506 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068661885 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065890371 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063450464 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065140859 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064711078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065414456 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063259781 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066722676 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065582903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064281102 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064115996 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0649546 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065297921 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060632019 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063578004 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065961363 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061461759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065681613 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066169978 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063311032 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063332757 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066223152 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064769987 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06027532 seconds)
  done (took 4.564696661 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080099142 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107800901 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067438197 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087499098 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079231604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074767094 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068382286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08808409 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063005234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064069103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080550838 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078587333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065175009 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069526141 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071710809 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065463341 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066154258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064400934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069349295 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064403679 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068846776 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074011955 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079228384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078192338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068511517 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064139489 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064433431 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069172134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0775764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069663571 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069721993 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070296038 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079875343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070506572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064694438 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067315574 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081125325 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065197675 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067656729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063440579 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067311424 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069404484 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071556109 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08121549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06544012 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07036595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065253404 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062627167 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077575018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067297283 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072732837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079062223 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068829397 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065047958 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069265665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07960141 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064917365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063246415 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068150698 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077392241 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062526146 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068587125 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078198783 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066596638 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071873745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07907475 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070042273 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068510122 seconds)
  done (took 6.343634172 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0745049 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072245108 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079824981 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079620322 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071792173 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071596926 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071386569 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071873567 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071572935 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076701033 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072026538 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092470323 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067363924 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074633682 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071640233 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071750603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071892838 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072512047 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071814645 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071829027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071889353 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079671314 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071789916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0794072 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097573269 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067341306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071253337 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071657236 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079427236 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071682758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078704274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071503657 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071642336 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080084723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078552987 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071412025 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064401381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071113518 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072120014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071511284 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066509401 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079654677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071059947 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066889413 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071587128 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070992012 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079278881 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078206404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073552123 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076210365 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071081301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079195732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070956361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071759936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079117241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103259382 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078976873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079221423 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071370249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079219561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079130858 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085435145 seconds)
  done (took 6.022986022 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083146217 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073029471 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076248529 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061112641 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063649373 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069165846 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063602396 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063688402 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073757313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073873906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076334604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069192251 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072083055 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076239099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069156085 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072213151 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069249676 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068913005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073909617 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069141423 seconds)
  done (took 2.788484528 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073327781 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082099589 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066438373 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071460094 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068176654 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070819518 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067287891 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068274523 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066034983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068105757 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075495008 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075383303 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065909988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070850631 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075212353 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070964281 seconds)
  done (took 2.498684585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074719919 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071990902 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079532721 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065482203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063575568 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061875445 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064875331 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060733328 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061844618 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076922206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064874477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067892278 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065323734 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063831967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062244713 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068069761 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061555951 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062650887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065010692 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077200985 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07562019 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063767029 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06607883 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065082264 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065628662 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07001046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064409555 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062847263 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062760012 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06512453 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065473437 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068692399 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062194926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063553293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064142216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062579724 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065048005 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065519401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067791759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065325313 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063605064 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065150123 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064865728 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065995152 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061574853 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065300118 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06163699 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06712709 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062941957 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065092524 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064796914 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067062168 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065556524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071381795 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067590118 seconds)
  done (took 4.994961986 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078290297 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069135283 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061336068 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063689096 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068285664 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067118195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068581506 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067073829 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06719076 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063708334 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067146401 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06829405 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066954767 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068648565 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066865423 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068544023 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061131075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066752388 seconds)
  done (took 2.601954388 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070608772 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066003527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072408015 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065980517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065205589 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067768506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061530698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063830164 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064120398 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064961027 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065194222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067430695 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063830471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06739199 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064808347 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065030441 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067571608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064019654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064941798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061279061 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067377553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06367654 seconds)
  done (took 2.813477629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091103331 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081125358 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137095094 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078015652 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081809224 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070833734 seconds)
  done (took 1.910148934 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089032968 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078580265 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065864751 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087043149 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07284587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066899413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066725079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067161759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075338963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075451761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067029586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075534937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075308823 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074829351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072300381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072771368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066788942 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066705316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065380531 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083520748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066826077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075183542 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066780468 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068588789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066569729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074414393 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074989465 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075136465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066618139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075022593 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072587645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066513872 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075090838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075729379 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068252756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075169965 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066889712 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083764093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072235815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074527748 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06774578 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072619456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075328733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071347786 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074941983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066793742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071707133 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066817338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067175377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084983035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072703032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074642113 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073232935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075633824 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076003364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084880421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075231047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074861148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073079565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077499794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074554999 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072399704 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074350359 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075382972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072643356 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074537243 seconds)
  done (took 6.202576337 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081564389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085247337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067397404 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07595343 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074733992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066516671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066990331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066914398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067002451 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066497353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107164076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06752493 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074910908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075116806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067327876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066980078 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066797993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074720186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066776797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085462785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066921235 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074525451 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074906531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074601846 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075491618 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072668034 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067876208 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066815708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066927246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066768722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072111601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06725972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074741734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066301657 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074813678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067210931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066690122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071505436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067169599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072323599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074837611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083119152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06663811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066616914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07538131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066997443 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066966085 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066689778 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066881415 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066179204 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075381759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075506536 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075430184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074494136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067422447 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067070241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067051295 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0666226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066863361 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07212845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074406974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066439678 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085218193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066978419 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06702965 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074793415 seconds)
  done (took 6.112961268 seconds)
done (took 128.933993694 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181515099 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164949214 seconds)
  done (took 1.716546429 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068005222 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.0960318 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075779663 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127371538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06575984 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099338251 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098296866 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076734909 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065290124 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065211922 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065226633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067808102 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130588409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06573706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065586647 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068455054 seconds)
  done (took 2.68355423 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096123611 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.154983272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098031543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063718059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095728985 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072372192 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063851474 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074071327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070226921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064180823 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071877185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069872535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064239252 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069672841 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069869768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071975069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064406674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072057844 seconds)
  done (took 2.79195998 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100567103 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090664042 seconds)
  done (took 1.578492616 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153021083 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104090018 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142079039 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340701932 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166476168 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226659874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126020821 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127039081 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116136047 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123196573 seconds)
  done (took 3.008760212 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096765226 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150911388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252962056 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113357058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071277433 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094124376 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115341311 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076989741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079576068 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079641018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079545654 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075704192 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097450455 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072331636 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072385605 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074981299 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101126419 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071291705 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073129233 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075676479 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097954196 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065207545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072414589 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071840423 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07647834 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076244751 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064668099 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064797165 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075620031 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073140514 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075883323 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092600243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076556922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105917748 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069688969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10794823 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075669881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073050069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07321009 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072918124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077703361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077545479 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071023311 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075000486 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064376103 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075522955 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064775015 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064650391 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077165979 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066158847 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077326635 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076346823 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106598557 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066347066 seconds)
  done (took 5.933656889 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100793765 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10318093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071835851 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109444401 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098802883 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071498892 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099933373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092397627 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101981556 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069879447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067818213 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070294132 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081424223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082631576 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110592945 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103354509 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072718294 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070769469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102682901 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102144585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067873281 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093233132 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088416389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100501057 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066683636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06934124 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067124053 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069515103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076064936 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077457675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0693233 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079889692 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084070704 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077770887 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066702425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067083967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067670054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079472013 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078846208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078229231 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077344842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067019548 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067186564 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068831834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069779598 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067400482 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078527812 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079931584 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078034212 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06883887 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069076384 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06730387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068808154 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079804485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07737355 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080400687 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079079752 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067823794 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067610902 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071434828 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080195169 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078465419 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078583414 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068557975 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078443152 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067337943 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079173301 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083468423 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067435496 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069253137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067426034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06871973 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068901416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077817434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077283933 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068786875 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068892234 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06789358 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080001513 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078593964 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067756313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076521923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066660868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067773663 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069183671 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069226999 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0777816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079724618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069493622 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068249987 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069619137 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068509263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066772541 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076814322 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08027984 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078406018 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077920208 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068803867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078529853 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078031727 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069173947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078533109 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06706779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069047729 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197016661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079284235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078276313 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080425167 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070261348 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067387817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078207922 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081341061 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068719694 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078670469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081244306 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07894395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068192305 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081377429 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068577233 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080095882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069289986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079910477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068575186 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079672402 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068745889 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068192805 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068548963 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079660035 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069513664 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068257735 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068759601 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069618553 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079282748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081908569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070401003 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080839293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078522194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071488793 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079437937 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068231339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079370709 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069670502 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069944555 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067232092 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081517342 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068353513 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068027182 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069843163 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080584073 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06769053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080184935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077730962 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067342747 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080496166 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080842389 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07666392 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079899754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0697818 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073746527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068227854 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068944622 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077682302 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079382999 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069977046 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068580384 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078318742 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079236509 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066993054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077293311 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078758876 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078675449 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067874765 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068784575 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079944254 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080520347 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07816829 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077536262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078107391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067694401 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077062565 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077710188 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067168844 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083105361 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067275194 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082138931 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07864576 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076183598 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078077162 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079980535 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079918761 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079539687 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082266419 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067164149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067323801 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079482968 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067694285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068603207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078047696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068680633 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068767871 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082179568 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068131316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078883259 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066846374 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078441189 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065950818 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068761028 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082098462 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066712164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068329074 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077808532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068018315 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075766233 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078348182 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07663538 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066128418 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068367047 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07751201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076397602 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066340716 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066372215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06891709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075570163 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074637393 seconds)
  done (took 18.406659166 seconds)
done (took 37.514283866 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207457877 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152331044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196163472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117320807 seconds)
  done (took 2.159125464 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120856753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099865795 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094044804 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064096557 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101798958 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064344033 seconds)
  done (took 1.96914548 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30988944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209330376 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181460425 seconds)
  done (took 2.120647823 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197408489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185397277 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389982225 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251031288 seconds)
  done (took 2.550613311 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14258358 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088610358 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066648075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081742449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133978297 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159788816 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10063078 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124862487 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07730294 seconds)
  done (took 2.446542748 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14538678 seconds)
done (took 12.841455046 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179230598 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123170828 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108901176 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100146438 seconds)
    (5/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076878436 seconds)
    (6/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072142916 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.17512876 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182477735 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07221801 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179630547 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070764092 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152360369 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14775297 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217122526 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073122149 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167248325 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068808019 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102115855 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073154494 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076609177 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073790677 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070656339 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 0.147349341 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09522744 seconds)
    (25/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100563696 seconds)
    (26/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076437426 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074860348 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167007395 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089092051 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.218941185 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107259991 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135985019 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087009262 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077415798 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099161674 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.149496855 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167968608 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071826382 seconds)
    (39/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084542145 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.148647289 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163173966 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088241384 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189163758 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086661195 seconds)
    (45/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06684879 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073021506 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088028785 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087366454 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06643329 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184218633 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091788057 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149795645 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072057333 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157208082 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194918155 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08548179 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.148779714 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075117685 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064455459 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134187029 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081706999 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087028901 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073916681 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05226957 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195121917 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11371105 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.065483477 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.204681636 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.174114558 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126217114 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.155335738 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155869408 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050463685 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.16822518 seconds)
    (75/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.154573129 seconds)
    (76/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107583038 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191214484 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072510498 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.315619817 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122124415 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.280954237 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052674914 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07267514 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194963523 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051105723 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070108741 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051562438 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110084951 seconds)
    (89/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071846122 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094490828 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05226458 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051548578 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08887553 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135166908 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075281518 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068035188 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065160683 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075691819 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070716602 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17322594 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.170767081 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074272525 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067305413 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138242653 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120014459 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051245106 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098092419 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062836328 seconds)
    (109/309) benchmarking ("sort", Bool, false)...
    done (took 0.132075593 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073388252 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071590311 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089739904 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051176739 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071291678 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 0.125910352 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07120006 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173427454 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089422574 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080605685 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070515191 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193830997 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089297443 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07183455 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068346117 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.061367483 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050815434 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064434688 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052692771 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072418621 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071059992 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091541869 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07828121 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050986789 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135541374 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064258748 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148808455 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071327797 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052420733 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064448939 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051948401 seconds)
    (141/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070582982 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053065964 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078603471 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072317634 seconds)
    (145/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09831914 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066408873 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064294115 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050590613 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.09802049 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147088157 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065303172 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076214625 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11548571 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073429764 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169326027 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078724406 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059756699 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.133129909 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08981485 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076285174 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088707015 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060225015 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093285724 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050626265 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090946425 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064921104 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064996191 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071126731 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.123346452 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064452077 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164531012 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094181617 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051333647 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05258542 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063750162 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.155182145 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073026952 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080273522 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050605687 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133762496 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050915885 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092636657 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05178352 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06480478 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050642735 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06331021 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070045718 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080378193 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09316441 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050576849 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089686191 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065343063 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.235356192 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067383916 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051373376 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067477416 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065597376 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141763684 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137773702 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073625955 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072497146 seconds)
    (202/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06196138 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06459329 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185245665 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071516457 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051274048 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108946448 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069317454 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051248037 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070618835 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128895814 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077686414 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064927611 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114110014 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052285367 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072974612 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063811067 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.10537346 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173019455 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06594489 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054130793 seconds)
    (222/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072178442 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098905549 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131176821 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071966585 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064511939 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063794469 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06514336 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090374595 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051064676 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064683553 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067128924 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050965 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128582271 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074824741 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052538102 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149933906 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098925738 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051043743 seconds)
    (240/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064118143 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172336965 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064978607 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065775719 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064875809 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051900545 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051788522 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074947368 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078458921 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065126526 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0851916 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072009248 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06581324 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071029463 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065099863 seconds)
    (255/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069799932 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050601549 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066608364 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086151917 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071953964 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06623624 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08661721 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05261818 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051464907 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060800071 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071806511 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065300349 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050690385 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068205069 seconds)
    (269/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051566118 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066962512 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063542739 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052014521 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051020623 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051836391 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136649784 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072524986 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087168925 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051941549 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072178884 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063608728 seconds)
    (281/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061500027 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063543582 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060569342 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071447159 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065791422 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063186112 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071846519 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060229287 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070688391 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061561506 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088249468 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06721056 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051091031 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071053094 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149251402 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130675405 seconds)
    (297/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061012774 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064382014 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072560184 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064679732 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069841888 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088271309 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069061213 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051906039 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051923194 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109717155 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071162108 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050449567 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065661749 seconds)
  done (took 30.162899819 seconds)
done (took 31.595339382 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08425727 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091291463 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074135941 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091320536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079557384 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075031534 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071205569 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076746529 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078371529 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080127136 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076904349 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054209907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073127887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072850435 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073143425 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089783838 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076964112 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071490111 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07181643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063757283 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071633728 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064732825 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066112527 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05377859 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076505015 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070914543 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0713727 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072793283 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064546609 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06511195 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068012619 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072693563 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064579065 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076718753 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071291872 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072171175 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073691841 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075336622 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066686155 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06480165 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073396851 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064945167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072027536 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072432409 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071075085 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070523298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072636778 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076749927 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090174477 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067431963 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073263904 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07512866 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07518075 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071612871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068389789 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071960407 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069786748 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090309336 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072181143 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067534026 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073040259 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072888627 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070083679 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071817758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072193046 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074206372 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073743135 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070229514 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073674894 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070066257 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064678544 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071823609 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067920484 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065055259 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074591306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075805628 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063649674 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070174231 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071415414 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070074485 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064161169 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066398801 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066449857 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070871059 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066864233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053909185 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06826098 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070554948 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063835453 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07197857 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070849782 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070671975 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065995252 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07434648 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064217624 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06935502 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064378547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064830948 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066230709 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068442554 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064217435 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067666629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073524074 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065874441 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070273369 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078255274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064839027 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07074183 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063977911 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063883152 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078351429 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073667757 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064515365 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066639217 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063895501 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071141922 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063592428 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063856511 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063903029 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064185576 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069978618 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064173805 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06617231 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070715443 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076115184 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063883444 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067347274 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066188646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064191699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069439974 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064601141 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063462897 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.198458693 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060865859 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067095443 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065076231 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072145795 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066921155 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071345861 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065945775 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072642782 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069342816 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070882406 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069397647 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06411031 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058143444 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068388915 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0678617 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066962713 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064874017 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066491694 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065011606 seconds)
done (took 12.323601922 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065790956 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142584255 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09933479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094128337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085030163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06586764 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075730281 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101277459 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067000051 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101765828 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08695362 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083605228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110847293 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064085969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064921386 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06855376 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067151497 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080491829 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100503442 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085501871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1148047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064644604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093363902 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088566303 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08574085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10056151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066061634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068857238 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068561843 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090008544 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085840007 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06885942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06572264 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099035039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091263031 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082660648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065671699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081371729 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065786402 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06494 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066912703 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096814066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080587056 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079028863 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069091245 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068246788 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066421289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082492584 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088046906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077908709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085635595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101613857 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067735237 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065011194 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063883073 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084214026 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064737215 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067725917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065316011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066996483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064891098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068193539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079855053 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080943695 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068746881 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079743172 seconds)
  done (took 6.75958908 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082612871 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088653981 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082281568 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08251542 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064793533 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065536182 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065553189 seconds)
  done (took 2.046945922 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066072095 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086967505 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088230465 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087455545 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083720325 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086551217 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074686607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065550852 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079655083 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067086478 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08655536 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101147313 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066531625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072605159 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089289679 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065724794 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08890151 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065780588 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06865107 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08900222 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067823307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081286531 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06877216 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066206066 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079944605 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065998836 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112258628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070013019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067213133 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06828745 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063660936 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10592648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079728872 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074274095 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065501775 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079691824 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079830253 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064001368 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081447214 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0704464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079132405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065732382 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06629522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063509267 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069889935 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075356211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066423754 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066960421 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068176004 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085314844 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066680666 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079279914 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069674481 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068876018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067693718 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069578756 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075631386 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066427068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085407876 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06656206 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081692624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08224641 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07907971 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08137739 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067799437 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078879095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078928729 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067893486 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066968343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069055937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081909 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06429526 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067052243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075923628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0670424 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088503162 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087899312 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066853146 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074466338 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065853898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065701602 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066214195 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088186205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06790489 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065629508 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070052413 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068782979 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064192467 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064895759 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069096309 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063850231 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067376886 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068468059 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068930784 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068178326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082135389 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068040447 seconds)
  done (took 8.692710532 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068331347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067243553 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068547798 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066622198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067570127 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067003875 seconds)
  done (took 1.942124974 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092972262 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068842293 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079849272 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07191518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10375996 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086049364 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085957574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078299476 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083184412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078332355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086201928 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087908432 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091728307 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072158197 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085534769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07178926 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086717071 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074981109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077364217 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072209202 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085888418 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071966219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072184144 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080737356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074810171 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071212944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066882981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077774943 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077636102 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077955895 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071913135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074762862 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070241807 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077791639 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086173265 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070034074 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071179708 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076380814 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071647211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07503072 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087111431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071981507 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074123639 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077095192 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077322374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069962633 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076361709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075347533 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085470988 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076398695 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076216976 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072081102 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074286457 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075967825 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069479112 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077090258 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076006058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085927836 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071239414 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069803652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068085953 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074544036 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07682116 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074643254 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077572161 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075818595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069734957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071637028 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072079214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07113742 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075998783 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068354003 seconds)
  done (took 7.049387785 seconds)
done (took 27.99647169 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544580048 seconds)
  done (took 2.049625629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594394355 seconds)
  done (took 2.121862086 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.5908563 seconds)
  done (took 8.114613908 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396750924 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496445214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692873748 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130139279 seconds)
  done (took 3.298221027 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676145126 seconds)
  done (took 2.214989088 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207772834 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195789415 seconds)
  done (took 1.949249437 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374320607 seconds)
  done (took 1.902220116 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104289024 seconds)
  done (took 2.633558364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260799101 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163100049 seconds)
  done (took 1.953658175 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461433462 seconds)
  done (took 1.989459736 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.81145787 seconds)
  done (took 6.343524783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212623816 seconds)
  done (took 1.78642905 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238189604 seconds)
  done (took 1.770256224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.679211933 seconds)
  done (took 3.212297473 seconds)
done (took 42.874185443 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078534213 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080192518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079960293 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078039131 seconds)
  done (took 1.836007458 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075702802 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071811425 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075194803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071596624 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07573263 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071713927 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073235997 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076002539 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07133305 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074201244 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071311105 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071302131 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073795167 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073374474 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070079819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073886909 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075521567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071521587 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074647564 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071217208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07016954 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074299487 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074305495 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071117827 seconds)
  done (took 3.287100741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076866826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071823481 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074113132 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070657155 seconds)
  done (took 1.833519881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076150678 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091309811 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088994995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076283633 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091237837 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084827768 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068228138 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068505735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071749283 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076039219 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066974053 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094575318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086561523 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075615071 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078302844 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065618823 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067370336 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085933256 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076355294 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076209826 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068742491 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075858165 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067123942 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086937137 seconds)
  done (took 3.401759227 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076530896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101420011 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076967183 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086124864 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088220976 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064258133 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073508672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088129223 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121221513 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064321638 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068781835 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064280637 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071156422 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064254011 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074961403 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103805338 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106842266 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067799332 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094468358 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064556571 seconds)
  done (took 3.166852116 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071339041 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068429736 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065109805 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068012266 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076906515 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071574733 seconds)
  done (took 1.968207238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067404438 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06606874 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066439923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065520475 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070611855 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06622714 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065882834 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066495406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066248323 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066174553 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065510323 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065026821 seconds)
  done (took 2.338798958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177884481 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067918627 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068257299 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06566713 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069339929 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065328977 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078464121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067119383 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.0888453 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065063217 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065655119 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067512816 seconds)
  done (took 2.490104059 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204005848 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075429857 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234030802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135877555 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110035151 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113943571 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102167513 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112131765 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141564904 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100399278 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166015968 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163626997 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105959759 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135603079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087590713 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096434628 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156277702 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15995956 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102277412 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163465968 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142320235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122582636 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145105529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099975769 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104404468 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120981918 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070186125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079202944 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16880994 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130197847 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145202768 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109569538 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092692733 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174418178 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168623012 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141247605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132866477 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083034295 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10062805 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131936638 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197457754 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087066959 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161519399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242952178 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08042898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133444414 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11938091 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119765855 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106207792 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08925185 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144935991 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18075733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137821871 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086441323 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113873393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113919113 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115293709 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10267089 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180271775 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158766431 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127193082 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070235783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098450602 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151873318 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131187102 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107415067 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12531397 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092901194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132102793 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151914304 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117329122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142564948 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127886689 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087687272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117919932 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138128343 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126843987 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16837916 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123287932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071973118 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123570017 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101896881 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080198689 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139745915 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074662473 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173163578 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096915383 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105158432 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111826189 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107088894 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10752463 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160284896 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142325943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242028664 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065286636 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103395847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119114883 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146357684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086579106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107469775 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115269 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077090987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138607152 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074270956 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121896583 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074469343 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123258339 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131205859 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074142096 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119313014 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099761321 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100222354 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132101703 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158517795 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087854457 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081699599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164926172 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120935988 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104489489 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142063225 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154993578 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097201135 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10151777 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147678149 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177855254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088014727 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160554615 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106006677 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082719878 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086296139 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122355702 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110835878 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120845459 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080972027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117735258 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166024123 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073894376 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09433953 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132125961 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078277255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079633635 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102161996 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09943935 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093559616 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098835502 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103059938 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136153367 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122016396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103133052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266634923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09754069 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16900616 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088705922 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099471121 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102896181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068822247 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135372888 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155072938 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078175425 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162293126 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121668494 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104236354 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118526346 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081884742 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139222908 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078100695 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069590678 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143822791 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109045579 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109197664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148774733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103584606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125939796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118813562 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133833941 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131181914 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127206787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104321859 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087184568 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11042111 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124317553 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071849113 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090136726 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079449766 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103810687 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094664883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081974328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141215298 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123542365 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098653084 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110455635 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095763321 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145329599 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075444177 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127595391 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118384631 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092852731 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149942528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150735191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129483249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097870406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143265542 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068908771 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07306182 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088267496 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263818001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083054572 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083505007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116525836 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145661475 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127688671 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138653249 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109557225 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119254854 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153388218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068445976 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114427473 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146362517 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119865151 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10261219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088844666 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097786888 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140303665 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106883933 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179395987 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112970758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124756445 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150953019 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098019291 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078919595 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101377238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134402906 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103469869 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143143998 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098166814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086692248 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108743833 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073410671 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098724705 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125571294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118862224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133303265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113561788 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131265295 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076238202 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116441078 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119465292 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121781055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063225316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119251937 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15943894 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092522166 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116901498 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151618971 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078134554 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122607176 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318080586 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145100606 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083961611 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109581786 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117056691 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126650955 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119228446 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139851178 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108717748 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133503378 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107896771 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08491093 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086625695 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09889878 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103580753 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093382209 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107210409 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112617492 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093767741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130090426 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101835725 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109519688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116804366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096182216 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088034593 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096937385 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172937229 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118211463 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169839072 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097402838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144628771 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162426006 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073505818 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077827227 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076640158 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138174823 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08299264 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129664824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096191995 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104971566 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122904079 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1409562 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093675379 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067614878 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107297053 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132901459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11107756 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097263563 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103940286 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160902645 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098792435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078427431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111767322 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103128065 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101039351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170595515 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060412384 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238101666 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075266094 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080303586 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127126416 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151623306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07961641 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102564084 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117939687 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10946839 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126729229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10070644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097608633 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112993157 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148615222 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128192889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088949911 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112158269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128719641 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15459788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10373815 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097279469 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1696416 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150652534 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157675689 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08779029 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113138581 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112669105 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106507669 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138245345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082330814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162535049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081063184 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134940921 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10329587 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089586572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128612618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112410436 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087030675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146769946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11708561 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081596033 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076874567 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116847621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119485835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107917796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074052451 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137020752 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071750443 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130391033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167046556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080311393 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103076274 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236963402 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078832368 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108661231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101950159 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089179584 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097908893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172261534 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088590588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148644086 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140896526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112098503 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135498696 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09883973 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635137695 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077022135 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151443663 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115464336 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171962231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096673148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11662753 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107492258 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122893262 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142530302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104402503 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173038836 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131561867 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11455632 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078979721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101775607 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101816688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088151566 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103959383 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112047318 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114817506 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093158629 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114261429 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12226878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080895827 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094367185 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154041269 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115421695 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143188276 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138654453 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0837392 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116510158 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137202256 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078960915 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120300955 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150497919 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104456999 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096512082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079070507 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100862627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16659947 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07125949 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156225593 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1154204 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105772308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108959639 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109300049 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126083695 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103648169 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116254534 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089923943 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105494286 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107545766 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078856949 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073894504 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100333894 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107223268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093862673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094331018 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096312747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144992227 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069348002 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091838387 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101065567 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139215275 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167947476 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084936044 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080145064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11390792 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109206287 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108431158 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113693457 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075425108 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078282331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07774373 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075074176 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.102176306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106069718 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098668342 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104138597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152323362 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079054184 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.214671712 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089953757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099023628 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066781098 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074189208 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09092619 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091099037 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101047002 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094876992 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157847766 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.0902454 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085344398 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087100536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070507332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078550527 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120358241 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.359934312 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120232409 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099359224 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06348722 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110700876 seconds)
  done (took 58.037531623 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108701378 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082552971 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097364031 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150129329 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122692942 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212234018 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157262265 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199035988 seconds)
  done (took 2.797695259 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068094733 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094363649 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099532639 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082845311 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06617035 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068477582 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225297789 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081008784 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066247945 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08818568 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079145966 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068587757 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423178392 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065980277 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06733679 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062475333 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06697103 seconds)
  done (took 3.433614919 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362768042 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601611859 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371286512 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072283135 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.829099016 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08941394 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.027311131 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128809529 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073036315 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535782611 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.694844763 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12362232 seconds)
  done (took 18.575039119 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074328201 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068946621 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082539638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082329463 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071521172 seconds)
  done (took 2.042567048 seconds)
done (took 106.7816185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078990134 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399625672 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052844235 seconds)
  done (took 2.143382455 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081746416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083316635 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083133611 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08184242 seconds)
  done (took 2.00503725 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072650234 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075617532 seconds)
  done (took 1.816597749 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221801541 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.155120928 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085573352 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080854126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07718888 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077116899 seconds)
  done (took 1.908599774 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071443554 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073673729 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071691122 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075774271 seconds)
  done (took 1.961311131 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074696578 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052335614 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053569835 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055089105 seconds)
  done (took 1.904818256 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084783666 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077796175 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077451293 seconds)
  done (took 1.909592401 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099275079 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08386565 seconds)
  done (took 1.853323059 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081084596 seconds)
  done (took 1.755391005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098347544 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112292135 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130128102 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109944243 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136640233 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107367625 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084698909 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085995915 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076206927 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086240517 seconds)
  done (took 2.700598679 seconds)
done (took 22.162142302 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077065496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359477104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359158648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087777047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66554988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356371081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999757769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090903991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112035028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066949184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082849461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6465984 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954927448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316150245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941320433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410964448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649245347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067168471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066700181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066907976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986289364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066649041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066795025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066857315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648871689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36969497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06718255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412589811 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066838892 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068626106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353843028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066865849 seconds)
  done (took 16.279334675 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06959567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11645506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072186142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083183647 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070205912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068584235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070515239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068542202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118260728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067246444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083961899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067124843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071270748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067911837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085908066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067234547 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06791474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067806846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067626877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067689047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08517725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067060321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067295447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068270053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067315839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078597485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067973204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067393751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06723193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068959685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06991946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068090844 seconds)
  done (took 4.044796266 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113058671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123215686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073143965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101776456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112201675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069449778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142077897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091542282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125822628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067808855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083450643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067260922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099554377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067732131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086951241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067852212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067994593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067669983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067149399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067813342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085974973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067331244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067476754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06812052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067436315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08013721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067528024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067382656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067813058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069454317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07064861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068078104 seconds)
  done (took 4.295379606 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071551495 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074310526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082068501 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08345668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068887288 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071677543 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071825106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068817172 seconds)
  done (took 2.278380782 seconds)
done (took 28.576427966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077829923 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068779357 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071576869 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080396853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071955532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077714672 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066242062 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073644297 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070861893 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072435827 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074608951 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066430011 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070274581 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066646394 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072740747 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066835228 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078010562 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070808628 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077797977 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078108175 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06855846 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071986211 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07287079 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077874932 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077796486 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077905507 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076114245 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071602672 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068147523 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06907334 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076536031 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082445784 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067956301 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077640925 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066486151 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066602531 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069968478 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06667119 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078333711 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075506046 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068407509 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074842567 seconds)
  done (took 4.721575659 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087210214 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089648956 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083128387 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060527505 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066221876 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064245135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087553425 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058886743 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05881341 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086729726 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055035303 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05833153 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061600631 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053199316 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058145853 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055635839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060545101 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054848754 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058270982 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058378842 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086796986 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053374105 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075792224 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062015518 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057435732 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060964785 seconds)
  done (took 3.406488449 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073320908 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083103835 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086938783 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124924002 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101793032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075779979 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078935491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091186676 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083456606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066224668 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069694289 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092244828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087048661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072392101 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066234707 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083318032 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080594315 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067800831 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07208744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090868719 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083863917 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083387948 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091266917 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079151678 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065895807 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068623967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070233987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080140481 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071226465 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075672682 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070833576 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069855376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068231333 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07752853 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070173129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068015076 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089202386 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075742326 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076453892 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06707023 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069663514 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06747401 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08894105 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134906986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066870469 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073861337 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073795515 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075005862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06700434 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084511221 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077066622 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066164478 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070311176 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06545364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066533425 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079032913 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067934928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068722025 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075452258 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069772496 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087985609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0714521 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081596249 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066616461 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073732358 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065429365 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067453371 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065179492 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.0906365 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067740553 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106438828 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06719861 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067305149 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07510338 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07314048 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072057902 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067093934 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08198655 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077691129 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070067543 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07496043 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069610836 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069705725 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086337894 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068376939 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067846926 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068112503 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072025959 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069274492 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067519525 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07898357 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065904194 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068999354 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082886908 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065550206 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06718126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072755837 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070782794 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065862811 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077072857 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071303908 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067082683 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075343218 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066136931 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06905693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07765707 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072488364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065509148 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071302318 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072217326 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066863042 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067604434 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06958025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068362458 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07422179 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072727287 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070916705 seconds)
  done (took 10.478543552 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15744814 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152075904 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069418225 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143513637 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075508046 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077958305 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145651272 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093630014 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066848063 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068063302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067913743 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108708116 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104351325 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113952398 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077473951 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066997743 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082114559 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112598943 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147066094 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140886998 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082417816 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0759734 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069285809 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067984189 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069904634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077444146 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084437211 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075833871 seconds)
  done (took 4.395921265 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080074451 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09568976 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073377411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08813642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089535676 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066748608 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069230863 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068474201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079505752 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077712039 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067064628 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072123508 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073786313 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070758126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068148398 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073435322 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073932897 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068018561 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070226622 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072355801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076231067 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090364158 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071018256 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066001652 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072484366 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066502859 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064148514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083444228 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067584119 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088952102 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065413927 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074493932 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080374423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067878373 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06643076 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06655922 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066435253 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066546052 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068534571 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065936464 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06539496 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056817192 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066078741 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078480522 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073286626 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055932269 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071625477 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071605195 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071649697 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064619557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069479069 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069604978 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069668007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073238911 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071441012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071680261 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067701472 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.072506699 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074121528 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066622458 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063615028 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065434677 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071011525 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064991693 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074220023 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07073838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065508626 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0665582 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068627322 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072268997 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066641196 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069340415 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064244381 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068493058 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070785484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068301261 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067766022 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065617921 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06641326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066727988 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054963778 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066435898 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052881014 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070058616 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064730978 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065232717 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066741179 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071538584 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079135284 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067737133 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07211305 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067798827 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06615247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069434837 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059671385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069885494 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081870349 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081470638 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066640224 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064808458 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080544793 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071118317 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065629084 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055365078 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074286401 seconds)
  done (took 9.096133767 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08848674 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069426476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082189151 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089366728 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085038256 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073712303 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075425122 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068303807 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080900065 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072746289 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075258412 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067188089 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0761216 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075898107 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068923253 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076031727 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071630457 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081868655 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080781673 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067313636 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075007793 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079377573 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088111213 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078843603 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077453837 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079452771 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088165149 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070892194 seconds)
  done (took 3.894884541 seconds)
done (took 37.67326881 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.765477121 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.944085794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.762261586 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.108837685 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.860349701 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.87777229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.819063674 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.760078024 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.97465743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.80384765 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.01540343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.814008857 seconds)
done (took 65.206128843 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.815553078 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.902057201 seconds)
    (2/2) benchmarking "String"...
    done (took 2.031842527 seconds)
  done (took 5.636010648 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.099105995 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.345348699 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.992832003 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.757779773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.767232913 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.990485906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.557484332 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293183412 seconds)
  done (took 30.405622795 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.867797881 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.990278668 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.425742006 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.459479924 seconds)
  done (took 15.495552417 seconds)
done (took 63.23627727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.772135572 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.799384557 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.776132485 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.74183271 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.816218163 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.761165501 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.387853576 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.828924592 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.757467221 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.743953664 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.758188181 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.185890645 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.768191024 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.289337572 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.758894866 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.757775241 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.831485152 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.366261523 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.911737072 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.762178859 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.762905994 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.928894368 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.765794518 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.772618156 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.771085579 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.760292589 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208180146 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.775285734 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377080337 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.762788737 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.791383944 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.806153867 seconds)
  done (took 203.95880661 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.760846039 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.660846756 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.76212866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.766627888 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.140174585 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945815743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.880455267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.220714001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.765975717 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.7906217 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.930612592 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.763514796 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.943521227 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.710778694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.790408247 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.76167233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.936528477 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.972604203 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.794726205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.937494664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769064764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.804505395 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.741782232 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.920665876 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.763548461 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.791938511 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.793913342 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773917323 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.957972413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.900656035 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.790242076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.78368277 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.945649101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638021479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.77658131 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.77984947 seconds)
  done (took 168.871445627 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.924282078 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.762707749 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.763282584 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762234205 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.767665811 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.761810766 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762275352 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.885443123 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88618146 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.216808155 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.140135086 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.815639314 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601001765 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.765076166 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8298208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.77589493 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.764266391 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.778444681 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.788910911 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766013301 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.763307419 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.885297892 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.778803381 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.867744984 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.769902936 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.763959736 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768447514 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.133108379 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.763779213 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769638419 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.005353929 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.763678386 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.763564112 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661062441 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.163317033 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.855141932 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.76539555 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770414455 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.76447676 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983326573 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.764585487 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.764088316 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.767671887 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945920414 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.766246961 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.888793669 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765724069 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.288518012 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.767117187 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764200805 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.59780377 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.480177056 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.767354431 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.764144506 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767493344 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.763529912 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76552314 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771391525 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.763461928 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.593401651 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.842469453 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.768743358 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.768239102 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770244 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.765271974 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.019447638 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.767041767 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.764923848 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.824343987 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.889536342 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887624123 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.769740765 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835731712 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860594798 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.766405835 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.766458544 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.765240654 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.769438574 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.767458364 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.84854943 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.766796397 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.886689785 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777761373 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.76852735 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818004296 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.834864662 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.766358428 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662324496 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.768749225 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.767663916 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.102428475 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836004311 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.766847424 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.765722839 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.767266167 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890352751 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887906751 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.545083028 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.771702293 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.601856081 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.773424199 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767583789 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.906338251 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768154816 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952096221 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.767967642 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849162732 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771932583 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.768034255 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.767767795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.799414274 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.768338603 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.828104368 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.768253072 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.138346906 seconds)
  done (took 401.954969233 seconds)
done (took 778.467508238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448999432 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.389673711 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502832292 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.411540812 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383954607 seconds)
  done (took 13.848752653 seconds)
done (took 15.557544567 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.852106358 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.860009225 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792292462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.855930121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788269401 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.85603796 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837167926 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.793781262 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825021753 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.794171843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.826892753 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.793690991 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.78373109 seconds)
  done (took 25.370384011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012953229 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.00423605 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84209774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.005122248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.819458919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008845934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938928192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.921159176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.923431612 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789139676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784912093 seconds)
  done (took 22.762852545 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007143152 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.006508684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85057215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.014685552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823231637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003068674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.934429063 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926576694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922799276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787912711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785793896 seconds)
  done (took 22.776384152 seconds)
done (took 72.618665817 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.779296243 seconds)
  done (took 3.492126256 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.801024794 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.940859737 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.783606243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.78218163 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.779214777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.779656096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.78098291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.778866681 seconds)
  done (took 16.140006295 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.781429703 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.779809347 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.780120564 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.781244657 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.778023386 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.779168932 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.778662264 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.777505332 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.781133016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.780195931 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.780130382 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779245812 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.780660277 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.778330572 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.778220452 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.777748135 seconds)
  done (took 30.185707195 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.780148887 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.778440122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778021809 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.77897888 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.778192842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.779476984 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.780431795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.778497926 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.778815879 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.778909413 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.779734038 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781495702 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.780408337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.779689867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.780135856 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.781191713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.779936242 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781975439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.784888314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.78033042 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.781130801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.779150564 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782349461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78125874 seconds)
  done (took 44.440899708 seconds)
done (took 95.969949669 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.668906418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.426276617 seconds)
  done (took 8.811415257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.783503837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.782375774 seconds)
  done (took 5.32615996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.784186487 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.78334583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.783313966 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.782829209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.783732716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.783845566 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.784011476 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.783614487 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.782412883 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.784195772 seconds)
  done (took 19.551533846 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.783831438 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7844676 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.78151342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.783654532 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.783310173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.781502337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.784829783 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.784038502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785363486 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.782521455 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.785793715 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.782096881 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785028958 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.781528516 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.78546902 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.781891154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.781169976 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78293909 seconds)
  done (took 33.817625272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.784850447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.784648396 seconds)
  done (took 5.286904146 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783433408 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783038378 seconds)
    (3/7) benchmarking "month"...
    done (took 1.782516145 seconds)
    (4/7) benchmarking "year"...
    done (took 1.782716126 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.782424668 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.781761623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.783901142 seconds)
  done (took 14.197470032 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.785450997 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.94766468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.016149747 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.43992316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.787175286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.789042103 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.718195392 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.788932432 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.791853939 seconds)
  done (took 19.782396697 seconds)
done (took 108.488885066 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.618753309 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.780003263 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.133225205 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838960698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.8232409 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.075928268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785276179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.002514613 seconds)
done (took 42.775797205 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.776998725 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.326850677 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.355834469 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.50865287 seconds)
  done (took 12.910847517 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.765174205 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.315120531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822067191 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.380411219 seconds)
  done (took 20.049808605 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148576003 seconds)
    (2/2) benchmarking "read"...
    done (took 2.146956412 seconds)
  done (took 6.021033118 seconds)
done (took 47.478253647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786815008 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788073905 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.7868657 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.786951285 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.787243077 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.785588781 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.784171222 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.787237825 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787260176 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.787914352 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.787226863 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7868672 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784683866 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783864668 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786314212 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787321989 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.785127448 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783663914 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.784422272 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788626174 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785009982 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7875504 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.785029253 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.785261875 seconds)
  done (took 44.590282718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.790306274 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.78567895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787468048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788775961 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785313879 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789241356 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.790398893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.786063933 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.78877273 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.788062077 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78488431 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.784976896 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.787716299 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.785706532 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787975076 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.786342551 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.788691509 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78692937 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788656977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.785974038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.788855671 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786485414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.787916255 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789214905 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.78665722 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78772427 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79006831 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787564295 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788775226 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.786262775 seconds)
  done (took 55.349941592 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79429492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.796908464 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.789689169 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.791016134 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.79010909 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790139145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.790197159 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.790009805 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.789839002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.789588623 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.788836065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.790340811 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.790117475 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.789832932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.791707162 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790213442 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.789809788 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.789665811 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.790117527 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.790935744 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.790526861 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790352571 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.790544049 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790770053 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.790245016 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.792090716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.789984296 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.790624232 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.791217556 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.790399974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.790594525 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.792418012 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.790778194 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.790806519 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.790752802 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.790598489 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797048198 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.797603299 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791422893 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.791175768 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.790997521 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.790840677 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.792323447 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791871955 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.791716459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.791245394 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791938248 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792935005 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.791032552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.791639382 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79195063 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792045738 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.792581402 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.79279767 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.792643815 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.791492838 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793206136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792575071 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794868241 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.792510574 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.791809503 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.792704813 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792909744 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.793323882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.794510744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792964199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.79208347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.7921184 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792990737 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.793246338 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794766645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.792247733 seconds)
  done (took 130.727653168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.792753182 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791658973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790646139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.790261324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79045097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793278441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790520105 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793304916 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791422049 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792907804 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793117427 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791155181 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790982064 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794775223 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793408465 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791911343 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793683037 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791681231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.793277813 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795301235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79304094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.79145558 seconds)
  done (took 41.158199903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793920635 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793711034 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.791501613 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794496886 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792556525 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794284926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.795200195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796703429 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795012009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791991311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793672009 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795640701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792111808 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79284989 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79244327 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791886058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794945 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.792836487 seconds)
  done (took 34.013525845 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.792852775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.792513658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794580655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792705748 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.793487703 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795986361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793138678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795521607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.79659895 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79324134 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796438514 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795348551 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.79548152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793701998 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794919206 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79401288 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.795567185 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793684639 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795407575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792836932 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793421777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796387892 seconds)
  done (took 41.206887322 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795129144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796017616 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793476956 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.792857831 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.793058098 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.7963038 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796675192 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.793904024 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796090534 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.796224016 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794195448 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796676994 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.793922398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794447753 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.79358679 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794750975 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79571187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795565248 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79632502 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794621982 seconds)
  done (took 37.62997751 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796410258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795519856 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796601927 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796704216 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795918223 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797251524 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796785185 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796388074 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796862729 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797379794 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796699127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796091306 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797012651 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796485623 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796757403 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796604925 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797615021 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797414569 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796919377 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796704486 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79771621 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796456215 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797108524 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796790222 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796159657 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797271218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796854685 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797057426 seconds)
  done (took 52.04040976 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799192241 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79836204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.796570293 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.795788758 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.796645105 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.796543611 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.797491877 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.796743448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799633655 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796398606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.799366046 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.799465241 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799360783 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.79924692 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798688976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.798871103 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799824929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.797786767 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797562611 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796437155 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799720083 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799416477 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.800100606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796959584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798100576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.799625921 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797476725 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798498826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801472909 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798513784 seconds)
  done (took 55.682794407 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.818891592 seconds)
    (2/2) benchmarking "in"...
    done (took 1.819202014 seconds)
  done (took 5.371164909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.798925295 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800624081 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.800861423 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.798426538 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.799323086 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80134369 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800902746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798060553 seconds)
  done (took 16.132698642 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.799503533 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.800820681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.80001161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.800336617 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.799516218 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.798848086 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804277997 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.79993717 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.800303505 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.800571243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.805827632 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.806563608 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.801647178 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79922648 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.798572516 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801046707 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.800605778 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.800823889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800258127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.801486609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799630325 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802294223 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800568426 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.800226438 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.801822689 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.808624536 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.803767711 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.802081844 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799143508 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.80312082 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79942455 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.799103629 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.801215228 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.800927839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803052094 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.801456044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807698456 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800876064 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.806140819 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801727889 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803686453 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.801070503 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.800999331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.801932463 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801829068 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.80150754 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.803774038 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.800332428 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.800340836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.802542335 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.80808145 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8005459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.802160545 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804675032 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.803022994 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80693229 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.803222785 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.803880386 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.810532398 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.810712683 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.81551803 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.808702013 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802496949 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.80225398 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810387427 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823822522 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807481997 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.802092251 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.801014853 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.803683121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.808486503 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815134317 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.811565407 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.801915341 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80226506 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.804608769 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802633099 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804492141 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809722828 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.805312874 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.802815323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802443263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811803795 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82337099 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.802946269 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.803010786 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.802582224 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.80295093 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.803608783 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813371411 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803135754 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.805477364 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.803356129 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.803215248 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.805957242 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.805061921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.803273231 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80388516 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.80374775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.806297301 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804669563 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807766323 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.811578675 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804576048 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804926609 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.809857653 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.807060372 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803664172 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.81190779 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.807001878 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806237352 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.805924431 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.810778789 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.804442587 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808070238 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.812012136 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.804915516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.806421192 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805070472 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.80632028 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814813285 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.829829991 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.808231964 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.806659624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809117455 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.816081191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805962875 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.808264398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.80807769 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.804862957 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.804278949 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.805797889 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.807895221 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.806424165 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80588239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805438499 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.804952359 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.808794822 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.806297548 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.807265994 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.807488208 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.806686328 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806711406 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.80766554 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80795038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.807690972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.811037868 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.805510994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.807901546 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.807417451 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.80693227 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809009047 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.807505888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807917623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.807290571 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807812722 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.807300644 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.807848092 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809817951 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.809871486 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809984895 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.808607489 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811093637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.807492609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.811320678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.806705545 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.806832405 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.811316698 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.808866887 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.806934349 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.80925834 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.806252909 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.811470281 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.814697853 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.809898397 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808250306 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.810130598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808927938 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808583903 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808214983 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.810877378 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.815959884 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.80870239 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.814960937 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.807884357 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808974606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.810571471 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.808420795 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.807866159 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811035112 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.812451018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.817293568 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822900872 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817140725 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811896518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.814730881 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.811531989 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.812769785 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.812050552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.808930227 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.812690023 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809866408 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808909797 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809452801 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.81044548 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.809718579 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.808962091 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.81140487 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811384799 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.81018705 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812640542 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.811294117 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810274056 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.810518204 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812604091 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810296137 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.81034368 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.810158791 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.808988722 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.809996695 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.812040619 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810987924 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.816906043 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.810206334 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811628303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811158442 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.811241184 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.810185709 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.812309393 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812157785 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.810554836 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816701372 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.810401062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.812505214 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815662093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.810002501 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.810460615 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.813813151 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.814179245 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.811046257 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.814373921 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.820882151 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.813283376 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.812492803 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.812239148 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811974277 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813481043 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.816310453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.810927157 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.812125874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.814188384 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.813319173 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.812265549 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.814534852 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.812612208 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813112007 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812938674 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813951042 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.815221313 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813461642 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.814296118 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.813222112 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.813543929 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815759808 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.820687109 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.817389015 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.813552246 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.81512837 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.815244997 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.818321365 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.813295454 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.813798673 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.812480468 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828124149 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.821244714 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818948453 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.815322945 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817418758 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81851504 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.815295389 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.816856807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81369185 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814031329 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.813570165 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.813326012 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.812448061 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813728535 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.816070315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815242216 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.815477362 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.819646685 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.814941503 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.81284551 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815227153 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.814429324 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.816443118 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.813279918 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.817102467 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.817210815 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816184542 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814210525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.813939576 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820894118 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814443311 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.815345742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.814644672 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.814121942 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.813331402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.816246151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.815160841 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.819344296 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.822452687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.817776883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.823358448 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.816465892 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824920919 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.816099281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.81803629 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.82248991 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.815312069 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.814907185 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.816061914 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.815567857 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821368652 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.815949959 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817222926 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820731913 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816509408 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.816109552 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.817186092 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.817266801 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818237045 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.817091439 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.824265044 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.817361051 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.819172349 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818706587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.816426908 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.817413598 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.818444776 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.815264954 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.819644364 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.817483273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.817848358 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.816275156 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.817205681 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.819174107 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.817811938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.819606417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.817352848 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81915503 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823802775 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.818177186 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821929747 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.81947667 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.824348569 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816959919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823139451 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.819450819 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.818905375 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.818210313 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.819073285 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.818910938 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818018866 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.818982698 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818318783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.819348597 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.824601159 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.819176903 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.82050823 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818248556 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.819609618 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.817859437 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827475734 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842321365 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.820494514 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826169985 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.818068911 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.82049195 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.823138102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.819529277 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.819151151 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.821938802 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828946798 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.829215804 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.820530856 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.819849102 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820505675 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820702608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.82142156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.822283491 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.82043153 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.822234486 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.820061387 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.820230162 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823467319 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.82144285 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.821185906 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820500009 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.821958662 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.828915432 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.820878733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.820001774 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821144824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.822658657 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.820411902 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.820042057 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.820974764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821051676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823511759 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.82134076 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826518528 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.826728051 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.822970882 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.821490068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.821865653 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.820389943 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.821210131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821605038 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.820894589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822159757 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.822376247 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.821761131 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.822269084 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821189583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.824541926 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821904996 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823892189 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825553963 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828553328 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821785595 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.821955787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.824664394 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824806345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.821559157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.822714085 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.829825117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824815598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.831304602 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.829743209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.82759668 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.821316398 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825553139 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.830661393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821925579 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.823001086 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.822613723 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.824415687 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.823983154 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.825927891 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822867111 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.828327422 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.822486472 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.822508625 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829454352 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.823722201 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823755993 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824130087 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.82703376 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.822741868 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.822396995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.825828095 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.822904111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.828649806 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.824536924 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824390031 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825128284 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82251874 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.824434109 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.828163931 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826165182 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.823988287 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.823254771 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.824716661 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823509786 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826080638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.823764578 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.824292069 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823487651 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.827478552 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.831214728 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.823653248 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82574916 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.823977911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826211944 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825802775 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827955687 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.825011036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.825235397 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.82448523 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.825572003 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.825849369 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.827792448 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825257215 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826036672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.828756289 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82657761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828897787 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.835456178 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.834613334 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.825096439 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824676566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.827699703 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.827611582 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825324143 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.826178607 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826434556 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828202081 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829109596 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82616552 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.827757713 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.828777788 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840855767 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.829606807 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827253609 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.825894585 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.8292789 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.827885239 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.825511272 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.828256867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.828558168 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.829139225 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.833620548 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.827453442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833751314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825649322 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.827473002 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.832582498 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.82956659 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.835077156 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.830150737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827706741 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.826377457 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.831346264 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.84264745 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830614925 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835242967 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85579785 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.827172645 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.828629974 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828674285 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82773125 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.827842005 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.829627181 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.829258441 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.831108424 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.830210987 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.828410543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828957767 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.833918421 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.830061501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.830451983 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.83046368 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.827626097 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829050286 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.827527157 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.828149211 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.831013027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.82837104 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.829369906 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.828739235 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.829776645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841772063 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.837963801 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.832263371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.828272599 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.827932388 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.833514122 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.831540355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838636218 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.838830568 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.829124116 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.829510537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.830687679 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829790967 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.829543021 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.829975417 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.829181779 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827718174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.828574842 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.841895905 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838055076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.83456205 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.83018788 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830049691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.832392896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830653375 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830595858 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831062289 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.832440152 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.832234299 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834702836 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.832133662 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833489954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.833106764 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.840220469 seconds)
  done (took 1084.588757126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831215798 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829368807 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830428933 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830765147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830498 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830403303 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829978582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830098633 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830892233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831283336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831094711 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831520061 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831363117 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831599037 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831924699 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830864429 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830441887 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830993368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830945979 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831524248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.831030382 seconds)
  done (took 40.212820873 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.833598616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.83078175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830877996 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834198048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831022096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.83314685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.83065888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834058649 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832966548 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832229161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.833560148 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834523957 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.832668815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.83247113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833699404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834419649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.834166951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832868168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.834550298 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832806955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835467429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832454854 seconds)
  done (took 42.092606018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.833977917 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.833352877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.832344003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.83221762 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.834983467 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.831614664 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.834288316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.835567997 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.835565612 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.833667595 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.831914839 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.834275824 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839647241 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.840358215 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.835426504 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.836458145 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.979771043 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.834584078 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.835423648 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.834237942 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.833444474 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.838756825 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.833816915 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.834361501 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.832759205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.833923597 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.837374891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.836224888 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.835021714 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.836031844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.839954111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838083448 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.833802047 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.836927497 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.834201364 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.835848632 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.840399198 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835002252 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.834694608 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.836830986 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.844008814 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.85682051 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.835748537 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.841436291 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.838126668 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.836927726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839395836 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.842806588 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.834988367 seconds)
  done (took 91.896588488 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.836580513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.837700187 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83494537 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837386111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.838074042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.836890645 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.837299115 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.837665363 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.835035334 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.835789472 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.839254195 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836536507 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836098574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839657296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.838482277 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835467007 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835951917 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836287847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.834947746 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835490276 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.83532331 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839482825 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.838214269 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.836989338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.838789654 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835657792 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836126344 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.838478231 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.838509779 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.837029324 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.838884884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839311927 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.838790737 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837061707 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836820423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.839524665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.839562445 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835906585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839204456 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.837611276 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.839932784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839765698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.839070972 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840056437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836827729 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.838634881 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838125279 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.837523482 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.837612578 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.84070539 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.840795766 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.837774575 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839696262 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.837399499 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841094184 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841799885 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.837804161 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.838200617 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.840536938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.83926537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838183627 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84114781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838115342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.840751993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.8409721 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.837374655 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.84011219 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841945924 seconds)
  done (took 126.766728052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840097845 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839086854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839593486 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839724124 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839569094 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840663494 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840259723 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.840213736 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839795691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84049306 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839966704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842767322 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.84075103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842455785 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840626373 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839943565 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840486202 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840002454 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839884069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840533762 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840074206 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839432763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840010839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840543674 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841205364 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840076439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840322844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841046004 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84094343 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840306918 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841402445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841456925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840020392 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841013732 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.841831198 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.841557663 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840656153 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841074657 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.840675948 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841240948 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840268073 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841912663 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841238449 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.841610296 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842385286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841143857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841502785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843094763 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844049232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843972477 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843227938 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843457843 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84235963 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843476819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842397534 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.845045507 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842317756 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842472392 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841819651 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841729385 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842220374 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845351972 seconds)
  done (took 115.934543348 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844834828 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845403599 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.842567634 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.842206842 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843953534 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.842348093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.844205034 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.844597835 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844116294 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.844797252 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844521264 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842891388 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842680889 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845045565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.84261913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842272238 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843516109 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842781187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8453694 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842695878 seconds)
  done (took 38.651085644 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842770425 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84590106 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.842873267 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84336838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.845550387 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.843005807 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.845726076 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845484855 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843439719 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846596469 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846116211 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846262554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842740473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843455929 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84689541 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843515213 seconds)
  done (took 31.29068339 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.845167388 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.846633217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844134168 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.844372624 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.844118782 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.844245456 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.845442379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.843646742 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.843530048 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.847560424 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.846900608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.846927017 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.846594535 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.845581157 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844499074 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.84793584 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.844832526 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.845120678 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.847238266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.844898274 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.84502271 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.844192753 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.848842686 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.848053522 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.844961913 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.846141885 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.845189155 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.845492044 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.844851055 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.848349803 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.845420203 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.845830589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.845517242 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.84501465 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.847173994 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.845027487 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.847810823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.848530212 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.848464985 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.848939485 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.848050131 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.845369758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.849002287 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848755286 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.844993824 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.848339337 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.845969981 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.846984004 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.847380269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.845853 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.849684728 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847003222 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.848310927 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.849554386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.848874762 seconds)
  done (took 103.331357093 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848740858 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848789847 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846803139 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849557886 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849040105 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.847119299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849888211 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848025923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848283607 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851808531 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849050247 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850648209 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848091732 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851084782 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849044612 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850180977 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.847779448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847934158 seconds)
  done (took 35.062617011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848007847 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847787265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.851057479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84784698 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.847946492 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850731751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847912425 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.850660074 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850250149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848644929 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848152067 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.851701635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850655773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.850863108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849613393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848485261 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.851689049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851714415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.84894259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848810508 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.852818469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85219482 seconds)
  done (took 42.479272202 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.848287318 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.84799373 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864674664 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.867893111 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.869881538 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880603519 seconds)
  done (took 12.962193365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849508774 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852240295 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84915594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853026343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851432065 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849528224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849380909 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849425556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852632304 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85064795 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850368024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852490184 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852188256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849522627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852149627 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852674448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849813013 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850055877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850184757 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854034377 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850091018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852564067 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851208293 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850057804 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85078849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851290059 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853331557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850655109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851967989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854398427 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853986255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851203062 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854273561 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851293469 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854254978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853591601 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851658972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853340445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854243338 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851521231 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85396346 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854626724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853976322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851014784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853908291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851651372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85193362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851190011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852558524 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85447946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855606845 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851670518 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854589058 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854930632 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855179862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855343725 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852583253 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852577844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85495251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85344641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85210674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854822872 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85298857 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852031823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85598023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852696689 seconds)
  done (took 124.041512901 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852720443 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853538204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852860307 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854800626 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854407451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853580826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853704652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854132486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853065523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8539617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857337158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853245479 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853309199 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852645633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853404993 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853248414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854362974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852890702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853800129 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856358745 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853508464 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853069072 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854066719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853492084 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854393049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856083081 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853461983 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85393069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853606454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853417503 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853304249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854292739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854524267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854473483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854343225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853860594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855320786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854125791 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85452565 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856787703 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854958922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856869796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854715185 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855108155 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855800941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855156796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855590897 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855845054 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855627042 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855490997 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856903106 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85633335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856785644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855891286 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855371253 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856039275 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855093971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854721737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85576598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858528722 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855540427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855747264 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860088581 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856198483 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85613303 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855191321 seconds)
  done (took 124.206302124 seconds)
done (took 2529.139445641 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.927599429 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.889172862 seconds)
  done (took 15.606794066 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.017473691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971904946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.856114177 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.887130057 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.855591913 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.874995284 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.875680314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.855872841 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.856042895 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.855742215 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.856009313 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042607333 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.851919063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.85703926 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.855763896 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.949539549 seconds)
  done (took 52.112507065 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.859689088 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.860136702 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.871025544 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.862311412 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.859128799 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872057481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.893198359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863191734 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.894144042 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.872685317 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930285856 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.871209614 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.859477526 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.908227481 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.872881626 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.876204674 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946160457 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93650286 seconds)
  done (took 35.701446328 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938643555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.862400985 seconds)
  done (took 10.599708793 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871664169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.874303936 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.890564629 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860820077 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.870824065 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.881837717 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.863775409 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.890574264 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883836802 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884222953 seconds)
  done (took 70.583080738 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.866479767 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.862236088 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860864391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.85916027 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.852862879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857810779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.859864438 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.857768966 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540902621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.895295606 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.867495506 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86695842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.860608844 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.863222405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.861539345 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883412691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.989325856 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.861263328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.861672875 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.866627002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.862066849 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.963015371 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.874881411 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.86470582 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.890761851 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542980122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.869522331 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.866757314 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.99931617 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.861719212 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.862100848 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.862611478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.863733221 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260221792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15957321 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861299724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869594695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869557483 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.86115406 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.045255358 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.861805229 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867279551 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.841192239 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152653641 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94644289 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.905246687 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.234969515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866468591 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.863139914 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891994696 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.86612827 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864062775 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.87508136 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.376798925 seconds)
  done (took 132.416629222 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859100487 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.144872133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01124449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85652332 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13186732 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063654408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.859323544 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909090642 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859492253 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062155857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021568865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971359242 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858705488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860362341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857167674 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857033945 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019304783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.92664998 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.860517305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.857107367 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886850077 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067061734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988932485 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859234374 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.880028232 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.070355697 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981524593 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967509906 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.139841588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.857668555 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924501419 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861218594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.858199867 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856952061 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016743212 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956740954 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947979012 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.860334006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857857621 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857599422 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.524299286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057345589 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958589162 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.005173518 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111269946 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065173922 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.506917993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.858134106 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.496734443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022408313 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.07335857 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.067464 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984268419 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861236648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.21471583 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.858738224 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858701039 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098943257 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088898099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963834488 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862857 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86013949 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858960544 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104502501 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861714974 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957337656 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862385373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86130998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958914304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967343123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091956069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075786278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895022634 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.151034754 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.327500592 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076382401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.930109532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097406759 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862399602 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860090273 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947472828 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.613256997 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020835776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109599482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082835085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89612555 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461924521 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.859902254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055254949 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.047589588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057381508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106122098 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.013682791 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.058096462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861165184 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860551676 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.085989469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999518745 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864844257 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221096115 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096444446 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.407840715 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.892620053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159394927 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996763142 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317082847 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.486752889 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.861612185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029995075 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902344153 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.863826815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861591645 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.053535512 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.673228123 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86142016 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.391842831 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928402173 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865101633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065411892 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866229175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073036867 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865056936 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100579902 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.874309779 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897784832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.106312364 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107158805 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.65320231 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112520883 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.108307558 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982185571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086500448 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.462635553 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865061293 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141395738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865207858 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.863293775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031183528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864863238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011377231 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.865544097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09117906 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890093074 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020138931 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866956895 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099236333 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901661202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919401237 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.867134722 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995955386 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866564809 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.747129978 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020400628 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865663721 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864008168 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.499528192 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.864687463 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011983088 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101828865 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891162634 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935756396 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.389807259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864407006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955393354 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892563688 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.346460495 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.866723968 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.022655855 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.843692079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.306932379 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.864657592 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.10606077 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051534246 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.868770013 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866544989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.605568396 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.576596288 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864691093 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.025254556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.070487764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.521760033 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069225433 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869581936 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99487744 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867908947 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.947635543 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217262191 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865774742 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.865424993 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.865872725 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.866479421 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865728715 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.150073552 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898380364 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387245283 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.006025259 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085819341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.177745588 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.088359037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913060133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870469071 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13319982 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871739496 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.933328813 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.868170058 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89195042 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100369234 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868834138 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103210492 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121155034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.79708664 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919264647 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.870443439 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86921683 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.867512618 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021723644 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960124559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.871563201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.867403698 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980421473 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.99866523 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063082978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.460580893 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.039629424 seconds)
  done (took 897.874695636 seconds)
done (took 1216.682236621 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.867297635 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868441478 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.855545654 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.865330903 seconds)
  done (took 29.263923043 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.870739633 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.868202794 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.870277314 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.869286997 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.87134195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.86910711 seconds)
  done (took 13.020424803 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.888505021 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.865905624 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86483862 seconds)
  done (took 21.420673578 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.93822036 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.277478331 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.980234151 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.314031284 seconds)
  done (took 10.312393187 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.872452322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.871488875 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.871144403 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.873191114 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.873141748 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.873564603 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.87211721 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.872295116 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.874400782 seconds)
  done (took 18.657369117 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.232645082 seconds)
done (took 98.713929616 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.199830213 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252434184 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.094807915 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.99776181 seconds)
    (5/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.912464728 seconds)
    (6/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.893660953 seconds)
    (7/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.992485122 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 6.867970034 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.513543976 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.255399156 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081996332 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.003709969 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.00680979 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.465636556 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.950476266 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.864855209 seconds)
    (17/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.936416632 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.523167875 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.98814999 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.864990812 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.024894535 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.974033886 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 4.822583482 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.998381659 seconds)
    (25/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853431474 seconds)
    (26/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.739076624 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.852338092 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.942895813 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.194972823 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.081976816 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.949995238 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.852728021 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.244869474 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873885282 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.864720273 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.01661814 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.948405719 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983737998 seconds)
    (39/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121193776 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.145816896 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.867766708 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.165012717 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.24348659 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.88748394 seconds)
    (45/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.926848158 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.89407209 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.764872125 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.025896974 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.979139518 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.057167288 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.512676761 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.879079705 seconds)
    (53/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.899526282 seconds)
    (54/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.433436187 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.854916994 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.177308958 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.973339021 seconds)
    (58/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.898725751 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241052163 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.875950409 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12118703 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.889438148 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.868633804 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.378368683 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.856301641 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.402051409 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 5.559340736 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156624379 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.243164754 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.131151187 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149410232 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.466518093 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.167007879 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08395264 seconds)
    (75/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.360355416 seconds)
    (76/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.178195348 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.854715283 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.76802195 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170331227 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.862498456 seconds)
    (81/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.008898013 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.514236623 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.89788995 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.880459822 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.037493261 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008595613 seconds)
    (87/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.040583599 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.587699849 seconds)
    (89/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.18106775 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.930464625 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.855305069 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.859721932 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.919594388 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.932059503 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.962429322 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.937228123 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216869578 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.876848881 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.948851668 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.869471935 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.317014159 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.978210752 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.977963611 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.969199128 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.944566681 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171057491 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.555802594 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.195906746 seconds)
    (109/309) benchmarking ("sort", Bool, false)...
    done (took 2.415781958 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.900118357 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.149134327 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.127788122 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968372718 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.232076447 seconds)
    (115/309) benchmarking ("sort", Float32, false)...
    done (took 5.640813638 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.895943957 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.042606721 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.248261377 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.696510452 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097032811 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.83755807 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.919106599 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.146649605 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.89464357 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.060094891 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.186028726 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.478109061 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.857051055 seconds)
    (129/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.345758137 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.978139654 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.871183556 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.464454113 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.054699574 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.877300544 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.098683253 seconds)
    (136/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.076754764 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.901981372 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.857501856 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.654189229 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.219065461 seconds)
    (141/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.280000119 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.860838555 seconds)
    (143/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.461132451 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.907800014 seconds)
    (145/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.009655279 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.813836058 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.622788099 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.246054535 seconds)
    (149/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.017975996 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.97495681 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.878507925 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.661716522 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.875392564 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.927056764 seconds)
    (155/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.873366819 seconds)
    (156/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.389939812 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.384915378 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.033452469 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.681413792 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.970513312 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.271410646 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.054444843 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.96975614 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.072733889 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.682015638 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.883429125 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.926967853 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.97003651 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.70063052 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.150913336 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.974745226 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.827957113 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.773846116 seconds)
    (174/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.975467833 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.792488278 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.362978711 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.92675095 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.717421409 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.933247465 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.880587588 seconds)
    (181/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.179655375 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.868602831 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.92026622 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209058436 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.776674964 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.937987902 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.018084205 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.802694476 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.911630667 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.19158529 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.56327689 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.582456891 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.890011843 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.002085647 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.494661916 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.032567589 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.114747895 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.255917854 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988358754 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.665477869 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.096630016 seconds)
    (202/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.203669449 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.124094657 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.229603115 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.908992367 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058137588 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.391450407 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37839858 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.176174745 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.910935487 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.90051524 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.559514561 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.225237374 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.865871478 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.283658187 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.570235244 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.020262296 seconds)
    (218/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.048834675 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.883917768 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.880220224 seconds)
    (221/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.904582383 seconds)
    (222/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.539351007 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.952515844 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.874108565 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.91534368 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.100340724 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.98225175 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.263350341 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.943189925 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136633618 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.181197296 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.991487277 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.477508946 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.981952871 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.761735442 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.599351459 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.114134789 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.963955596 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079737597 seconds)
    (240/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.978260214 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.882238621 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.039432062 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.043668481 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.368626578 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.078069279 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.386943487 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.899669948 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.444869775 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.217911544 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.820146053 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.93254589 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.044537728 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.011311578 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.891451685 seconds)
    (255/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.048738602 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.961080563 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.002229196 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.154139382 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.374396615 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.893486237 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.334449482 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.876611322 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.24462173 seconds)
    (264/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.137473248 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.913319146 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.891644495 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.071686242 seconds)
    (268/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.965215267 seconds)
    (269/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.020949233 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.471016369 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.137296959 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.378874498 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.262638878 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414604069 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.923419366 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.903705388 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.921458593 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288954208 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.005782401 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.97706684 seconds)
    (281/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.181969592 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.047125174 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.086392808 seconds)
    (284/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.929449566 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.89226474 seconds)
    (286/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.308192307 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.783183966 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.071378514 seconds)
    (289/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.987769995 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.145151582 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.548528511 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.968533757 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287250835 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.940306439 seconds)
    (295/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.997961273 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.894846953 seconds)
    (297/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.183354107 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.195252365 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.924821052 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.164741574 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.924442487 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.051213806 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.987931835 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.87860895 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.523706023 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.9946148 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.921963605 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.04108355 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.005064548 seconds)
  done (took 1023.066375019 seconds)
done (took 1024.93535746 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926341578 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922498619 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.905761196 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.92746359 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.018076212 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939501092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.915697801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.907044672 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.952809585 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.954467647 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.904737889 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938543762 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.908221724 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.906215549 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.904431408 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921468397 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.213029823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.932127789 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.923060923 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.914402507 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.923594267 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.905344167 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.954937063 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.94020998 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.908702977 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.909497828 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.91069643 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.926064085 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.019620615 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.910392931 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.909900476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.919258738 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.213345825 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.92980822 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.902294062 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.927360657 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.919937914 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.91614283 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.910065553 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.940127629 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351843062 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.91436352 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.911234167 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.90757511 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.907678471 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.912176704 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.909434934 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.914428673 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921127873 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921603538 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349125024 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930058044 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.911534463 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.908265514 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.9185053 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.909244829 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.910937153 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.925148519 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.928784698 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925143266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.204911816 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.938659016 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.909755256 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.926010064 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.916408348 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.385672753 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.91022751 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.913649496 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.35114338 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.920597941 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388146719 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.924332489 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910266587 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.92436699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.941907022 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.215588363 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.93030807 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.908945343 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.917991917 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.90875317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.920046511 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923503779 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.914476863 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.909482494 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924136023 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.944012803 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.919894343 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.911581176 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91820021 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.930483077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.918649937 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.922466102 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.91402494 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.905609312 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.92001535 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.913413567 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.914414504 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.913642599 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.914839007 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.921282304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.350430819 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934168715 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.907224563 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.907262896 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.909433442 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.925484101 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351848754 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.918853138 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.932824744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.958447253 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.912475089 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.206568727 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.940877086 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927669738 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.920198883 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.913463234 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.906384935 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206604425 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377118618 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.933240336 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.913112372 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.9108662 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.928804236 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.91420982 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.909178755 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.217314044 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.939069839 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92631981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.034088563 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.922953993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.944747297 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.911424672 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.915407255 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.947519266 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929558124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.946446899 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915678748 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929796153 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.929978828 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.910868893 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.926038998 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.924110443 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.915459233 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.918887852 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.907014933 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.948089869 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926282966 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.927388228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.93419497 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.035127331 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.91103275 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.209297426 seconds)
done (took 300.102396886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.978279694 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.906402088 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.008590164 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.912309098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.993153899 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.99554698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.90984142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.909794002 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.909659979 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.28549436 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.909845252 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.910727107 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.908204155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.910145852 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.992998046 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.913113767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.910444052 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.303345953 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.911329634 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982101975 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.909974591 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.911984621 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.91354762 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.289804986 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.908895252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90392563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.981830786 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912488691 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256680392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.909334836 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.909856501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.257138078 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.001649781 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932589758 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.924004068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.920321712 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994739501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.918178856 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.992022562 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.991276366 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.012777217 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.951824103 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.911242089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.909605777 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.917539672 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.913083629 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.91117282 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.942906172 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.905932424 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.912371764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.251572604 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.925034225 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.921372833 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.911553236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.912007706 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.933639858 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913448455 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.913264159 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.004354065 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.915500198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975041871 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.292820924 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.288082256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.91542042 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.905961076 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.9122698 seconds)
  done (took 187.222633689 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.981068652 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.985154534 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.419368217 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.917068395 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.961478083 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.985339203 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.917294091 seconds)
  done (took 16.008852327 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.918930878 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.916475489 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962588466 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96325444 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.914567653 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.06354262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915627209 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.924820153 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.913527669 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.966680998 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.914813716 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916364055 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.923124057 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.911393801 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.962679426 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.926097748 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.030800024 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915542341 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914757236 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.06908529 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.915468265 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.924383036 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.982791204 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.926671981 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.915572426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.920671848 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.511732437 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915041697 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91546543 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.916397988 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915907388 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.958607392 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918051618 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.910713649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914764081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.030577382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.915525608 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914203309 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.918834899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.909051039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.918966155 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.918226089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.917308604 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.914942637 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.918765155 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.939537868 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.917943163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.918855055 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.918646777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.918800273 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.967001061 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91756098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.915481636 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.916179658 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.971421891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.925052184 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.916865454 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.91656651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.920054779 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915985363 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.071011478 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.964081021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.918875776 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.964629732 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.920235047 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.918857276 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.919308457 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.919562939 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011309417 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.918780393 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964695039 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.917337366 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.074406723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.9403147 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920081064 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.919663692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.919323069 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918310919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.910139197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.925600858 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.917763776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.918224191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.92351044 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917808175 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91729575 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.030304048 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.025913552 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.917721252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.929491614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.924647177 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.918633211 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.971898185 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.920886484 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.917933059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972023683 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.033376934 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.987832679 seconds)
  done (took 210.507287768 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.922538729 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.926538733 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918753519 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.934853367 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.918327201 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.918010851 seconds)
  done (took 13.387282633 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.920802731 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.923123856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.920976583 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.921261845 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.919509543 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919056704 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.919075349 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920192412 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.923656412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.921037872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.919775623 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.919627906 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.919790002 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.919734636 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.920822408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.921606499 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.919783091 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918896895 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.921838951 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919405144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.073998101 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.920410188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919332614 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.921842747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.923643262 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.92225284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.927685413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.922731895 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.922702837 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.927538336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.923466756 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.920028188 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.921476297 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.926882918 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.9245154 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.921770605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926251237 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.920820261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.920350273 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.920635565 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.921116326 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921711433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.922987986 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.921453207 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.923061122 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.926240289 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.925104259 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.929582757 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921306584 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.922444041 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.921482546 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.923022998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.92141248 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.922705159 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.923274639 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926730485 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.926331709 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.922737676 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.921456549 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.923555003 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.925976386 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921384259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.923194299 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.926581027 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.923606019 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.923796086 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.923972423 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.926629612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922388184 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.924486206 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.923273354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.921751011 seconds)
  done (took 141.42444297 seconds)
done (took 570.405373294 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.162170025 seconds)
  done (took 9.012731491 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.967066194 seconds)
  done (took 8.907844421 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.499231902 seconds)
  done (took 10.351010109 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.923752373 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.935392384 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.927888278 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.917825462 seconds)
  done (took 29.566658393 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.9597141 seconds)
  done (took 8.811508759 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.932756217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.918113108 seconds)
  done (took 15.737116094 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.958378759 seconds)
  done (took 8.811674555 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.047877497 seconds)
  done (took 8.903590693 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.937758613 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.929079176 seconds)
  done (took 15.73282617 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.901733435 seconds)
  done (took 8.754322814 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.652745545 seconds)
  done (took 11.516108024 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.930113074 seconds)
  done (took 8.795149016 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.001953984 seconds)
  done (took 8.854314782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.070049511 seconds)
  done (took 9.922445672 seconds)
done (took 165.528727118 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.919820487 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.919626435 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.920599665 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.919737498 seconds)
  done (took 29.532535265 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.959255218 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.960575189 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.960936279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.971639795 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.963125021 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.960443169 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.952651501 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.954123307 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.970032737 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.963446309 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.962216153 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.963189862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.960262031 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.951714122 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.961568611 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.962773944 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.97045699 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.961627017 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.95278131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.964719636 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.927065391 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.971672677 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.962624293 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.928303351 seconds)
  done (took 48.872428744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12379612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.995794654 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.079073085 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.977718003 seconds)
  done (took 10.030763233 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.97833607 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.980710733 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.992311256 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.031115722 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.057892489 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.989659929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.954432419 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.95015115 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.935450811 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.981543635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.056499706 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.997836629 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.065914485 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.928910396 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.115706553 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.928509583 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.928623829 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.980149156 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.031254095 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.045480111 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.929530893 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.980647461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.985677613 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.998408119 seconds)
  done (took 49.679722992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.927708457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.936326167 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.934944202 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.929287954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.928636032 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.92847115 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934851654 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.929925121 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.950017106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.929010109 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.927574318 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.928857626 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.927721919 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.929456662 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.92769989 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.941506107 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.941917922 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.929149778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.932364564 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.935301957 seconds)
  done (took 40.508106371 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.919993724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.774119813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.272463067 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.177321501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.921590929 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.922720183 seconds)
  done (took 31.844413722 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.939224443 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931507566 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.926598116 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.982449881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.064791709 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.934273952 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.927324942 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.937790643 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.973193521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.993696295 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.945720075 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.954284839 seconds)
  done (took 25.367998975 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.922525373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.921491491 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.923107752 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.939421278 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.938052388 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.934379529 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.934311266 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.920472618 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.940015702 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.945511774 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.934159689 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.939213241 seconds)
  done (took 45.05355602 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016074075 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.970434138 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.98342815 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633585864 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304495343 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138370453 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436410661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27073063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.930955237 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199213397 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958887308 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033981584 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183102412 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413524278 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.961470832 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.386752023 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224909227 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140891653 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95295249 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.622746099 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991498627 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.107278344 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.761950963 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985924289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138563882 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.059782175 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.188015506 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92721989 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064483486 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965057791 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937753761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926783385 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201773494 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306866666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031852236 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938011935 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544625796 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.645973031 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.917436415 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.736415385 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.691095459 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.05130739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939832311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928339696 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86339091 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072743578 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307389124 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.934383205 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.640268142 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928273182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939841935 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017439304 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.933158459 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.744608543 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845663257 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930689009 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.926550917 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93213481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499341166 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05525348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.108883216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.903996683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.018385331 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.668017356 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325759953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.079618417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.933922152 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93380646 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864716475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702762972 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988418349 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259352887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.952287434 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.580057734 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237880978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.018286402 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872717781 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202449264 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446778258 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.904664476 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158688542 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93030165 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865591576 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.974757163 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863869928 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202254132 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966904047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.707896739 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967496563 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264117872 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940956147 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948041259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954031511 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153592528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.81276232 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930791554 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.77380307 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.075867382 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95325726 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264463126 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866101584 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.93553304 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18625561 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.143339645 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.997375143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431496016 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091757482 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483141818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.985166502 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07879121 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982080655 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.205949982 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990971033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.062052752 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986722205 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931784135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250352339 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.504483491 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.070814658 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969401561 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059971822 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.257365229 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958981108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997391849 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934935829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931819405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.731542832 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486057259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.934013115 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.932534747 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.997086127 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979351176 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.930809627 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882409297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.563408107 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976106265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.947682019 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155648365 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501328532 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244788138 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867317166 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262603281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025412296 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.157160381 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.578095046 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.008057177 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194820529 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996798448 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.03586503 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981462949 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953916096 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033037382 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956345953 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.069991972 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225975703 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.937771233 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.937745852 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.745220817 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972388491 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941800464 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.939994309 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.683796853 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21437141 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960818703 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.942596724 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.825236405 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.949136439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00072894 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940028735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945737942 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.476922127 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643686523 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.942966487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.531924357 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159713839 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946154916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.634187676 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049416032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.018189416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211501567 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997253747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869879558 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.64690673 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629872016 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937028546 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870870597 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.936366953 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945809822 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947965234 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.130364674 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215026144 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982390236 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.63982599 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.980245931 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948230717 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.942399553 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937284094 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.448821459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.068226656 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122489015 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98258857 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080641377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.950398407 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870993844 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940628945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942355954 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937459978 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.937058961 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970239091 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.640307571 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31309138 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198677553 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543117647 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952629251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.671999236 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.999095721 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.997662347 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612700748 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243025599 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.970508195 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950640643 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.949769816 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.714335358 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.635637008 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508460821 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265976362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248758462 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383609069 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.154732219 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966762905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276817787 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873424251 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496648778 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998311686 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279633227 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88401595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023764583 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.583877291 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282441764 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955204395 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16701297 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332503455 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.68724726 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082332142 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151077021 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975904537 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.087511962 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902960312 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.224639411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081256362 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.64509619 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142043912 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273651409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.651873469 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.063165489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.936923993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.631481643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024833589 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.649976501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110866846 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.129034564 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.874902011 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410576781 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950620283 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166800198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305262511 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.089425649 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.065653354 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877586551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952487847 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.951582029 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.940737067 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.942739133 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.824005185 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.195821856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953287767 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875498649 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038749369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238842042 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.845241929 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.948242464 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942519864 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260067378 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47260677 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114610118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.039789786 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.462911726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951529341 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875065068 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875570694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.635979458 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949856336 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917240034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154387372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.040780653 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859765243 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.020445333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025992627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19946089 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.9580595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218326067 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220418876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636904472 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969758082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.043261598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6189376 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.048107968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944387242 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179804393 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692823901 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170101395 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.990458387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.892463166 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.94070015 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158423365 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.945235106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.839877652 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171799196 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.665358824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.961671376 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26684377 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020483401 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.853653003 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989372588 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.033566214 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952753368 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024749367 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955763831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.956523881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956615956 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993091966 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85640348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.067782001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.958672952 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035353603 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.080437234 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.470529712 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.951646053 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222043697 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304420665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281818198 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008383491 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.946271471 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946250317 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879829822 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09498384 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.1707576 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219756858 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07784926 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.059326273 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972119203 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618871078 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150868213 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18998581 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221509939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.841672475 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448803277 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98812711 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.947412019 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957615666 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.157624899 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160689125 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248576535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09080561 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.020884114 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314574576 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220790575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.947319669 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946633677 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537861837 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.977932105 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.63930804 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.98893496 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88838191 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221708221 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957693278 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324032164 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968654314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.103214053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.46478955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656334727 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238993549 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.934897995 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011649617 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227035723 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345997688 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262486226 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016134752 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959625335 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.060862449 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095711027 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.823562285 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.950754474 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948068549 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997474258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.658755302 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958633518 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233037163 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259454237 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94717513 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.831564841 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972846383 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.959126414 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173343325 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222199138 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201269639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958855257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.956269467 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.766512806 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228128263 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011266471 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884415222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.954386389 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048073787 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197242157 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970907572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.402711727 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.661247619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230663384 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.948772668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972378307 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104626368 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328846809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277892339 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.487407528 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16262863 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.544101218 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.523355873 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253050212 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.955687172 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.104833094 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255744199 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.954717445 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.030742907 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991028317 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.224880913 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26402692 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.987056719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659952811 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.922058269 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294436165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505861234 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889750942 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961501659 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.009828647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.952963638 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083220912 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964036546 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.843100945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106658787 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.713214219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224659049 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.956770968 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.934754359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.662288481 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.242020268 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984507329 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094125724 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961716397 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.655296022 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.313436578 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209025649 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.02935954 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.958744189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.958304722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954910533 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940798331 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151890261 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.148593971 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227338215 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.05937546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.990883391 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957050455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.169370148 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166078053 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.836791351 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089038635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034473798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996327392 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.856532018 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.45580998 seconds)
  done (took 1708.089968657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970699246 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.997068481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.005001407 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.99771079 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967275827 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.055748699 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.016177666 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.003185275 seconds)
  done (took 57.899173817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950306031 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.148754415 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.960037354 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951486335 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.96022291 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.952032663 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.119038542 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.962542141 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.959632409 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.961104442 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.951633406 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.952136259 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.258981908 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.964862983 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.940999352 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.945627219 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.948742226 seconds)
  done (took 75.796142311 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.941776682 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.047788907 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.967926635 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.958256964 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.911169585 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.961237811 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.763734056 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97626225 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.943273358 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.172884957 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.57647604 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.956806295 seconds)
  done (took 91.056003257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.951743186 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.948024223 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949520993 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948179178 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.948168821 seconds)
  done (took 11.627946374 seconds)
done (took 2227.236539286 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.188011777 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157494001 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.175174461 seconds)
  done (took 6.210636078 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.091387214 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.13920196 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.258868383 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.264983426 seconds)
  done (took 10.635254871 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.22455558 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.310907174 seconds)
  done (took 6.414009515 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.331979416 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.95074539 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.32219524 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.945031906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.947130939 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945869494 seconds)
  done (took 22.720860484 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.948901778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.952226925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.949176412 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951860789 seconds)
  done (took 9.679598536 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.927208503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.630397018 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.92935194 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.944798317 seconds)
  done (took 21.31009651 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.695632894 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.710136361 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.693193183 seconds)
  done (took 9.97769311 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.397872524 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.829933148 seconds)
  done (took 9.106522184 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.211914807 seconds)
  done (took 4.091355472 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.080387274 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.25805717 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.475328271 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.455853159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.547230474 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.646982598 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.265316001 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.192656558 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347474965 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.376305518 seconds)
  done (took 25.524609019 seconds)
done (took 141.342048065 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.329021327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.187478725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146882467 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.327885764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167580262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144183793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.371759087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.307922928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.795337551 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.790858976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.286102385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.166858758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.10253725 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.187675439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.102795685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.313255827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.166298122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.353678856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.022714029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.182667897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.373369998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.927712434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.127666242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.941930842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16986456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.094333256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.505474427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.315800068 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.177248982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.516702858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.097618975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.337286234 seconds)
  done (took 173.919357083 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.864377339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946877161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945071262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94664981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.528386723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947484288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946252902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.946052833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.024493127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.005479697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.947003934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.521312338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9497218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947556909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.94702001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947383855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.13452766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.892685003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.94845471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.947749188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.951238138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.450071668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.953762003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.480275691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.158698772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.960227849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94703417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.965297765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.951711523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961606075 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.965598417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948324069 seconds)
  done (took 210.861532403 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.947362303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948290358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.947877967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949093572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.954612562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.974848645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95034223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948523254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.518997567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.522413807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959650488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.954213884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.977211438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.948778985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.961828398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949893239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955111612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.95534513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958369572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959858689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965772964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.776319314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.965895445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.762700794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.95564264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957971548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.950609493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959258591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.951184243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955636606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957669922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.95153895 seconds)
  done (took 223.25488719 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147982493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.958911398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.959862641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.892020339 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95900715 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.957724448 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.955271431 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.156159773 seconds)
  done (took 19.88553413 seconds)
done (took 629.813633179 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.382303764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.22620355 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.133323797 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.982663001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.19012138 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.011003239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.978841025 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041845484 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.703650859 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.044467627 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.618782213 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.99477134 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70516805 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.002321924 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.108699205 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.037653978 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.551905183 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.651733046 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.157509654 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003693238 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.158171052 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.914700485 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.05407994 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.719212753 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.724898781 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955161337 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.157658291 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.55956918 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.990801008 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.150183532 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.757235482 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.411059687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.986676776 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.974639614 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.030698652 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.012923454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.32638188 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.987009533 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.100015962 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721286031 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.015318164 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.589352088 seconds)
  done (took 106.709857903 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.948832885 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.946836428 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.945655613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.947063275 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.947673311 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.946959741 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.946513683 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.946122087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.947199756 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.946516925 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.946201322 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.947844344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.946039579 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.947803029 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.946645339 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.946706434 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.949092687 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.950316818 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.946928226 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946218022 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.948758603 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947188532 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.960988629 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947990248 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.948466453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.948377526 seconds)
  done (took 52.542520704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.964016261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.106024598 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.183223951 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97832161 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.961071641 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.964092272 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.978294218 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.96839775 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.963343686 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.963136929 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.052938911 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.969620874 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979393041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.185568786 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.975647292 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.964478241 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.964443638 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.961843484 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.110641475 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975961991 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.980376062 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968365058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979312097 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.974758934 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.964520255 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961800357 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.964780631 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.435615714 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.969138541 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052611419 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.003815871 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.98125461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.408958815 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193914694 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.01400748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970293887 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.965043569 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05557801 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.968039669 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.962801701 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.980752049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.967069203 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.184871991 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.477898586 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.976082006 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.966157478 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.446314823 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.064890372 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.003350176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.974021933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.187873628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.977779349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.966496554 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.964059436 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.99980667 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972490073 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.962206202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.330959975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.97433257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.980667458 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.970501908 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.964046855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.117693896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.971278953 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.105938723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.971890339 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.970670219 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.965909468 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.185660513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978884254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.476795265 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.977806803 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.966853841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.0537415 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.111241366 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.469950136 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.976225154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122020276 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423485321 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.986651776 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.97118218 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.426897337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.99174014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.971040184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.968209005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.968758467 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.968063663 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.010753174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981326702 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409365095 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.477640916 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.34349439 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.990604814 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.980000946 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965967326 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.33204604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.976340072 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968907637 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.18208445 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.485893979 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.977438234 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.973326273 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.462664795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.979325328 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.984708793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.974070416 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1912395 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.9793299 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.012109785 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.968399998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.972187096 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968083532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.984490849 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.972838039 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.969823732 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.447964592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072963683 seconds)
  done (took 243.224934898 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.962294197 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961086813 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.961594953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.961408791 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.959024465 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.967985407 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.960610984 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.960424134 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.96750164 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.959557622 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.960835558 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.960456812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.962550675 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.962707017 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.450016961 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.968906799 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.575847522 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.963201533 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.962225046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.962636244 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.641489862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970708793 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.96222184 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.963617199 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.9659669 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964774442 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.970173392 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.999910157 seconds)
  done (took 170.688024513 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.973544024 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151348304 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985558494 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.005058315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.981629941 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.970232809 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.994658311 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.991223198 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.978513443 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.96981169 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.971574365 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.031221587 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.984410989 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101122427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001214825 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.005742807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.07647951 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.980010416 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.970704335 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971428068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999091443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.965425296 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.031998302 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097429453 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.989687521 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.086545531 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.97457982 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.973546094 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.970676348 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088609033 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.987513861 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.033664155 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.000080848 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.98939152 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.09462941 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.090861355 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.081862595 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.004549598 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.977291022 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.973446278 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.972383815 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.958854181 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.08816115 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.991393056 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.972889405 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079676826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994073745 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.976370571 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.983033194 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.97411416 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.98520531 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.991133373 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.041295299 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.106048351 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.007066632 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.000462234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.996748509 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238709539 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982762457 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.073308813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.965284305 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.092806668 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.995478472 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.959611195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.97378599 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.979737977 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.002926416 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008025226 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.078933345 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.98055952 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072797058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011234822 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.982977038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.973913123 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.975316532 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087781965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.093120191 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.009788914 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.011317957 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.0044026 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.969430078 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.9725288 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.961633998 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.989458351 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979504855 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092305158 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.095293442 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.985242351 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.977159022 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.977171667 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.97771739 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.998717777 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.10113885 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.007611805 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074400693 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.043142119 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.049815457 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.991691549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987575816 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.98094468 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.036444278 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.992259846 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.987253259 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287825429 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.045582418 seconds)
  done (took 213.644242747 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456579269 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032624324 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.031169967 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.260382549 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.401446732 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.855000562 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.023217843 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.027754186 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.049594941 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.191167601 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082110285 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.038101768 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.011527105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.998087343 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.028457917 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.045503809 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03022676 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.320060397 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.146464203 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.16207944 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.004619224 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.329842845 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.342292541 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404310924 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.05822581 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.348712372 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.705698899 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.269766206 seconds)
  done (took 64.565396937 seconds)
done (took 853.257766162 seconds)
SAVING RESULT...
DONE!
