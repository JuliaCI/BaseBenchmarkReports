cset: moving following pidspec: 26908
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363040816 seconds)
loading group "string"... done (took 0.564578402 seconds)
loading group "linalg"... done (took 7.648260264 seconds)
loading group "parallel"... done (took 0.171365101 seconds)
loading group "find"... done (took 1.291775575 seconds)
loading group "tuple"... done (took 1.970260681 seconds)
loading group "dates"... done (took 1.426527504 seconds)
loading group "micro"... done (took 0.246067099 seconds)
loading group "io"... done (took 0.984653249 seconds)
loading group "scalar"... done (took 41.421920686 seconds)
loading group "sparse"... done (took 13.48284962 seconds)
loading group "broadcast"... done (took 1.032398544 seconds)
loading group "union"... done (took 14.287021154 seconds)
loading group "simd"... done (took 4.756737915 seconds)
loading group "random"... done (took 9.627528547 seconds)
loading group "problem"... done (took 1.996860501 seconds)
loading group "array"... done (took 22.535725163 seconds)
loading group "misc"... done (took 2.028540035 seconds)
loading group "sort"... done (took 3.426495523 seconds)
loading group "collection"... done (took 19.494220564 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585036656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145372084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152064114 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133004272 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208079263 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157806673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160205978 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100556411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.961236371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181009081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155859596 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.5326063 seconds)
done (took 5.21807654 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219778373 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096836724 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105814368 seconds)
  done (took 0.892501474 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077724336 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149267922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095965471 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079470644 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096326697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078760586 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09572674 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078491035 seconds)
  done (took 1.370256335 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088818602 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098710175 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082675644 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097861074 seconds)
  done (took 1.065669603 seconds)
done (took 4.326860001 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746376135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27828158 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203833959 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.473299831 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200234819 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221572656 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68662543 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.352361183 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252827169 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101809754 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.146699507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39339158 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139556052 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694404487 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09156861 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126742659 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179356913 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454517366 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084322583 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111561611 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117491354 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143710577 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130319985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093097746 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184942278 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081201183 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198173146 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109924186 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082307625 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.280046247 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200740778 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685152971 seconds)
  done (took 10.985945366 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115036475 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135964914 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09936588 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139633375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13646721 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10104773 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085442094 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097272471 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122828198 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179096834 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132974686 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123406341 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096317214 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082863509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117348307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247298445 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120730805 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100250987 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101537563 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088557307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139546917 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114477102 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110588857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09576197 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167444515 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222881862 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112627678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127567103 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098020082 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112783885 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144084051 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144794612 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095935226 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082503189 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17475184 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126356426 seconds)
  done (took 5.203112882 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.105476819 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193956109 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124061114 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174523074 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081959845 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.140477507 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14684809 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.098051825 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116516664 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261566096 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.135876028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495686451 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144682046 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102171093 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10108833 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084124309 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09875084 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.581424948 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159779682 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137358923 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09815289 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109902273 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102504058 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367343252 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082169746 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096775761 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082877732 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082568522 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07901367 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164982966 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100253493 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.154553912 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102703004 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103940097 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135306686 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20109722 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127460071 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136508576 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080104476 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097631513 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179103494 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087704125 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099181101 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122561831 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134691233 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12006652 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099506706 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098519429 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206393967 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096414287 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080030495 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116147882 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943616929 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181531226 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091953075 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09698127 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294656902 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119267912 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098298332 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078977415 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283803796 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191607488 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10033701 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081141079 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098973463 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081756441 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398348501 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083083432 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.678113427 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084890927 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108052503 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083794636 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098220304 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104482214 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089648442 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116666908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080869149 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10087028 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079950316 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098361066 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082155393 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09627083 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107301828 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.218617718 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081378506 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098716563 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078534424 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118126957 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127669154 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08477201 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096728184 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131205914 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087318648 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099715628 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135319199 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08235819 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111403283 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101231199 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143469231 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08291557 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145685827 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095123084 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125116736 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101110649 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116213642 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114735729 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100739561 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168434568 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079212566 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097001476 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08068439 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097311817 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082177695 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100853318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110208251 seconds)
  done (took 22.930082318 seconds)
done (took 40.919123816 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.334416547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105039252 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106402824 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105096662 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102711892 seconds)
  done (took 1.524004441 seconds)
done (took 2.262531881 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295466063 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179185406 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097179699 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171793614 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093849833 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169393595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163422153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095955483 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225856296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095212706 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165774511 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07767227 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095789583 seconds)
  done (took 2.697789079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096342976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117554302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084359088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112734778 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078083709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111699848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094239686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117800127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110201909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086840406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094391848 seconds)
  done (took 1.842887652 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096856486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114714261 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083881463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110970553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078280684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112302297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093748795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118692805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113063763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087087629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095081409 seconds)
  done (took 1.842127046 seconds)
done (took 7.112858016 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0937205 seconds)
  done (took 0.828405352 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.948910862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.803729299 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11213536 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151195745 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.306766346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190637469 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466190589 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12662455 seconds)
  done (took 11.054599114 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.117074508 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104120953 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.116426263 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085472258 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103091324 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087509328 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102444959 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099277168 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088533624 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102522793 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087769528 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10421789 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100211296 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087805902 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101696111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086723721 seconds)
  done (took 2.37941819 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120619062 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120580065 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109783856 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110462039 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087943106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10747014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107628533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090745553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103593262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105194195 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091757074 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107985693 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104876416 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081568437 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106957504 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108950749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087647453 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108809364 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10788306 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093260338 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108880358 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096618252 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089060143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108435958 seconds)
  done (took 3.320931061 seconds)
done (took 18.321116688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162265976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11080303 seconds)
  done (took 1.016431955 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098699166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115224557 seconds)
  done (took 0.960744131 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100812345 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097782908 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125516503 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111703979 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08278581 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097975298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122975658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08253276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098177334 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082300875 seconds)
  done (took 1.753486278 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085228625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111896788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102961378 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096652551 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107568845 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096912109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091645918 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100788762 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112399086 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079126045 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103739497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116596432 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088369153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118813884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10772535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085644254 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105253169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100500071 seconds)
  done (took 2.563391198 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081994592 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098791969 seconds)
  done (took 0.930164117 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083678717 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096084656 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083060009 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099896913 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095483903 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079199564 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09539051 seconds)
  done (took 1.38118523 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498836453 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138663905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266744629 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103999539 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106170146 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307224881 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099577167 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085949198 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106222745 seconds)
  done (took 2.522406961 seconds)
done (took 11.8739589 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096094427 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117589207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115536005 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471111963 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110431706 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100319138 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148189729 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25467999 seconds)
done (took 2.167546008 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146907803 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616329722 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431861799 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.236560194 seconds)
  done (took 2.040387861 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.411526104 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100068999 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085074904 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082995471 seconds)
  done (took 1.441138032 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082055529 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100948897 seconds)
  done (took 0.941582235 seconds)
done (took 5.329662178 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082899167 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.131868063 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081316722 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099689156 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082310651 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099093219 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07847571 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101031378 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081188305 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.099314069 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09779444 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082625936 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09517985 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079913765 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095557292 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082809881 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095755983 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079868746 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095922918 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082436336 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097799539 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082356546 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096027758 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080171064 seconds)
  done (took 2.97864063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103323618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099847804 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104453902 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089282276 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103729517 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087368074 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10526879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09922725 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088006383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103256959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102591523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087305746 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100780941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087559937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102072326 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103115658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089544727 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10009999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084656568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104605511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104587025 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083199898 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103857915 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104067406 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087193853 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102663028 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085251372 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100581938 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104669001 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087817999 seconds)
  done (took 3.671412665 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087583728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095519808 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080948818 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103648744 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080585857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099249971 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080632625 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098275003 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081329596 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097346653 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08196048 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097328998 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080118615 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099585679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080455147 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100970086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113965598 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080598866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096507206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080769807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099692619 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080299022 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097869715 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080030407 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096790416 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079442299 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097189539 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079586341 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098195948 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079737726 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100900548 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084485966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097278658 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086080389 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101422334 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079652793 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101077317 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078715784 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099171646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078690862 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097032708 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095374207 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080423288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103067414 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081746158 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098828319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081219099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099120642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081313612 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100331801 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08060746 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097309051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082044448 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099345726 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084646034 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098371224 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097045591 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0803062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098073666 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080172331 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096507199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080842173 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09924081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081638726 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112246147 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087559649 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097534785 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081815503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098414603 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082186581 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099473998 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093761268 seconds)
  done (took 7.309126664 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085528419 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108424104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082978656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100113403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078427353 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099024999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101736768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081425413 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098590907 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087458565 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098866418 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081384325 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099975452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109417601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081524184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099705872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086960556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096225108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080519997 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1030397 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08067819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103112502 seconds)
  done (took 2.815160175 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214230467 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107008861 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144768324 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109013995 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085723854 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109025983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104117626 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089653754 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104441881 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.193183026 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103364892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104254834 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086080114 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10281171 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102432804 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087453142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104883778 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086444299 seconds)
  done (took 2.809395127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096847991 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100319419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104710836 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102621078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100303069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08665789 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107110934 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110006386 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086849656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100177716 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092628586 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103777645 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103033486 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084104973 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102714154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084014913 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104353945 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083393521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11133685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10715184 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088817141 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110779144 seconds)
  done (took 2.943383394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100146733 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103095301 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120925048 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087647568 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097282279 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082748656 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107680459 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082599365 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110444235 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101952729 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084452645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091091094 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101968018 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105351221 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084359098 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102214844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084012514 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103188124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079661635 seconds)
  done (took 2.704316868 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105595684 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102535624 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102026888 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094419695 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102103231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08385641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112620699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101996242 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085075843 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128282341 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102652012 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084606399 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110837244 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10781135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10106413 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095100337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112059713 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110699116 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084773947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10330631 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127692315 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085119626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111816667 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102162133 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08482952 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102770726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10184703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091598896 seconds)
  done (took 3.616505072 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083515539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100330773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083410288 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098663909 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081762859 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098485289 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08121671 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097632039 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084677844 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097272355 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084084315 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099705979 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084897564 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101021878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084053503 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100447071 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083407316 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097910558 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08102031 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098477924 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084025776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101455498 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083226458 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098586733 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080380377 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101224658 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080582386 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098768563 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082618852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098817555 seconds)
  done (took 3.509963818 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09313957 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108751045 seconds)
  done (took 0.980041474 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081910325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116984647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080469932 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105261463 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087561132 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103611666 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109126057 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088240061 seconds)
  done (took 1.551357369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099863176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112546747 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086392787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116246375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112127832 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.10056194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174954291 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105169907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089585599 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101931184 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116377353 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083801938 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107693534 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083816694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107609898 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089919198 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100345988 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107786106 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089704165 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099885503 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086235162 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112293928 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086572221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099971092 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103366472 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093860554 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11510946 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085180355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106796703 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108564881 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090551688 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095278016 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084721626 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103508041 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082231629 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111778746 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119148731 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087308734 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111816676 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085530008 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115359203 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096719779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089071757 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108888159 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111673312 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085530321 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102372508 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080899357 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098833216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087284481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097321148 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084619278 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097322417 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09080705 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105745532 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112294932 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083757524 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103895619 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087759525 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106605879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091230184 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106156258 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104378309 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085013941 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10945838 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090096804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113709741 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078749806 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097893876 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099457371 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095897254 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126868016 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091893048 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104364654 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103465041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083593344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105390402 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087266787 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108880244 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108452492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085816799 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109727272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093581935 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103304642 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087180105 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113108472 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100600569 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088091885 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100362073 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121268054 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08387567 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099769462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082787995 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113649275 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087922986 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103351728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081281959 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110580935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095592699 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086582777 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103450014 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085316868 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114540975 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107892405 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091332081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112523061 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091399218 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103001803 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105788614 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082047212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103558834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088037069 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.1095841 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079356922 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105379752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084485251 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104672627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11090887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083435492 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102898183 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093523986 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108900228 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081750811 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099585468 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104387285 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085480441 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107137891 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09340709 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101911463 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080039518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098449731 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104959474 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085864885 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106002193 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090862306 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106002197 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07858276 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10122279 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107677671 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096047825 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102443916 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085774618 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110180268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084626283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102780992 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10876574 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087870682 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101794076 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090882337 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104057853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080346569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108329293 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10593559 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084140498 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106188317 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089415681 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106886307 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085211215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102524379 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108404115 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087151474 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10171814 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085016058 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101197285 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096181269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105674803 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097268546 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082704346 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110479471 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082762617 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103173728 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084235621 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105371764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085765475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102052197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102030319 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086840101 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115754405 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089728514 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105915063 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107774667 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097233087 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103032871 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087262051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103965993 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08527579 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105429489 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113337335 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091467453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108717843 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086638098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101153549 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108864586 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094320077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102138118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082998353 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102343576 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088768235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109660429 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106563518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086767812 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101796097 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08584934 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107799308 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086527083 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104167494 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101800464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090827863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102472696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093200164 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105725854 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113637641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089336805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097831394 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089518088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102553984 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09044746 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099844828 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082177827 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103435223 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104001095 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085048014 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105450763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07973712 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110792012 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092917778 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104163463 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083174891 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105485372 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109835006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087091045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107630316 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088771768 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110822805 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114297493 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084838478 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106157348 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096756319 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104300502 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078576016 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110841553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.1011222 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085360616 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101807429 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085231406 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107998542 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095436673 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11266549 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097286553 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089012068 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102580938 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085357647 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098974495 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090252249 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107644603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084823163 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112462132 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104828598 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089129528 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107862346 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086156284 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105669874 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08650375 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107601312 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104250912 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089741058 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102208127 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089525449 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103220147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083246313 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105993465 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085422105 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105114762 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10929475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08589951 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103948912 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088095046 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104893953 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086236972 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104376908 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083672922 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107839004 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103878127 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086354801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106034234 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081723254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110555339 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085399656 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112173491 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085043088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101138232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108697892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089011704 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109758051 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086013514 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105624004 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103915158 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086061527 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105665001 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092975882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101283765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098228737 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113875469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104230239 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089072999 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103728616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087853139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102709971 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086160563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105878169 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084726699 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.105211748 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108169849 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08926723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103932895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088093821 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10531034 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085982967 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107078117 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080673767 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103990734 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083925506 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10580728 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115032036 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086770307 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108288032 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084024064 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106585928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102139954 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083011501 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112959615 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095981348 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106125062 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110906788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085986785 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105396832 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097528191 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098730697 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082654695 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103110047 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082204994 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121650372 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105209635 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096183157 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103803372 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084726265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101784823 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086364378 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104712034 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078692407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103620184 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108031258 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088712015 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103028099 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087283684 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107775405 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087255143 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115623721 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102962995 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087374766 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10414264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083102622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103521305 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084900602 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107751803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08656082 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103537403 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082725223 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106286471 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104859092 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087918657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104287528 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087473358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112861659 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085999874 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108564637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10829168 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080949966 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107024169 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086369089 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104462438 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084661759 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108365129 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088888761 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106442616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11341214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086430408 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105242403 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086128988 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103171972 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085116931 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106035546 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103524084 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085875615 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104751997 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095358049 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102797896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089363928 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105361528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085114313 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113799695 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105924935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090805835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113839329 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088209252 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10762717 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112185547 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09143459 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108244696 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087153208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107490036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110626542 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085611331 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110530062 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087264617 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106112854 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088531995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103600494 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085958131 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106493422 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084927427 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113347617 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105814945 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085980906 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104167341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084618602 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106673185 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089750246 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114026073 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107710753 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089420772 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099743836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083589956 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106494962 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083728146 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107282667 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089142615 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111918205 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10659075 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08759095 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103391334 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097204001 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112002849 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088701435 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104375505 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108467098 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088177187 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107448911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086926092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104707824 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08813709 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110202089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086457594 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105839313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11219997 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090022021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106304737 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087565927 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106404246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085721886 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101847057 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086067732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10900488 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11012543 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089337813 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105564118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097383239 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105276981 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084928829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110676075 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104464748 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092039556 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101358905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087766281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107550934 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086978878 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10281762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103652766 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085630535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107063228 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086405273 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099986117 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098392987 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115916785 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108389969 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085756962 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103668591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082188473 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100263834 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086385607 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106966696 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088059946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117031871 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103817375 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086571523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099827528 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088020478 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108700338 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089395407 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102848458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081769178 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105254804 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088730213 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111717155 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104235384 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086854862 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108950289 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08988068 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103867369 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090173361 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103775508 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108444039 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101525778 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106927999 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087484215 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113195642 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113207324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088195242 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100162691 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08822367 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109806179 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086227214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10870044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086426458 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123832685 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110193325 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085032485 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105434701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088963725 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106471617 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113743658 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088568464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106817417 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091785717 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108491117 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115487084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090040628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114627801 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089650663 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110018233 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084544727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107353836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103409083 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086396834 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107643888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08832906 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112560099 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114590366 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087605494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117299005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096545643 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11190337 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082364243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106570008 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084864322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102509305 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108987183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08617712 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103861795 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085244048 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105099979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087637023 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113339543 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087395506 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108224255 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104937254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082263528 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107211809 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090953356 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106553001 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083939347 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107089126 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087668186 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111263145 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109326485 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088166464 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107333819 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089577962 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10599074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083297526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113143777 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086174318 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109774564 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085682987 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10735754 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106297354 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091488766 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112192399 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088394358 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109623993 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118172874 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091310108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102471421 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085585524 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112577061 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084818421 seconds)
  done (took 59.518868259 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151172865 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084593504 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101766573 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082876869 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116871982 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101765366 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082751864 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102770507 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084079664 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10556611 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081875871 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102497718 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111738693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128409609 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097428331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107575871 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081085712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105858186 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101836689 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084542182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113074738 seconds)
  done (took 2.960965257 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10790267 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12139746 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118197745 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12237568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093130822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119211607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118073865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117664886 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102535147 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115943686 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12112763 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11813288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095419807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115172825 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113077099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096113426 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122353438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112515852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119355883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099778651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116296877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118498475 seconds)
  done (took 3.31095362 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088178785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105258259 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088250139 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100774469 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086875774 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101453403 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091967658 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104352613 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089848694 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106185229 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085000256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106001365 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107169565 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083716648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105718072 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085712642 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154988966 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109324515 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085302364 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10842517 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080695165 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110121282 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10167127 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083409054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104665459 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092212261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107977546 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085497531 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106920198 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085459048 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107837031 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083696911 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108682719 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106816097 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086724232 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104628909 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087812555 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106359393 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082923741 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104335937 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087852569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103794966 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08709403 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109648802 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084473762 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104044767 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084440275 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103297851 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078623965 seconds)
  done (took 5.60646698 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107891237 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160587105 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086768442 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143707372 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122379102 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112114093 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088185131 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141694965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106681588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086265444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127624701 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125623216 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107107537 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092512687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112348071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107397774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0905376 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106350313 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091420067 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108156736 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11258179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094723103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124532524 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123077942 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111505006 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087282418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10778614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092718801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122741548 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114818027 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112465813 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094655891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124706616 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114494491 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086284616 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111471318 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126291414 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087279719 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112211819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105324517 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091984951 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113689566 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114534464 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10702086 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11031683 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112756707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088801593 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105287426 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122492032 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091065252 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117674354 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123713919 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092042138 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10905206 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112948242 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124155088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088879299 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105557294 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091133182 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122753027 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105816842 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092349937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124361637 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109700082 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095888506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123924696 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114587457 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111928128 seconds)
  done (took 8.389001943 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098544679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115549369 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12473405 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123670563 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095031871 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115413468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114551783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093755396 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115591797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121381571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113650601 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137907925 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090650721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119738097 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114277555 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095393269 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116409315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114540508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095392879 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115774226 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115708281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123915223 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094964773 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124289878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147239909 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109775709 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094014718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111912388 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121469306 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112661385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125849255 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094321741 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113102552 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121677473 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125729017 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093379939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107747096 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115024956 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096056673 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115879603 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10925527 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105121919 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11603188 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110372198 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095847364 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115536346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125179567 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129032971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118794546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101157446 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116198718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125398598 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114405155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095561392 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125270936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152205501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125147931 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12540433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115354806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104560883 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125416573 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133368416 seconds)
  done (took 7.918923681 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112379301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119427808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12267873 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103975491 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087959276 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113130175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085846912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107153557 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11777391 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098414031 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121716652 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112490197 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096314276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122022695 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114009633 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116194415 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092957457 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113577329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117924647 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092513837 seconds)
  done (took 3.011015482 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098172143 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12922494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088569266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116638934 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112312144 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096119396 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112672763 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111577975 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090485184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112243881 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099704034 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121012701 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109664507 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092817979 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119376185 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115296973 seconds)
  done (took 2.574926004 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104145209 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121738507 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124151554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088322846 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108110061 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082528646 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107898875 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099667824 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081869926 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120258985 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084520539 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112313722 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109281512 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08741315 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105224996 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09209592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10549158 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08628603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109073092 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123165957 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10050509 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10916941 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088903795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11242076 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108653447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093509987 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111019194 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106293777 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088017342 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109641837 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088970667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11749949 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104266453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086497911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10710651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086597 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10852199 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089091385 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113610142 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106854947 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088203787 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109222059 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089301025 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111125648 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084412246 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110917321 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083834031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117581613 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106655909 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090188856 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110415307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090948697 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111223232 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119732992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092199958 seconds)
  done (took 6.452268377 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103415096 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114109064 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083760905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10872348 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091130102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112330736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112103159 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092683694 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110595587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086975781 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111808987 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092601758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112152793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111863859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092296815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114470268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085048095 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111620631 seconds)
  done (took 2.699868103 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095699207 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109559405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096400397 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109780248 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088201795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112877064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084689319 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108895016 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107725526 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090569815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109729588 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092129051 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108577503 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090888567 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110723714 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089055281 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113589573 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106808533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090505176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104604009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092136274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108855255 seconds)
  done (took 3.072030152 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123441285 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130029572 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096026015 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237537808 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108091671 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137737918 seconds)
  done (took 1.681948612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114563113 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125225439 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110055641 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112222765 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1197194 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090097945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112974549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112151112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12231777 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105600182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112974975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122693815 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122336893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101596634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120045218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119279213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111740063 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092547764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110716908 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132255684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091424251 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122743511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112544729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091248248 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113796238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122792427 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122670739 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105510239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112523528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122040683 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118615839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092426978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122740801 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125939499 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091960644 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124263378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11343774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130912893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117828058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10148828 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114267397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119132151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101991502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118990904 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121845635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108283306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092681613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108154062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106732869 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135033864 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094043956 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117122387 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114316387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117958957 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097488313 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13443145 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12274583 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117266937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114524874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12114561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116793275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094935284 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116817456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121604713 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112958512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097484909 seconds)
  done (took 8.322242738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10753244 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129340622 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108917098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122966331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099767731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110722502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11025077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092442512 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113263375 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111145329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157062187 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094120443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122127484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122903267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091248384 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112680404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107351463 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117352307 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08816277 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134439887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10691636 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117806186 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096947499 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117664006 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122314378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114523899 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107135209 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087909311 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108179144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087431716 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11436185 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107841701 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116410818 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086904793 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118694032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107831606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086476137 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114230168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107925816 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113202421 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097515553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128934735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108240964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106638412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102963165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108371348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10721324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087649821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108225621 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106508473 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102876215 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122437105 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124680021 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11791272 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107711372 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089183464 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108481088 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107126617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088522054 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116564336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117065492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086820563 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134360576 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109467579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109709396 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116985665 seconds)
  done (took 8.073425022 seconds)
done (took 159.236413511 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220874574 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199263905 seconds)
  done (took 1.272678308 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.093255004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14177905 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100562284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174189232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084675322 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140126169 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136346988 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098312488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106491594 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085809188 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106215869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086791067 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171870314 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084466329 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106938397 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106271275 seconds)
  done (took 2.682262456 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.123699748 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.239864257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127308527 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106178306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093179155 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11401948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087782882 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116406106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093522449 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111794726 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091972155 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.11286614 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087968779 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111210511 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109473349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088934982 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104381623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090427205 seconds)
  done (took 2.869750961 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12055468 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152651514 seconds)
  done (took 1.139785842 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.254766988 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162906022 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225088585 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467617672 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.270741177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.361726166 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.201525195 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210739816 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16619869 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20662921 seconds)
  done (took 3.384706829 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124339754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184389748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315135896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155377836 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106793217 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128212976 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156375764 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12977618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121697186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101623798 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1214896 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117222674 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137943017 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095518313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117200683 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.115953213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120569661 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113316077 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112518859 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095051718 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136821087 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083946066 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116209126 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11270401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096847804 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119975168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104652408 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084117826 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115576068 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093124835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113828157 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124504171 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117497012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155358212 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12179971 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155146595 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117072952 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090984327 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114844574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09059962 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118453376 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118026459 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122745644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097167299 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105008764 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097647592 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.1053434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084084826 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114641064 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118497332 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093418746 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113285906 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153403995 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118892627 seconds)
  done (took 7.356524806 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789006591 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157942366 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089327331 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.870186707 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111666258 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127017865 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772974875 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110608486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254178366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.74609604 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131816261 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095052393 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227101172 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257276455 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928784632 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313486326 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63674688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126111323 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150043363 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151450036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116394009 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11456876 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130874159 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427826286 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116342533 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088830283 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118983389 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118600573 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159817121 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124144204 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092402791 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197187583 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246513924 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201484244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094402134 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111070787 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088942979 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189200718 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240173259 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215232826 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179111613 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107693928 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089273143 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122363493 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130599742 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086434528 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182107958 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175105338 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170008336 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113758484 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095665495 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119628413 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120759567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163058912 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.1207631 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311328014 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318648098 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089519152 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120662832 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123795092 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238407846 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123283665 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224310295 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137910634 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190314838 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111451034 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777964525 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168652438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088772271 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116868298 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119310227 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093593722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121324353 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166987452 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406664744 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122742134 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.090619131 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111424962 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224709511 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103191149 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11146401 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160261525 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115366048 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097638922 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124458786 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12236038 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166749092 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227797536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122820188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118891443 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093017558 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124524767 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116267429 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210263391 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21755726 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161888306 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207370677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121261529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161669433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189871887 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095966402 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193530776 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097293457 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123760093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120968624 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215135551 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143551952 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100759619 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114921013 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117925674 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146957152 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103499917 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118531829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168184959 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479148704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167106805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107743395 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104837758 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120503335 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159944779 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117473471 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259084501 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099784966 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190343354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096925907 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109230033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119719186 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162117552 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120452672 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09967691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122609161 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117838214 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235107248 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214461684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098187393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242219406 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183231917 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116590009 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171458953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120284447 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168077799 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118044673 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098765217 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116974885 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767772564 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101580035 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120255791 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113614202 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185249343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09007761 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12367297 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122495739 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086223724 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803215434 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126175786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098529769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123559519 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11607458 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097638492 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117893232 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114849564 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160950865 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230342489 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116924023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098089192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123759782 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159394547 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116234266 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123218859 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102069772 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124897855 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121277847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092069356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125291259 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168309278 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18162893 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.195103153 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594751396 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110768979 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101158672 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227143754 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112425127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287117215 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097649668 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222170349 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161565247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121693375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315364639 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164201345 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186000601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126169668 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17265949 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108867535 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095154459 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185738277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088990914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116967546 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161151297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124419244 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121836725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94158032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112392764 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224979027 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109017562 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16994034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116319859 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096929639 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291523319 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112310265 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126115843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164132257 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091104832 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12459883 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.874837847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102557058 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121364202 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116987385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221250252 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163149978 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118380117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096554794 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119495074 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160523903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229325159 seconds)
  done (took 43.821269838 seconds)
done (took 63.381314367 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276170837 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215011364 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266101409 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170592594 seconds)
  done (took 1.897269456 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179480653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150967323 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121514703 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107004886 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149502928 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084093638 seconds)
  done (took 1.678920558 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364664356 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275610108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240539164 seconds)
  done (took 1.771711078 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322122351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247284168 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470139341 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324601381 seconds)
  done (took 2.355043546 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210731681 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132028959 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109610289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103314943 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196113516 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243091846 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141399416 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200187982 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.11905201 seconds)
  done (took 2.393659255 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.175631938 seconds)
done (took 11.160767877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.160250086 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097714212 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.133382789 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.179472973 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.244959752 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.223594144 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 0.171434616 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093045129 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.304956661 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126942594 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.199999429 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.182486967 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122119879 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113009667 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119623733 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.225899783 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083490263 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.149732152 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125192456 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130668966 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216496645 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.229457148 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211870047 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121087951 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111525764 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124227092 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.156087175 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.232725153 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.157856005 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111101693 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114014085 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208146244 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111312086 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179554006 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124026597 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155847883 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116364798 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13675326 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132619157 seconds)
    (40/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.259582491 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.241345715 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.171295131 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214033139 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18987278 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085568259 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139271975 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128717392 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115721108 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117184067 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177360161 seconds)
    (51/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.157750958 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133000898 seconds)
    (53/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138579596 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095457583 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194625129 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121914714 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087304885 seconds)
    (58/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157540295 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095802644 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.190355086 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135369856 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123267455 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.160723262 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119991151 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152146071 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.168017455 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149439848 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07560489 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117797658 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199979917 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089432977 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.18874326 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185773591 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168785399 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138618534 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124643087 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085868839 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125707459 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117999683 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091435981 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134034995 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200479365 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.089485791 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189653828 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136658701 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083078372 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081983784 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08791587 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067201159 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117053801 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.127514075 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216646441 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119063304 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.12493879 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089174985 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114131431 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173925379 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108340353 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087462446 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117008725 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112076684 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089304849 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097485526 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151698952 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119238698 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.176481831 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169830693 seconds)
    (108/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12709891 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093325176 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140044469 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14720027 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146723946 seconds)
    (113/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.147317986 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114015111 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098979909 seconds)
    (116/309) benchmarking ("sort", BigInt, false)...
    done (took 0.430273879 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221905989 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193065065 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114592284 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102801819 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110720095 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066615394 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214693899 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066376307 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.191205942 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111132672 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.17989227 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095555153 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135237731 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108373122 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117220737 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130809453 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125469957 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.1853472 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066648985 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114960213 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.160355454 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110511756 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184097067 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.109327189 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092632765 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116005635 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087869304 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113170407 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095952167 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.108532824 seconds)
    (147/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102301688 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10941165 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092726304 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089033386 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091081597 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107930384 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114518389 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117269042 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092420139 seconds)
    (156/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.182065849 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107426181 seconds)
    (158/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098085581 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153220967 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067638069 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112494709 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068624599 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179207924 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087854701 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089379368 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.188789547 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066901778 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065672431 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114718188 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.168998877 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092805186 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106659838 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112490687 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110135102 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09542111 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118858466 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067313381 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108238619 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066928957 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.075887206 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109335806 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066079578 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132416008 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189229104 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.184659652 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067464645 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131111037 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066430869 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065751426 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110847377 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083687079 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090879482 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084116255 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133146999 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093687884 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112339913 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197899404 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16014214 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105428697 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067095 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089946466 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09572481 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115956556 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093885304 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.131335152 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067512935 seconds)
    (207/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.088326198 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079402346 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100704392 seconds)
    (210/309) benchmarking ("sort", Int8, false)...
    done (took 0.208707192 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112473647 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109058801 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092436421 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17236847 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110022343 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14141912 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116698321 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212819978 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088311292 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135581666 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08447973 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091259118 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086497719 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153455314 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173988152 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06740935 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115090927 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068515196 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116378433 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164101252 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112131717 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067024526 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099511422 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068843626 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066214548 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092147433 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093271426 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119293221 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067364178 seconds)
    (240/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066458054 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216131553 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116949602 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086285044 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120858754 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093874076 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146535581 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.136387506 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094155037 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06633131 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117886011 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107538715 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06796853 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085751203 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091115139 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085601657 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088343458 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087117686 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107974172 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068989497 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091894294 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090119357 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067226398 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117805221 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068146082 seconds)
    (265/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114992056 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068198474 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140454671 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069344116 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066139713 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.1100541 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224492176 seconds)
    (272/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100465063 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090802641 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153435931 seconds)
    (275/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.091411625 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085834558 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117913088 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111120706 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112399515 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106924761 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067850529 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084892617 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089830111 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138133699 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108261168 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142375388 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067977839 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115916468 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077159966 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093637179 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111846033 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066882916 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109325251 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08614352 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111008071 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091940737 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091123883 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090632155 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108797159 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.08861449 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134750603 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091834764 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.090571918 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09037668 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.0905449 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088063296 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117376613 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172042863 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091341644 seconds)
  done (took 39.460169534 seconds)
done (took 40.35357253 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104822396 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148418869 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095406607 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136298484 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12223715 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091345087 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11796441 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096823439 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123335407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123833153 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097921558 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092709294 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097430865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119815329 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096765998 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138839729 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122621748 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093760399 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118429366 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085802927 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119023639 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08580569 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112252771 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069381275 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121755858 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094808429 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116867098 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119645068 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087915976 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108603466 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090908396 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116312304 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08739504 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123965599 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093452199 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118676373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097071177 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121204785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087149333 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110955321 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116261009 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088147085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115572289 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096047139 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115806746 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093211471 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117351583 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099975227 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139784457 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114126148 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096278932 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119579833 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096283306 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117088736 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09077037 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11876918 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091338404 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140033291 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118562236 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092493025 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119688458 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094868932 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117743965 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095189521 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121256641 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119904731 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098977388 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115353116 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098331638 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115755281 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086892177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119420549 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089504906 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110850769 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095880371 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122018936 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085389473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116098227 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116293998 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092721709 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10871366 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090262689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110933009 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094013285 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111713486 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07044024 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089383852 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116587691 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108205159 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096019198 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.1162061 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094158956 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111155888 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099196423 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109677995 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092367142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110249816 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08736737 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112374304 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090411474 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110868013 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089682919 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119531746 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087917866 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117292288 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122478629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08776479 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115720627 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086772535 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109121678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102565352 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120692303 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087224647 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116390997 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085937268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118170883 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08608452 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110327752 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086802591 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110873423 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093086974 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110747894 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08855555 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118160185 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123840166 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087277116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112650215 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090401082 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109918283 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09307721 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110148429 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087575627 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111892179 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078284771 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112669054 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088057295 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116860207 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090375384 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118270221 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089250318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119687705 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091532711 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116807661 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092625014 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110073856 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074507734 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115415932 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090579971 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112779905 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087941658 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112653482 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087311513 seconds)
done (took 16.901047647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092976126 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184816035 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150952603 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140857038 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109625967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111574936 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12117174 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11943812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112857737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14292586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111086011 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132122078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147586212 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08713247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112192889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091308184 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112159625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102921739 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146073171 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132199577 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163847439 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086409056 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145981129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135412721 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119697304 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106702375 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11171881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092247348 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114592344 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113268705 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133170744 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09018293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1127299 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132549967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105651738 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119555154 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087248021 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118543535 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087029588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111857237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141277525 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109584429 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117438191 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116698983 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092151621 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112452184 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089465296 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120020895 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098329695 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116775126 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125317917 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156185137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091969696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12173855 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086389816 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122627983 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119888333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090487712 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110849644 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091133616 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111024425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091438437 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126694949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141404325 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091621094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121722642 seconds)
  done (took 8.610906567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110274176 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138974457 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.120741924 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130935583 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109967416 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088491367 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112064922 seconds)
  done (took 1.769876843 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092210805 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132997884 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111733072 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134928794 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130277968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110021016 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122587899 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090814074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129920919 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088498061 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134100845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151498308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089910232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120552576 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135989411 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089315748 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136841487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088982806 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115044271 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114024874 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116603351 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133393918 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09227503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112526298 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104068899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113379481 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160672839 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094046072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113668433 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091924902 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110678102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16536212 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104682994 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124505487 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088396695 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128432041 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126976423 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087251523 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128739006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093924841 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127516405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089316183 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115450909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086206579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118052942 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123088772 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090546208 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113033731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09251571 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133732581 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089692042 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126344874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089321881 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117450003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090041583 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119334985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121856026 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09017309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131888789 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091035399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130308026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105636182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127600172 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12931047 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091511816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126731597 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102539143 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116990527 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089980908 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116664624 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129670675 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08848287 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114927121 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100369428 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114772273 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112525603 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137739684 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089707151 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124528633 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112924784 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089606188 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113410712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113291813 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117206093 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088774058 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118544654 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091659495 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112053639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087736419 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117424279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086981486 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115083887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091999138 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114133315 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114846017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106794848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113642198 seconds)
  done (took 11.786131304 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095621474 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113667041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092917256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11362498 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090821769 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114168087 seconds)
  done (took 1.589983005 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118847117 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116877112 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103592878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120316727 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156101848 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103598314 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130564514 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122979879 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108009814 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128403058 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128417879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105385336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135186073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119670577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104652601 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120120167 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103586969 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12539258 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125695992 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097712042 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136569784 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120187403 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096622235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131752789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11715117 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096507772 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124351438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102550265 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127269418 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121820484 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097620851 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117621586 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096379779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122416642 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12873193 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096470527 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119909801 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117822929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104167822 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116576656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105428773 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121353738 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1263073 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095404585 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122582139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119843401 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095203896 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124882939 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104200791 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119248828 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118265096 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096101129 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117543183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094798872 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120769812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122728191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094383089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128695151 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096044193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12157542 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117164142 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094159612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123013681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092734371 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129380753 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118444025 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09644874 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120862651 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120530425 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097153034 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118045899 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093219012 seconds)
  done (took 9.203883165 seconds)
done (took 33.911647675 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685630859 seconds)
  done (took 1.652441589 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.71979013 seconds)
  done (took 1.688245695 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.778686003 seconds)
  done (took 16.746664755 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498396767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57680481 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.878026844 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179361814 seconds)
  done (took 3.096630814 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.930887926 seconds)
  done (took 1.915409675 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.30168261 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256032475 seconds)
  done (took 1.528980585 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77314589 seconds)
  done (took 1.747738492 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362098405 seconds)
  done (took 2.332803627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336053339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184314908 seconds)
  done (took 1.502286558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548097925 seconds)
  done (took 1.529803447 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.914087159 seconds)
  done (took 7.898667055 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268184037 seconds)
  done (took 1.255725507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303489041 seconds)
  done (took 1.287262034 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.296760704 seconds)
  done (took 4.281920727 seconds)
done (took 49.44242448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104226106 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125355345 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102593255 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123642575 seconds)
  done (took 1.435803815 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106750353 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119684126 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099731358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119853967 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12411697 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096106183 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121623487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100600344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119931912 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096416045 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119834012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117759386 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099721184 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121679527 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092995134 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12332163 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098711716 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120493479 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122302746 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096734019 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117390147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098451363 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122807191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094126638 seconds)
  done (took 3.636601098 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106229897 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117947748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097003736 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116826877 seconds)
  done (took 1.430603964 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104553266 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140618882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13748915 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101816637 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141743088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134038767 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093489127 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115363394 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095000135 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123813438 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091269686 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147967776 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136223565 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098858452 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126559425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088556442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116470492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135138338 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100139481 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12542286 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094691612 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124143435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09013115 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13876655 seconds)
  done (took 3.790332689 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17489791 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126500976 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137280425 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095136418 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159270092 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139834539 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088330892 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139811559 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087663856 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130889913 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116824973 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13382923 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128365687 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087976065 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112508101 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087747364 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128011128 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127380303 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091665246 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125922988 seconds)
  done (took 3.414095855 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101501483 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115884484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087945775 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114802145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099908923 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119036904 seconds)
  done (took 1.6327129 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095193208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112592116 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090707328 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112971449 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094625864 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113546591 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089049043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113585691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090415914 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112794392 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089484015 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111745634 seconds)
  done (took 2.220370099 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.461734449 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092237507 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118890671 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111929276 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096550213 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11344428 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102501019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117154075 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138524625 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089422093 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113134624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091329032 seconds)
  done (took 2.636081476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232718742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124501927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283264927 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364709041 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155166165 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176454817 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279212035 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163312302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220544604 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165766744 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202989865 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220006392 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150568286 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187926001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13726639 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11822259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228735526 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245740274 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152452638 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207961452 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224691789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165262495 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179009699 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150843431 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136222502 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171305275 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095068189 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129791391 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231172681 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174572223 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211935474 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161048688 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144133307 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208992859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250064387 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217680682 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281893494 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10874534 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173131192 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167362625 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2607525 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137170215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201588607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152723663 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130658419 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188460938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188350206 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175569244 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150420746 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11246331 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217833407 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236526637 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191634193 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136593624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3007269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150084828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.173434474 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21824672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22225352 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224155973 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184678832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119453427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186393489 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214018812 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183569176 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174288548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178414537 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146937396 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224434373 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188462161 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163433696 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217223884 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184394469 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140328583 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170116578 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171457557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171062647 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254073962 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181557234 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120714419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168575608 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148436957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130452944 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167198612 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123720219 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235259748 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116659049 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161181391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241671247 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157678968 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15770839 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201757129 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227462507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121235384 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110664707 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1533197 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153995901 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192914252 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140209022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15702407 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16094649 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128357397 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183944186 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097162441 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208105888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090654891 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196926476 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182147224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.098976258 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159567663 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149610692 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148899661 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172113621 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221886579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11538033 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132089071 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232176632 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177118234 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15020918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176979186 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201338172 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143493165 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148787 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197001861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241382838 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138614135 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201829333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155395141 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134410736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.129737892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180845422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153377192 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15917096 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106842166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.206675676 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203653804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124577846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110302383 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217631847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131635934 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104864138 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161203401 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146771766 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138317751 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151208067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152185221 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179652373 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17555147 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153420232 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162491919 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150876373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249946866 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141314397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149781846 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146722017 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094020532 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.217668955 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198834571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129397163 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203548384 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170519472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226811698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169167502 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133872935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175456592 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10240239 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119742756 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19125205 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165853517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1591108 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223353991 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199449013 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.203795365 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183401776 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172482981 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171010617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165556435 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154829944 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138997933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159578924 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170637575 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095427528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143956462 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132764035 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14758042 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143617267 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106954581 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221497299 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167961971 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21458342 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15830536 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122886093 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179394074 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127696752 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172573501 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202607183 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120513181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224507089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191452128 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210289973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117418577 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227142568 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093151032 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125014748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141516577 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170254887 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131736641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108399041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163084974 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180064451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206233218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176083459 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237068102 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171270276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188725975 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120548347 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141295083 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209794409 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176103146 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189361804 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116041399 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148269273 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176033032 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156184944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251960905 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166951871 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174569275 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232723849 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1497306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104063721 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149898599 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220560507 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153635842 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17702141 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146733851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138976772 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159905221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106231977 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15853554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209237058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161572252 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187100862 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149671042 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183598105 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126680295 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162381636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159151012 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164381389 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080884793 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198631716 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20306875 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148412689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16744077 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212835285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103658903 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303733862 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240371682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193756628 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136386387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155104873 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160190353 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16338962 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813897 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176231553 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157877672 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185881653 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15769191 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136186505 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139953833 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146178287 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121925238 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129559211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146983454 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17557347 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138417663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183381642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162318353 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158599516 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17144248 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149017052 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143636092 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149006668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212188295 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207975458 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210242866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149622284 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179116811 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233036204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098364493 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130738297 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13240427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177661082 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107940186 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217493759 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186792658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228620924 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180541217 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191826571 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138330887 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119216802 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156249234 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173548594 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206842414 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150056632 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158036587 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228793911 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119464991 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131167689 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176836449 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312419882 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119094898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222538231 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079423522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278657061 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125330623 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131196519 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136664946 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231938068 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135225338 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187684046 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172749282 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170467026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165091708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148783811 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190071959 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241362915 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200100299 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177647837 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132190633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155744331 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174764408 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217135152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155703001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112513354 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230209686 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195109806 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195210569 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140786904 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169078919 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167499369 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156283827 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212200543 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107287555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233233234 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132124239 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193299733 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152418818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143120616 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175392964 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188030946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138910085 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213608538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18177873 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133999967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10575253 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167846033 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203922413 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155982245 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099974581 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204941053 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098023218 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218170261 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228183293 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134675223 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155498414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146750264 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107339781 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153540677 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156324189 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138984965 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162398889 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201294743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134734329 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190000202 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228227194 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167188715 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173655056 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144601238 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691117282 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130188743 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193667083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158700633 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231349019 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14792759 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172337434 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156933598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166748981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195402516 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158484172 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230366489 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19168113 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202696024 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10493535 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157027609 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161431343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143349889 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149707508 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168166009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15910498 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152786984 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176159671 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197186511 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107189823 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13903964 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197336829 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159605636 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207424955 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177268073 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1109455 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172189818 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213450933 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131509039 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179225283 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233717694 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113944542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152185701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134959546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155915849 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258699254 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096958333 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231200756 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185126859 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158263029 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167908291 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146354177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190655523 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157958156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212541081 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146716743 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159545797 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155022275 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111077989 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129813488 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154509206 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166624174 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148493894 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15821491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138133116 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216452901 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09549507 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144602493 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286617181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217970881 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213477587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13491196 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134117018 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162125445 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123303495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202396843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177730439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134797043 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108765973 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13661129 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155188731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113046524 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15603215 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195817696 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164692294 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232885182 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109678024 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277291392 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139522834 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154172475 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088510402 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13179457 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149910909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145649494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15880509 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191256368 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260483244 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145583127 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106267018 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148766326 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125401256 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108121746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164150578 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161537369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202921949 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147042002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082146119 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155959387 seconds)
  done (took 82.622799131 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173534789 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130181366 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144995526 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199101519 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17590142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268943498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.206722376 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253953486 seconds)
  done (took 2.633168184 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093698249 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143401161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156630224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132135609 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091192138 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118416422 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341777835 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132457195 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114046334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120821099 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.170703783 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093174608 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545037253 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090595073 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118406014 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106992878 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09113104 seconds)
  done (took 3.733052377 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47271225 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669690234 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.505401404 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09696217 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.939205702 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11313293 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.364402989 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189951472 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11390779 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.459274133 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77213315 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154742708 seconds)
  done (took 17.935362247 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099268467 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.118928845 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106693891 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135023094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095146591 seconds)
  done (took 1.641351536 seconds)
done (took 129.741627058 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104340371 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400709003 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071711082 seconds)
  done (took 1.588606826 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106716991 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136157918 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108782081 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133924909 seconds)
  done (took 1.579237877 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097470906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125022507 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108385026 seconds)
  done (took 1.417666884 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.31981614 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187366577 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.16275236 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106090446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127388028 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103327133 seconds)
  done (took 1.426171127 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097336522 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126282704 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097813313 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127978151 seconds)
  done (took 1.539234763 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094877616 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070680251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101174867 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074678943 seconds)
  done (took 1.427277925 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11366313 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130588103 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10350803 seconds)
  done (took 1.438949014 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129497711 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137494693 seconds)
  done (took 1.359182494 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105290118 seconds)
  done (took 1.19225004 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118223147 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167412881 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188982942 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164450476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.224833243 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163281602 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139485029 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115115906 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129133488 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142322376 seconds)
  done (took 2.644567165 seconds)
done (took 17.470628844 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103630923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512332789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41156524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117037541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72152728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380584236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018807684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144008728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163637022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093957427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137522617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671495651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008485888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467084577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970723908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.464920002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67529859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11929671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118759312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093977996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004528844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091885634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120399987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09279195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700931471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42317924 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095430794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.464072504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091977973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125406938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382410757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121512857 seconds)
  done (took 17.190108529 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095375048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171679173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097922536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135632105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12190798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094182622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122579371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093355952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177325022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121891702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111711506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119396927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12452811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095096921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140391359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092629127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123140324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093053502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120327883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120668979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111784907 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119570742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094792447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12004632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093421586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133165163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120778149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094230803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1199775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098470088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125751197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094850145 seconds)
  done (took 4.790985139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140429206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18057558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127949126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126705766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166805153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122680358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19785585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11794784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181257672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122318669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137824164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092758781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155402209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121221116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116258658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119952239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097027048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1212671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092228431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122190335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138837767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093198497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120714744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092737444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121296117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107884818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122947474 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119073695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093059072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125175427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099728929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122703874 seconds)
  done (took 5.117058079 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096533721 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125158781 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108470849 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137289746 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095382986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124225648 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096544694 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123026752 seconds)
  done (took 2.001086049 seconds)
done (took 30.185766581 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111148686 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125904471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106100829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133228296 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10230325 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130372887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090807582 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132475075 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131874877 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102505518 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135961891 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092133481 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12176473 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091534002 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133683147 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097254466 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131000068 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102103352 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132554307 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130274483 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09464417 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132591883 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103016636 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132008776 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103961256 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132272167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136498683 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099889538 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12102463 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09372513 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123339588 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103446434 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12288484 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106374273 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125335721 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096675843 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122099354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094029133 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131307229 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131250443 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099177094 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131797679 seconds)
  done (took 5.961184434 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107060404 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138329553 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104541332 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080744938 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115977035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080365795 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13647152 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079147674 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10838825 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107436762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073816303 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104958241 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077615018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100127384 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077317583 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074867785 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10773799 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075806675 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076083204 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104499221 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080182656 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07266051 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106871279 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078454876 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074617366 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108039862 seconds)
  done (took 3.553572296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099984534 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134172847 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111771994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182087897 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159742936 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098798617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130344549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137647843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108537795 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118647896 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095443076 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147078137 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110054395 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127541305 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091993426 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13465987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133986021 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093456039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125921479 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113302616 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136614534 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101701777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141811177 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130916303 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091462002 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122040992 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096139157 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132980232 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097210362 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129525581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096201221 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123170767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120728266 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104722585 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12405985 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093720883 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142148162 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10265567 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129156238 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093049835 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.123750528 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120222012 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113308025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165291299 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090598957 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128865734 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098578932 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130880059 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118972533 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110061547 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129688995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090973692 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123186951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090923622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119360073 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106535152 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121804898 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094469129 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129879196 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122087359 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104991087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123295215 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107620968 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120001109 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119587399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092453625 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118742749 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114493706 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121888896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161120021 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09310331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121603254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101612193 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128596072 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126429366 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09298854 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135322413 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102620269 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123484555 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102816064 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123723862 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095218106 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139420933 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095580272 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121756803 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092995119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125937562 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123209388 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093938478 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134430386 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091964418 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122837185 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110534985 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119778351 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09293935 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127104806 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123882088 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093042718 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133299818 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097933135 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121734392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10221786 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120299131 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09470972 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130847835 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124601965 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09198995 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124073304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098550216 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121383607 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093545835 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123905263 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094491996 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130964096 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099605287 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125826141 seconds)
  done (took 14.675869829 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225514061 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213526378 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233518254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.259990987 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133606513 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113588105 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208751896 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153031556 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121591081 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158479936 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160011968 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180624981 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139471076 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177872851 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139036296 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11952262 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111366056 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162751266 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212864462 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286514678 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112183986 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130137529 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161551324 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158085882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105606351 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130292463 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137363788 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105219705 seconds)
  done (took 5.670302372 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108154247 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154620197 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097694019 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143508507 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145783985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092224317 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125626572 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094072917 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133278506 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134276013 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09299544 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127255633 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100565367 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130460037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121787276 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102761308 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129815404 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093780699 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124547141 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096646559 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128461764 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10063332 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124799993 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091939642 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129838546 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119661585 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085942142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140163516 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092301119 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142716926 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118539856 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099590419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131177589 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092976269 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12288114 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094371107 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123175017 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094105014 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122976291 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09084477 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119753025 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077652065 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119601133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106387336 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126699196 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078589682 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126867502 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126656392 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093970927 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118251962 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09637924 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12393541 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096229981 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127667043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09795779 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121028941 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096018178 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113649979 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099233106 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123009636 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084551669 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119211217 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098155733 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115691671 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100550638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126827181 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09190715 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123139638 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097204053 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127462462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094402807 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124773056 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090986401 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123678422 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095910851 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12596074 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095716473 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1203646 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092542098 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121698068 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07503487 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121344316 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073460955 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12527016 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091126771 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119825267 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095470363 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127721119 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135563942 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094957149 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129876824 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093131101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120151936 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096628337 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111073833 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096170501 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138046103 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139713017 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093924119 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119657659 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107567658 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12419276 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092999985 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104021806 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100771039 seconds)
  done (took 12.814406006 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12744663 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151638603 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094919997 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14074618 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153349429 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154775763 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100774572 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128823128 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094840913 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.147147904 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092857685 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130055166 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097111054 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135331336 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154989528 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102674065 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123412227 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106753311 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130341371 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168244101 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111078288 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140318528 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.106854876 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121749079 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098547389 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138330838 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159776314 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106997706 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134692066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139432317 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107538857 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160108247 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11170106 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125839509 seconds)
  done (took 5.433687712 seconds)
done (took 49.201943883 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.19401018 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40933661 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195121141 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074060201 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.242240306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.207691278 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224343035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19044884 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.408368049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194484347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.42136059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.719909285 seconds)
done (took 59.605060228 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.257179034 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331875367 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454984623 seconds)
  done (took 3.905782584 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.529002006 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.066840957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448028798 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188880677 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189627917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.494155142 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.6767647 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.407815455 seconds)
  done (took 27.589520504 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.190962167 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.538595026 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.463172533 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.457241558 seconds)
  done (took 17.770309373 seconds)
done (took 59.175929063 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193441483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258289098 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226811972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175801026 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29404958 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216057109 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.577934639 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.218345321 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205604318 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188495648 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.190825868 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192573363 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205732793 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.572241428 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196616037 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191047022 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.265359566 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.693948778 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.550493817 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216362523 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22120654 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232372399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223233072 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193266053 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.1899316 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191112369 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191340008 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199719654 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.249339118 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.191332658 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.29092052 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.689339036 seconds)
  done (took 190.013545168 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191904849 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.079644068 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.164356781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249417731 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.524659217 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392401026 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350199429 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.634839944 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211930485 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.22578617 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.320550738 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195556612 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.396593975 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169217137 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205012641 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.298916798 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.402209517 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.427737814 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.21838064 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.475741678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202647369 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.24995732 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.161587456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.310802257 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.224967515 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.204130343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217184706 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222453157 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.385742535 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.329945404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.198653176 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204072538 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.738878381 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05077735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203643778 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.205628692 seconds)
  done (took 148.366946443 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.466520385 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19281182 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193602827 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194200834 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221045169 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19312466 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193074401 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.682120079 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.687767395 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.683236248 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.522566294 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256163297 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.40353212 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19990955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285142062 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208602912 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195905983 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211006367 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23564062 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198825644 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194927305 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.688223406 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210314622 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.406156408 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201506784 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194358627 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221943491 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.581507279 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19482939 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194018003 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22427153 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513097021 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239961 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19395491 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51015016 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.838355149 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306247366 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19647682 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222585791 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196457785 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466493045 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195738976 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196017885 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199062153 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.793670558 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201463893 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.685435662 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20037041 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.087074552 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201420407 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195822859 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19692655 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.712925847 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.727136358 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.216463759 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197536424 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198911852 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196983672 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196283916 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225522766 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.670753334 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288867035 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21197436 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201135255 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225334079 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197000093 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.223989325 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198087676 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.194021905 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256700731 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309553152 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.691103583 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197273632 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292554676 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313761203 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197441662 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197680152 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198796817 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198070924 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304577141 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197242905 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198101066 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.574797369 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204795165 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199737574 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256635323 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291223864 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199594303 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50544136 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203359726 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199501817 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876571568 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292087451 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198816676 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198936373 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197472797 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.573290986 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.691601333 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.372941556 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203263661 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.666320746 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204082145 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.589387326 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.680958629 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.813181824 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204237745 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306268004 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203287718 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199857301 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200881268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228113638 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214786257 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258707292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199494609 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594246765 seconds)
  done (took 344.676003393 seconds)
done (took 685.64972523 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855105441 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846459927 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.953197024 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.837102607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.809122012 seconds)
  done (took 10.429660994 seconds)
done (took 11.564038736 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372533808 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371686799 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255274326 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372951285 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228168695 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.387836607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348991355 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220930468 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295816718 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275008719 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294458614 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250683035 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226896926 seconds)
  done (took 18.030685518 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513343167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517956418 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26914601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532782897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24519536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504129499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402448977 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440720325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412594188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232404303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216088385 seconds)
  done (took 16.417539179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551953098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52188934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272895971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527785421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247859644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515980661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408520552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416682807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418650791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232736174 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214723761 seconds)
  done (took 16.459115322 seconds)
done (took 52.043204679 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210526582 seconds)
  done (took 2.340809979 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244627321 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403601875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224587891 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215713916 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213112978 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213656478 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21598178 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211931276 seconds)
  done (took 11.076274375 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208072154 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20820543 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210619612 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208193386 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208152024 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212139442 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209473065 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208549367 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213109279 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210892601 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212202196 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211709707 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208739131 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210968486 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20942677 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211040022 seconds)
  done (took 20.492410875 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211952565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208663077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209287994 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209241636 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209032205 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208993843 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210623982 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2103109 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208434833 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210174656 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210849213 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209491722 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211759055 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210044058 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210303027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209803189 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210458426 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210246044 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215543714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211679817 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210763443 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210241258 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211807051 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211420669 seconds)
  done (took 30.18670633 seconds)
done (took 65.231965949 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.100217487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.776198117 seconds)
  done (took 9.009821882 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213392763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213168588 seconds)
  done (took 3.560863366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214437483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213730746 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212847959 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213632634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21432555 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212921111 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213763084 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212138808 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213812809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213218326 seconds)
  done (took 13.268873788 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213869778 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213765787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211732822 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214281285 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21375802 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211880106 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213216596 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212967755 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214018108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212195315 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212732736 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213281973 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213701163 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211438208 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213363054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212169448 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211473798 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212459614 seconds)
  done (took 22.965369831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214789911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214589349 seconds)
  done (took 3.564413769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21285501 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212753412 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212498851 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212005997 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213191762 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211917022 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21294931 seconds)
  done (took 9.623298369 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215345403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402236053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481683835 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828135059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217301756 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219823215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080701076 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21870104 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221674099 seconds)
  done (took 14.020921005 seconds)
done (took 77.152453731 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.202617368 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.225961858 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.319101946 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229551713 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.226383708 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553880509 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258288803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333952356 seconds)
done (took 37.491538768 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.22274613 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.917678336 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.924397619 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211786468 seconds)
  done (took 11.191203006 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.180941769 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.062519742 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.192565724 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.136413865 seconds)
  done (took 17.700342856 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120677112 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526587245 seconds)
  done (took 4.767101134 seconds)
done (took 41.023705868 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196431722 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.1941016 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196739478 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.193370136 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.194668671 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.191118665 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.191387541 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.193685973 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.194500561 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.19432393 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.193985967 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194252483 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189813689 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187498558 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.187575901 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190655456 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188372503 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188150123 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188607512 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190507475 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.189847418 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18943811 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.188258549 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.187552895 seconds)
  done (took 29.712326401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.189855382 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.186848834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.190019384 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.190190456 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.18643001 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.188385669 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.189240186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.186451701 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.190074469 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.189766208 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187298315 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.187868426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.189642097 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.185166015 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188263447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.185800763 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.187996165 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185494428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188327206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.185744177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.189287385 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183789974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.182825679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185461452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.184479082 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183827351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.186324993 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.186118602 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.187744816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.18282353 seconds)
  done (took 36.722685732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.186651389 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.188538665 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.182630058 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.181981159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.183723189 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.184043296 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.184786879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.181940403 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.180739512 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.180747346 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.181142733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.180967924 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.182396149 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.181262019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.182857873 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.18056776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.179234035 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.178438707 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.178594265 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.181438608 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.17761705 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.179151937 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.178806221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.179543018 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.187629884 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.187574067 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.187922115 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.187696728 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.18547363 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.185165605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.184589106 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.186074568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.187114272 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.186983746 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.186944724 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.185832153 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.192837419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.19420789 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.187968436 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.188272294 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.188222216 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.188486474 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.18870228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.184615327 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.187108195 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.188557321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.18803198 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.190692341 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.188884115 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.186735698 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.18627534 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.186123919 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.188434286 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.190104605 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.187086873 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.188476361 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.188336725 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189588591 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.188504105 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.18644435 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.187157263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.188593371 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.185901002 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.188377335 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.187326348 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.189389114 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.185394648 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.184842082 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.185885262 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.185982474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.183354289 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.183814724 seconds)
  done (took 86.461863225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.185581111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.184310584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176270152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.172825762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179922965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.179503973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.179766734 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180644733 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177573978 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.185343767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175586149 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181438444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17594313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.183609422 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182519959 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176674115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.180901354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.182425638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.181530265 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.181213387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182711409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181581826 seconds)
  done (took 27.069064414 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183996844 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18333758 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.177535476 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.180741478 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181094838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.17611583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.182729051 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.185576247 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181185333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178922053 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175615407 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180198565 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.180081916 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17402353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180721862 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.177559879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184439377 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183620965 seconds)
  done (took 22.347150713 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.181377986 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.182187771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.182827204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.173898847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.180354988 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.180783473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179140757 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.177706453 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.180569666 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.176452678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.177354665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177253867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.182376075 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176635315 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178653632 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.173815263 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17719221 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179444051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184285594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174616716 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.176398143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185909409 seconds)
  done (took 27.039320293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186581273 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184615745 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.182719093 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.177085661 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.183288676 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.181270462 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.184209513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.180219017 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.184352195 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.181672521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181766928 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.187110438 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.184867574 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179751001 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.177674947 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178985295 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.181612193 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.177193694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177870226 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.1757678 seconds)
  done (took 24.729770344 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.182554684 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177158957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.176149782 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177538656 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177011259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.178055188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180858678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.181275828 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.177040876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.177883015 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.18019926 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.177217415 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177949614 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.177715846 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.176751996 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.178416889 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.178427289 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.177523387 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.180527509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179873658 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.183137927 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179966891 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17608578 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.179710937 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.178757217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.178368652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17845528 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.181641082 seconds)
  done (took 34.109189194 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.184007444 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180037939 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.180404364 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.182783961 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.176366921 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.177349175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.182677257 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.17793694 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179468271 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178044898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.183664901 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.181719785 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181933039 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.183061796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177781981 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.182526768 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182373666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.177526924 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181396076 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179588388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.182832907 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185348617 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.184721291 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.181660059 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183256044 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.181701436 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.182219879 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.182101908 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18555877 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.181064456 seconds)
  done (took 36.547861169 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.207581695 seconds)
    (2/2) benchmarking "in"...
    done (took 1.197147984 seconds)
  done (took 3.509677512 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.184515788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185628656 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.183359763 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.182264367 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.182417935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.185587638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.185742633 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18497412 seconds)
  done (took 10.581861032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.182484924 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.186117508 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.182990732 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.18698795 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.185583862 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.186171491 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188256443 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.204298339 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.182293823 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.180976486 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.187845559 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.193419828 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.190519738 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187265716 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.184469456 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18860982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.184219525 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.184077211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.189757198 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.186243915 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186463094 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187677191 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187616498 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.180911996 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.181749216 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.189098552 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.204487996 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.184847962 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182247942 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.18808156 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.179731716 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.171429806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.174697375 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.176574998 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.174858867 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.175134657 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18279685 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193022946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.182518349 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190076488 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171921857 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.168885485 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.172634336 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.173503752 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.172877921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.171912938 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.172415286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.169223671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.169055691 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.171810381 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.174246033 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168551437 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.167615258 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172641927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.169107048 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177445396 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.187753696 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.172105271 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.176955757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.179209672 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.198958576 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.191478066 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171445345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.170647797 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179088809 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.190196886 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17685927 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.186188013 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.167456465 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.171422081 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.176407001 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.198661779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.193160225 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.170895031 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17160641 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.171791578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171833798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171756699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178176745 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.191232643 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.172275774 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172386244 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.180814782 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190955354 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.172007248 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.171372519 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.171989658 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.173634919 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.173385588 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181237072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.190127989 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.173725991 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.171586983 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.173229239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.173897801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.172891786 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.172725118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173955098 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.170031377 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.173862602 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173390906 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175970628 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.179702129 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173216926 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173387515 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.179798898 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.191606531 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172852334 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.179405363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.174128206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.1736946 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.17459535 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.178802597 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17148436 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176205412 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.180625065 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.172879995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.175357721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.173734986 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.17438089 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182986462 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.195101634 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.17431741 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.173349286 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.177931048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.184092246 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17512599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.177293669 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.175550992 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.173083316 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.17192053 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175585199 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.175296504 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.17571622 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174427787 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175884188 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.172570907 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.176404437 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.175341706 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.175013807 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.17660651 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.175267227 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.175687344 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17732229 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.175246944 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.177853067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.181705727 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.19290094 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.176582144 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.175643965 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.174569412 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176733495 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.176255618 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.175974487 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.176482354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177060829 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.176001347 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.176385298 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.177587104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.177111689 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176721955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.178330845 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180800656 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177677954 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.180743192 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176496645 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.174299733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.178323323 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.1777608 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.175636359 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.177966862 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.176193615 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.179896032 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.183723946 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.177913733 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.177129295 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.180419144 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177917769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177269943 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178517098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.180477304 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.184714205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.177418118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.185819861 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.196258058 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179507704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.178962691 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.17736942 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.177633799 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178458937 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.182792184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185312426 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189034144 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201613605 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.179886208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182036102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.179784357 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.182336829 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.182559483 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.179056813 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.180482484 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179234508 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179955648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179306284 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.180720901 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.17907783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.179688349 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.179531013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.18062003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.179725936 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180738767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.180370752 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179925538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.176888206 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180744671 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179471759 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.179851674 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.17768354 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.18011518 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.18123185 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.180109263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180886702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.185768264 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.17863508 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181430058 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180335161 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.180444249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.180483997 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181766677 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182664874 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.180770752 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.188470679 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.198539164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.180762496 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187888313 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.199285393 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.181421268 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.184013304 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.181989159 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.17983961 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18333895 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.188867828 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.182317197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182796696 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.181963974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181562695 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182091351 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.187747621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.198294551 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.181300898 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.183801628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.184201661 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.181473782 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.183903649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.182879108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.183202327 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185003308 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183209512 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.18366587 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183578677 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.182711005 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.184232469 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.184433251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185727753 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.188921865 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.188161671 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.183580962 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18577536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.184169921 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.187211675 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.183943227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.183719609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.183289611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193648465 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.206258204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190753154 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.204368133 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.18480052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189385501 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.20285616 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.187320911 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18407952 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184012427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.184537703 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.18444551 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.182926337 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184857949 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.184555452 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185663549 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.186844296 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.188946688 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.185182388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.184722434 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.185721273 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.185294715 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.186595197 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.184788408 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.186508639 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.187379915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187219281 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.184550409 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.186163512 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191246379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203322325 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.186364308 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.185659631 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.185071893 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.186207357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185706629 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.185696328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.188966645 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.192051996 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.188119501 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.193520495 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.18749554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19386694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.185971918 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.189524652 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.192565874 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.184768557 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.186479254 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.186430988 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.187461907 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193032352 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.203595838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.18856466 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.190827931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187575846 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.187434195 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.18858433 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.187645955 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188038342 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.188129673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194468747 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.206512809 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.190586759 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189852789 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.186159463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.187981321 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.188538095 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.187451621 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191541889 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.188960937 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.189141376 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.189153832 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.189115942 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.189674778 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.188529425 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.190095871 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.186651346 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.189474306 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195122404 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.207500598 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193096338 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.191265753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.196387541 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2086034 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195936844 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.206648091 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.189607635 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.190176066 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.190728306 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.191573418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.189030042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.190113309 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.189928674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.190285003 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.193730543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.190293185 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.192450222 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.190148826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191003623 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.190333814 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198237767 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209588545 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.190851258 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194980305 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.188423889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.191159421 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.194696393 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.191102432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.190179933 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.191656084 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197879394 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.198279008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.191323222 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.19027645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191661993 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19144868 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.191614882 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.192688472 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.192096267 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.192586193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.191739096 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.191675096 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194152008 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.192396955 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.192235333 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192344514 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.191740648 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.201258635 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.21086861 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.192499198 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192344838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.193671326 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.19227017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.192395271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.192490985 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192975005 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193361583 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.192891115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199218596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.197071418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.194713641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.191770805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.192917183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.193979802 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.193105883 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.1930352 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.193568723 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193084111 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.192769667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.193062715 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.194487349 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.193394586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.194536947 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.193924316 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193974874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195280928 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.19900005 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193888105 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.191667572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.194026344 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195118177 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.19261668 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.194307826 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.20139099 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.216167559 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.202349311 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.20049436 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.198218931 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.195333975 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197010837 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.201645081 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.19520357 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.195015707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.194197962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.195585952 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.194006433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.196846084 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195467408 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.201037205 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.213369972 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.193955459 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203198168 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.212314111 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194616802 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.196406943 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.199208849 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.195201873 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.194002061 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19613973 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.194840003 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201885333 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.214351321 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195494343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196962431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.194535628 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.196549724 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199654354 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19716342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.196063348 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.193665745 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.196444985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196630958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197148434 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.194660499 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.196821708 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.196673706 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.198580192 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.201567779 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.19480439 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198166846 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.196914201 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.196882851 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197311319 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197597336 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.195734204 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.195574453 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.198156168 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197736037 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.197796495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.199135792 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.196499349 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.196854914 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.197930648 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199061622 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200648098 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.204550832 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.203581863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.194782289 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.197547986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.198392138 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.200159333 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197845269 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.198856763 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198273001 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198393053 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.199468788 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198747999 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198534122 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.201138601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212841936 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.216676276 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199250117 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.198903015 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202304776 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.199660563 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.196983494 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.20033117 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.200898039 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.202482449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.205353253 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.199448699 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.205309554 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216523325 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.201997495 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.20398166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.201272996 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.206903814 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.201513676 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199925654 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.199453981 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.203532847 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.213318788 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200634181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208108511 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225467068 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.219556717 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201060403 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.20075652 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.200245219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.202109506 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.201730421 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.201368403 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.202436246 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201766798 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201372388 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.200483283 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.204660158 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.201475992 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.202535075 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.200651835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.200048676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.202466455 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.200375589 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.202488562 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.202543144 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.201336567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.201426833 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.20200857 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202111464 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212608307 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.225976448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202495337 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2020634 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.200088089 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.204852022 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.203099108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210001876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.209462004 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.202085879 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.202239692 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.20441633 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202843951 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20184363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.202142863 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.202499224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202609969 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20112875 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.213716816 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226492573 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.206993405 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.202723862 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204017681 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203022355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203969514 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202780295 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.202352233 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.204765883 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.205649579 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206182104 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204078055 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.204718261 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.205577824 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.210041116 seconds)
  done (took 709.801148818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202239066 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201860157 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201896202 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202570824 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201938574 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202133373 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202007049 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202818746 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20225544 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202963389 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201641788 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20199341 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20249259 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202046057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202205827 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202543906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203023519 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202811214 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203622548 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202947224 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202118765 seconds)
  done (took 26.372506264 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.205588003 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.203136369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.203649148 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205344079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203550858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205123567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203531391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204985694 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206450214 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203628546 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20653256 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205178713 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20334396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.203855269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204347822 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206707559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205860016 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204053935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.206720268 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204482052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206273867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204738585 seconds)
  done (took 27.630919454 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.206556479 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.207398094 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.206093197 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.204671247 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207185595 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.203541972 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.207771407 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.207533914 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.207600983 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.207872295 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.207219429 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.208247168 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.211570983 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.211692738 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.208518103 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.207233402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.351538351 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207023776 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.207652057 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208014532 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.204425401 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.212320556 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.22428633 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.206285547 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.206380764 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208629111 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.208995129 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.208787134 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.208292967 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.20824224 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211783467 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.209830676 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.208667593 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.210665607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.208528857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.210392528 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.211714783 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.208451325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.206639003 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.209145189 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.21664224 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.225847771 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.20905052 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.214636448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.228764431 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.209324905 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.212477062 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.215824125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.207716744 seconds)
  done (took 60.552383186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.209784235 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.210121828 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.208813302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.210405638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.210702343 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.20980852 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.209984013 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.209629447 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208062783 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.208923838 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.210738607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208423294 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.207404365 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.210985616 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.211416242 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.208759299 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.208124233 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20905424 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.20912479 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2092157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.208794082 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.210691472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.211180642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.209717682 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.21064892 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.208537516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209207523 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.212331259 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.210638742 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.208902333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.211320051 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212002778 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.212417025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.209994305 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.210205257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.212228075 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.212346644 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.210250056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212627363 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.209970473 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.212776516 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212950758 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.21282382 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.211591563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.209102694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.209172194 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209775892 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.209430467 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.209193119 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.211776329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.212398526 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.210570401 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212576813 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.210376732 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212543884 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.212969212 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210526634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.210316032 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.213669721 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.210677226 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.210307287 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21369487 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.210846862 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.212606691 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.213815696 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.211229054 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.212560987 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213406779 seconds)
  done (took 83.455382335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212457157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.213339404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213382814 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212316927 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21350126 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.212618318 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214379192 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.213568461 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.214099392 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213815933 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213364971 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213958504 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.213583764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.21402883 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.214057386 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214684121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213577662 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213385252 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214027869 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213859194 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.213278284 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215591017 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215136354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.214268419 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214647744 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.214799142 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214333656 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214998733 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215371324 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.21534015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216069943 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.214328644 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21477394 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215156034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.21514921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.214906736 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214699163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215388923 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.214818508 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215139117 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215693302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215636906 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.216629175 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.215307664 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216029354 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21649518 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.215750138 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.215451206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216464292 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216207487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.215863745 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215770026 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216040009 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215405627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216294948 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.217369616 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216067707 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216066342 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216695811 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215258495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216389011 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.217185018 seconds)
  done (took 76.456096374 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216335851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217892587 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216135095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.214611312 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217690138 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213797029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217891777 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.217057463 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216905197 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21786879 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217794802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21584935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216040014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21854596 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216148445 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215607301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21533154 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215252568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219191886 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216655096 seconds)
  done (took 25.466478512 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.215952298 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218935003 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.216902312 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21771009 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.218462326 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.216767326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.220036816 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219313542 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215904039 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219293282 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220500854 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219697403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217579975 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217535245 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.220397007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21795079 seconds)
  done (took 20.628732036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.217462151 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.219778472 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.219949844 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.218912831 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.216965189 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.217495986 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.22006377 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21801343 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217553006 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.219457559 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.219686889 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.220008405 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.220356204 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.220142931 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.218101146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.220346595 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.2180004 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218370327 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.221585278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.22056236 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.219266279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.218794086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221541998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220679557 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.219729557 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.22000621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.217788305 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.218616454 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.218919565 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.221159652 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.219506515 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.21942527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21840507 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.217247005 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.220816241 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.220156421 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.22274639 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.222044699 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.222044273 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.222651828 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.221586916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.219255388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.221327119 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.222168979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.220180936 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.222415881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219739479 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.220547475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.220250752 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.220000411 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.221570399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.22153751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222655803 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223031949 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.224092825 seconds)
  done (took 68.241967403 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222763776 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224109966 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219806225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222959956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223797219 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.220966988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223352319 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22312285 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221937526 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224057609 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221935378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223926023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221640906 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223931914 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222283577 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224549795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222662889 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221043953 seconds)
  done (took 23.147780535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222678412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222259838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.224642133 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221395579 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.22228962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22445784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221691228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.224570186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224021589 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221004611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222346595 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225050256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225573717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.22692701 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222982226 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222170991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.225146024 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226016055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223124259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223321268 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226200487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224863671 seconds)
  done (took 28.062424147 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.224053371 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.224077524 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.223242508 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.238865275 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.240895495 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.245776634 seconds)
  done (took 8.537443023 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231660392 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225875357 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222732429 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226811902 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224692906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224209241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224118196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223508474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22616416 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224227578 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223570456 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225841025 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226237929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223747039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22620128 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22635885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223650663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224069197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224394794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226625687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22443274 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226732972 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223384805 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224062709 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225172352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223987743 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228148883 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224906563 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224105695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227304643 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227313865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224307549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227866254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225801533 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228277065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227555617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225017477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228383924 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228011674 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226363956 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228348021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228364262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228527186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22587499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228157548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225693957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226194658 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225300692 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22566658 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229801499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22938022 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225561354 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229480858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228523704 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228151728 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229811786 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227008472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22660507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229151175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226473521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226090626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228914317 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226639827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227844154 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228360015 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226413773 seconds)
  done (took 82.105774777 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226206526 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226834786 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228325458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229597284 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226969342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228580182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227683257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227352939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228477966 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227697427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230367856 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228268649 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228403169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227901878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228184028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228251931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228711575 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229127225 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229371056 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231342787 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228860897 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22799773 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229360466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229725029 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22895922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230360422 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229140703 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228312336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229554947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229420769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229217718 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229867235 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229592586 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.229558742 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229674301 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229267349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229872659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229136824 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229119282 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232527489 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22979347 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23283433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229378874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230440084 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23055963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23052053 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229325792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230625474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229879878 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229409319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230658065 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231333632 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231222252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231354086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230422836 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231328336 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230836904 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231350698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231013946 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233124283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231773289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230360049 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235358401 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231659695 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231523187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23121673 seconds)
  done (took 82.31050073 seconds)
done (took 1662.724055414 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.313820536 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.28814776 seconds)
  done (took 13.750068443 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.395516939 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.347849102 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.231047154 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.285279115 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.231733992 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.239284157 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.232385397 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.23104296 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.230905959 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.231906041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.232398454 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.419343738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.288773106 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.231460696 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.233723073 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.327377457 seconds)
  done (took 41.540602678 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.255437795 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.241127309 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.344906124 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.26150072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.263854331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.414333857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.293964893 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.24250585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.399535947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.27990203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.702207285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.264763052 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.242863856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282712024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.258890644 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.414541491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.474798848 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.706120068 seconds)
  done (took 28.494282889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.656377279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.268816224 seconds)
  done (took 9.080568818 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.276512357 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.272075635 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.269908296 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.261706347 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.254207282 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.277057369 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.30830916 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.299712937 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.300918705 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.291681855 seconds)
  done (took 63.969118515 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.259628055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.241357564 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244137091 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242299757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.244078691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.233595064 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241809576 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.234998465 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.632272094 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.361899321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.248345229 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.249962987 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.261554212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.242837087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.240454563 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.276854874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.393568293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.241656086 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.240253491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.24881518 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.244362409 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.338333071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.281254997 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.241796961 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358997446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.629868633 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.251288892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.251927176 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.375372544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24278174 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.242149519 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.244227411 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.244515313 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.848088645 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.733131896 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.252245667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.265710464 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.25268346 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2413346 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.383013384 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.24611322 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.250247864 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.237114022 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.737873358 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.372218353 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.3510839 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.36870187 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.264872757 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.244843033 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.301546305 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.245798987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.245146181 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.273012604 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.974151325 seconds)
  done (took 105.773320871 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.292282877 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.640592924 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403142664 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.257827799 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931447185 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.923806408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.256725755 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503270291 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.265821878 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238612787 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523404778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.71865098 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.256706854 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.255528046 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.277706114 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.241470881 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237756983 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.984148294 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.251588609 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.244934572 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723813037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244717416 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.260228872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.402290903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.27456661 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.671046825 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.582018757 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.696010858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2549373 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.238855111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.682036061 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.26234473 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.306542764 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240832709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.490547258 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571264682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566079188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.259006118 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27061414 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.239518748 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.251217214 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666346382 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.57317219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254746146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.245202452 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.670867913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.255069885 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.245737787 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.247495992 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442433055 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.114619356 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.241011707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.565653625 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.245567912 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.615290369 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.30802862 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.293809091 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701554149 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256542736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.313540571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313599038 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.24084661 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.247018138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244204188 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.241212858 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.566064808 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.42623549 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.243870021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.563570997 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.691497257 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.256827388 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.762508585 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.152649693 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.265854372 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349182579 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250707552 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.78799554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708683189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.285572641 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.242155745 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.551678193 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.257479365 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.512069225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.255760478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243027619 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.751802166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.250931063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.258822743 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.242449745 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.252873367 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.87259853 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.245485257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.517548698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.259765493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.242516622 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.242868079 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.269399217 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24278594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.257985751 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.242433358 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.74846301 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.268880502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.199773977 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.26289214 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246789998 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.248831845 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.244765644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.245749742 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459415381 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.738784425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.268861292 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.245090092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.244142439 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.25788579 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414764666 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.247417151 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.529793989 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.259151779 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245361928 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.263565439 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.926925276 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299348174 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245403725 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.246511375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.116659845 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.454093571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.262325843 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.243886067 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246674825 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.260343594 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.393799071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.261953299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.288118113 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.245087013 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929264465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.278317371 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.279174707 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.775189098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.255385498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.047882188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.265345232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247345859 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522675881 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501707113 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.308529903 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.245840677 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.260469467 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918136774 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.270846437 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.392378932 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.263892873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295926267 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442522164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63580106 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.246969094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.885288452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.247024705 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462439359 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.247775238 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.538174961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.717331648 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.261522264 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25317796 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922015259 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931776784 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.936887342 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.248158672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.511198996 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.218951828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.733978705 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.248798531 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.249133027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.679886135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.247975657 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.247127391 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.249035784 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.249924649 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389292816 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.41960088 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.43450412 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.249793788 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.676714358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296292106 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247881949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.269615956 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.250185175 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.596228862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.328871434 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.254480299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.279426038 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.249646898 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.250216195 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701944887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.182366725 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.255646777 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.401175104 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861174348 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.263076516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.251177403 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.908953039 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.550530254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74155688 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.290114765 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535427464 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.266154191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.284820155 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.801515357 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334609795 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70065753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269529399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.250918947 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815327047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.269397302 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.61353855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.250684643 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252271115 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771135193 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.269974587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.254817647 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.406534632 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268652173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516197414 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.251201078 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.30459973 seconds)
  done (took 1089.519537067 seconds)
done (took 1353.285472008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.249696222 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252090244 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.238185051 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.258891331 seconds)
  done (took 26.170321486 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.261580592 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.258339636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.258901083 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.256870839 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260897912 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.258940298 seconds)
  done (took 8.729266749 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.285490293 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.25813195 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.256918411 seconds)
  done (took 18.973949295 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448894559 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.502182414 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.591436236 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.361124056 seconds)
  done (took 10.078102233 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259622544 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259975481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.260225625 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.261403213 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264327248 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265442546 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26237519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262127798 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.264639043 seconds)
  done (took 12.532664042 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.013224066 seconds)
done (took 82.678644513 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.265414313 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.261172368 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.268931613 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.627968157 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.981881774 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.260846207 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 5.253067509 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.062720792 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.266469083 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507995286 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.249857441 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.837381059 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.294566151 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.294626886 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.280833232 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.409395672 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.879662527 seconds)
    (18/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.609081638 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.056686935 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.32476903 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.23610681 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.236160343 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.272331076 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.292601634 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.30678048 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.340250144 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.625597169 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.256976787 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.533759888 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.648565246 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.325350175 seconds)
    (32/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.063444951 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.724746351 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.24237772 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497312093 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.195060201 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.374180701 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.139980385 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.634077728 seconds)
    (40/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.783453251 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.242733843 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.340445524 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.538816135 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.27197846 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.107505619 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.260757531 seconds)
    (47/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.576985413 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.097644414 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.382550698 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.238294019 seconds)
    (51/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.591556633 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.517320617 seconds)
    (53/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060383031 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.274107607 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.259446063 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.364601471 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315156704 seconds)
    (58/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.43426938 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.396065295 seconds)
    (60/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.489519488 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.282993333 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.367920203 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.604254438 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.342409833 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.163469946 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.239036019 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.479766094 seconds)
    (68/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.977431367 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.279872996 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.240789195 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.256816025 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.45862747 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.241120471 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.411894952 seconds)
    (75/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.506159845 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.399428776 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.973857596 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.57249545 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.27140908 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.329623355 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.318608823 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.260873847 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.426909799 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.239993414 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.513427156 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.767289882 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.249204851 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.266656531 seconds)
    (89/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.198332731 seconds)
    (90/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.273549337 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.080444279 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.264615813 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.662609951 seconds)
    (94/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.03703093 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.443410825 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160000919 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.612467032 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.262728866 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.265845946 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.294522539 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.696477001 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.240435186 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.259707203 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.289734464 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.366756787 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.241797947 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.240779296 seconds)
    (108/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.066030463 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.478330322 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.789727455 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.482517684 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.377638421 seconds)
    (113/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.600320522 seconds)
    (114/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.59729019 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.285281489 seconds)
    (116/309) benchmarking ("sort", BigInt, false)...
    done (took 6.261626829 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.276797682 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.260956734 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346301781 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.407887977 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.266983093 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.449760149 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.27778448 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.448289481 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.926979821 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.342490181 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.772383482 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.299794619 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.249931546 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.647519928 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.557236608 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.636603203 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.249886772 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.305477999 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.866073346 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.000939163 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.264379824 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.523257859 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.243531121 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.383863641 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.985813199 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.365212311 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.33746246 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.728701772 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.288558258 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.290249883 seconds)
    (147/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.964546381 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.00602557 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.291220682 seconds)
    (150/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.256266472 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.279217741 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.003538025 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.859543727 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.291338237 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34812285 seconds)
    (156/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.596739428 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.893779746 seconds)
    (158/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273310618 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.243490292 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.295603867 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384865223 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.266641486 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.285165179 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.363730776 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.245034828 seconds)
    (166/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822772146 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.07886367 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.480520901 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.306470266 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.504110313 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.290335342 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.695423614 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.267659207 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.271139895 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.694482256 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.32027212 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.247951544 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.349496479 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.807635339 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.501253327 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.097148347 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.245627886 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.146127369 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.654289338 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.265958987 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.280758201 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.652051164 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.72131098 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.849867244 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.397531746 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.322985058 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.247562351 seconds)
    (193/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.017847463 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.302249131 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.293184675 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.329749426 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786548904 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.28668092 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.260342916 seconds)
    (200/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.586607574 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.35477578 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.926172337 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.348639857 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.484814543 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.147467733 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.248389819 seconds)
    (207/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.640245391 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.247768342 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.440125013 seconds)
    (210/309) benchmarking ("sort", Int8, false)...
    done (took 4.280170265 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.294586535 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.887627138 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.295480459 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.248230071 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.346534884 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.344871901 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29325903 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.409620533 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.284677937 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.28960463 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.307605429 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.251031115 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.613175521 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.264523434 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.444420663 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.993920944 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.313529393 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.156983513 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.294491782 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.267427512 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.312252544 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.866491463 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661282895 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.314706099 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.053835957 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103572582 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.386954242 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.317602664 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.250721766 seconds)
    (240/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.448102761 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.283830313 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.296289164 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.893177932 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.376605391 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.293295577 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.63832772 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.549050579 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.301635731 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.849238261 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.284669007 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.470993343 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.276851337 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.158989261 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.250021439 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.36660618 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.083530741 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.489154609 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.628223487 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.808351672 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301979821 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.251231571 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.257090814 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.671541576 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.250896959 seconds)
    (265/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.352783279 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.812091049 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.34412869 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.250764546 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.312326471 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.684749731 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.285880163 seconds)
    (272/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.965969008 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.286037358 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.391528294 seconds)
    (275/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.477065118 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.018547294 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.353083137 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.104047417 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.346836695 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.675735479 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.671508108 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.354213438 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.252295989 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.296701985 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.401390741 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.270880501 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.259920868 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298589117 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.612887547 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.080162684 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.381635955 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.254226313 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.28455178 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.648345737 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.315151948 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.322154709 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.254337968 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.297270269 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.173676875 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.380686984 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.318254113 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.295275489 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.859957967 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.402303511 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.253259506 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.280206114 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.284487651 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.272019611 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.067179108 seconds)
  done (took 1009.457219436 seconds)
done (took 1010.643263605 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306545204 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301780563 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.284587651 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.30548984 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.395131109 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.307457302 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.294189803 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.286097939 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.332466016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.332869711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.28271682 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.305991836 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285646671 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285443793 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.285437681 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299623761 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27486564 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.286721309 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.301257225 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.295384008 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.300323978 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.283251206 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.335865112 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.307036082 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.287857336 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.288338621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.288431644 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.304179398 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397314304 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.288695333 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.290047742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.297494537 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.276360766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.284530629 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.280649751 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.306454653 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.296891554 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.295952441 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.289501134 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.318695258 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.661126081 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301047644 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.288506167 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.28776442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.28802486 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.291563211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.28868129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.29477726 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301080334 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303166082 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.649621159 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.316836985 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.290520195 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.287154659 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297965746 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286496419 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.290973369 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304253784 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307007766 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304724423 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.261524538 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.292219106 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.289373997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.303662984 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295142036 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.687098076 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.299126979 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292441102 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.662698937 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.308925849 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.686245707 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.312850159 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290778126 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.301761067 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.320904212 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.279421948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.284655288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.287464265 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.296534695 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.287738709 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.299414355 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30283807 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.294799175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.289795822 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303725475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.31193304 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.300127443 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.290994599 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.297559999 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.308929559 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.296693244 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.300954351 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.293962386 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.286023034 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.299620235 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.293895698 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292662144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.292677039 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.295359628 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.300868441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.664335929 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325378536 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.287647292 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.286895311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.29051728 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.304554649 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.661861599 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.30710343 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.312295212 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.339318758 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.29347379 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276818214 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.300935545 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309404519 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.300906306 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.295291094 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.287507536 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.279644882 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.660368215 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.321001117 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.293375148 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.290260052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309541831 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.294288575 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289795842 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.28539375 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.29225292 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308526896 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.413052855 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.303779464 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.323292647 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.291717158 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.296804146 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.314739418 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308814585 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.3238369 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.296218004 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310219309 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.308553979 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.291408853 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304610577 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.304844387 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.293973585 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299659195 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.287555671 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.316282063 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306792327 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308011532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.315201836 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.414861439 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.292268755 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.272248857 seconds)
done (took 217.876285523 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35120204 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.288034221 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.380607866 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.288897135 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.388313161 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.387939179 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.287157069 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.288590169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.288878545 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.667360342 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288525517 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.288524965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.290146821 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288976874 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.373813742 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.291182338 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288980754 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.632982456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.290439751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.364207718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.288550645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.288767266 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.290787056 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.670686966 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.286345584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.287101326 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.363971969 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.291459339 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.637946195 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.284233972 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.28795391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.638655944 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.383273001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.309676597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301090472 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.298678504 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391093327 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307190621 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.372203834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.371631312 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.382688109 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.330860163 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.284296787 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.291616141 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293322132 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.292842613 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290737816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319158804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.285751583 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.290976471 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.635643459 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302774087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.29076632 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291488153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.291803318 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.321340838 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.291639833 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.294909702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.383605883 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.294380944 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.354830877 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.677593521 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.669662708 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.294332241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.289009726 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.292122144 seconds)
  done (took 145.606747781 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.36029422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.367369242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403888926 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310694082 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.347003056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.407493542 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.30880198 seconds)
  done (took 10.710454165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.300838587 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.295765807 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34442014 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344294483 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.296965608 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.442131686 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.296583593 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.306913179 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.293048996 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.348255346 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.295805258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.295571256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.301310418 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.296042477 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342907474 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.307176225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410234737 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.296314249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.295582655 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.452758454 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293756815 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.302718582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.346223223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30665927 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297126807 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.301355935 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86051969 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29669339 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294207142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.296442885 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29393284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.333704909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296847556 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.293823865 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293795151 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.413076744 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.296416151 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.294655552 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.296997754 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.291259967 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.297406088 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297877605 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.29728188 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.296133034 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.296309001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.318311373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.299351641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.297665293 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.299110603 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.297742693 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.350330178 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298755921 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.295234948 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.296302935 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352586588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305461008 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298150952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.296473041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29778873 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296023517 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.454626886 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346176529 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.299945018 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.345228296 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298773672 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299522474 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.298547956 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.29897332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353222912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298542699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347076515 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29770596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.453335725 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.322018054 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299833275 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301342355 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30221507 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298480615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.296021975 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.304968805 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297459016 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.300232342 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.305450437 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.297405945 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297295772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400760783 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408977862 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.299089856 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.312209491 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.306196232 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.297796659 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.352863282 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.300558805 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.297374471 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358737366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414472939 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352720835 seconds)
  done (took 149.67179123 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.305499088 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.309179974 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.301877414 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.31696378 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300823777 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300123557 seconds)
  done (took 9.045225029 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.302628959 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.301917539 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.30131105 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301322248 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.300207284 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.302153651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301873824 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301584123 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304986216 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.301144439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.302212345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.302071182 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.302996957 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.302224493 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.303000837 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.301832305 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.302571894 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299269925 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.301737267 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303167492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.405229151 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.302672329 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.303690668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.304615327 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.306848283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.302571184 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309861253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.303079835 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.303862341 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.308748939 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321319727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.303893156 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.304283717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307684716 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.307678216 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.304048604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306365969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.304200206 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.301575232 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.302866468 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.305438788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304554852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.304592317 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303926048 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.305411168 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.307935516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.307425761 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311402394 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.305015052 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305076508 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.306162573 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.303988489 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305947158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.306407459 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307236184 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323932017 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.308052612 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.305074552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.304661703 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.305467245 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.30568388 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.306433193 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.307276023 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.30902627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.303885863 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.306518223 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.305968251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3089523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30599755 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.71860997 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.306601549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.304904052 seconds)
  done (took 96.696112269 seconds)
done (took 412.941142035 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.623533536 seconds)
  done (took 7.839127533 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.531667432 seconds)
  done (took 7.75063942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.17657032 seconds)
  done (took 21.396405772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.302809584 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.298078329 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.325874419 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.317622787 seconds)
  done (took 26.461307552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.459587168 seconds)
  done (took 7.676241294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.309541754 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.300011378 seconds)
  done (took 13.828396277 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.762218433 seconds)
  done (took 7.979060088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.431143194 seconds)
  done (took 7.65295398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.305305615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.316277857 seconds)
  done (took 14.095731853 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.281981478 seconds)
  done (took 7.499216975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.105120896 seconds)
  done (took 8.324683798 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.310719931 seconds)
  done (took 7.530432421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.366186042 seconds)
  done (took 7.585126212 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.111133602 seconds)
  done (took 9.329550827 seconds)
done (took 156.173800566 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.300159668 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.302306616 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.301559979 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.300836927 seconds)
  done (took 26.423195698 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.34922786 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341633436 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.342230782 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.353410932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.344573079 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.342206336 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.334897235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.335218667 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.352938811 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.345179385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.343145963 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345250563 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342866124 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.33515021 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.344532022 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.344393496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.353365305 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.344897476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.337383169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.345446267 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.310595336 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.35354852 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.345806633 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.310799815 seconds)
  done (took 33.418215164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.828002814 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380305477 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.463229847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.362122685 seconds)
  done (took 7.255009002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.360382776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364367875 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.374736282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.414442136 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.440262844 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37279378 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.339274948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.332378889 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318253265 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.365106204 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441651812 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.380429929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.44947592 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313153862 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.494473803 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.311707913 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311585871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.364566332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.41423756 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43139937 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311458079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.363821386 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367038498 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38059773 seconds)
  done (took 34.237831537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.310368992 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328910488 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310828194 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.310455509 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319969942 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311127567 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311740448 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.312210532 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.311070056 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.317577525 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310003137 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325807722 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310789222 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.312380194 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.31771158 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.313637677 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.317373317 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.311128217 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.311515596 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.317659834 seconds)
  done (took 27.514575891 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.305838942 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.1576858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.656852567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.560459669 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.306169767 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.308103815 seconds)
  done (took 27.517861691 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.379312242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.526756459 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.314064477 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.658087963 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748105943 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.327864878 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.313957179 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.547377669 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85334212 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.845517267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37075906 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.377568274 seconds)
  done (took 19.486759001 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.311670226 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.310866917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.32037195 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.328167152 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.365496143 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.331134637 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.320150591 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.307191399 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.368757405 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384988825 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3320296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367999402 seconds)
  done (took 37.273324579 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396503642 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356009759 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.204472118 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373673526 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044090122 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521104661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.307627608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.757776766 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.31660884 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582608889 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31355159 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406118042 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563984975 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310240683 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313795208 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.255261677 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554224738 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767170521 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312487426 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.286949583 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34041509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31106221 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.300581338 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343620168 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522015451 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451534271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.571414437 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086304328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602585998 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327990284 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320028683 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309946164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584710364 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98070971 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432428124 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322354456 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310504088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855945624 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.310561716 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.192857069 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.141300757 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320085963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323300212 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311798967 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.252767988 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313741943 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749144768 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.318736783 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.023556253 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312562513 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323065292 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406561242 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.315476183 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.882761122 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314309944 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317321644 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.309210256 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401932979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899514653 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66888946 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334477842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.252901087 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313295377 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.299478023 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939506036 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.430959652 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.316299837 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317046111 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247783573 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.258435823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336645161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461484224 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.336307298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963790525 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00370348 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335747518 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260786708 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832256777 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319993106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.250981963 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54232335 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089521417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249356969 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262629236 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.24810563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980119316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322568644 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.647396492 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334493476 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.764658484 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325237722 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333716998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338864994 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537878027 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.195685805 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315213388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.162320116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4533629 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33600694 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74397751 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248804264 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319939865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570723681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526576518 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319681044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.270846398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537130241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321240733 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.338926296 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.329141884 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.330792649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.882760495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34660139 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.675039565 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338640398 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.092397212 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004317215 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32613559 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.419790925 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324995812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560635974 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.029991942 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199461708 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384708381 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321678027 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318123037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.315425098 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914198212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.197976146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.312801819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319804775 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.333373018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.317958058 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262447604 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.325456889 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320428177 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.116100006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541654744 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330397232 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59771019 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252669899 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493202684 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327037717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.540201609 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496423286 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.334880144 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577275581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330299378 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32387841 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332662835 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338182568 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419845694 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341202231 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.317973899 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57832476 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.32334895 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.323363416 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339046723 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.099026669 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32648412 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.326234738 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326343472 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889950991 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313482054 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323450152 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208785043 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.334320813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387869238 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326257871 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32958597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.095711365 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345951861 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.326503906 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.318646817 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543198585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329623406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.330357505 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401082964 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.513051187 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893096806 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350133251 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.253515796 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.031248583 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.013558816 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320239511 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.513402027 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320742851 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330778582 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331321511 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335137347 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885343244 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338561724 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.253256509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.328421416 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331729019 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.326014297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321373478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.090560563 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719902766 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323836287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.338164765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464834932 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.335370823 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255117587 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837898244 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326732159 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321436024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.099208733 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355431923 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.252373375 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798409476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581390964 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323463592 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351735619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.346214425 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.354739917 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.320227016 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198140797 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343121788 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.341257537 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34715416 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.3340574 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.263103922 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.686932874 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889964078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018044681 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86804592 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2409863 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.326885547 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208022693 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.755555544 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256908424 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979909571 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505607967 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776252442 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269565775 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524396586 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507958075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091069 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334573561 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551432834 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222094659 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.203039743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354381045 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53713538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359759847 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332377783 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259739065 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.604802406 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562247461 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.231977666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404329886 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75586017 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209406113 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.120839367 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.341740042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.61206103 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509566452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.960071521 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712064926 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324711534 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350666189 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803617976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329632406 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852004382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932469953 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354087138 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.525419074 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261318638 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.336393104 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337464215 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322228727 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.591662572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.324297556 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.597907536 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336765317 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260971441 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337246137 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84666598 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.200840007 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.332606931 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326963596 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037564007 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329504152 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635938315 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.340783571 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.082243291 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345868166 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262179858 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2618434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.021086796 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335936474 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302982947 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802675552 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.341822147 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337220191 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333525155 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177009994 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583659643 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.341693286 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897498505 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573331157 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326500897 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371415196 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.429294493 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229155815 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.330174787 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.220314191 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563309491 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392044094 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551468837 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.256412858 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.22964434 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363095177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54001504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223370953 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33013705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587759913 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.061046648 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.351832233 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005949097 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374603343 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334852234 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.343228098 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330103081 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349021568 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419581233 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339084903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.340538253 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340254598 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497594323 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346482643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334685405 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.343764482 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423741038 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71571963 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.092839117 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.103175538 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902592454 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06504627 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928454331 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36355644 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33158124 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332226271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264859857 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484263893 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856383687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604330465 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460047326 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.344031766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357113398 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.249163869 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36726543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546870598 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606471586 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301877854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332493797 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120720577 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.213084488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343483825 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543314234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812173833 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881363835 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452293219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340464574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768403023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610804548 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422914525 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332400254 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922288937 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.335843996 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624798038 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356298981 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33767409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486542636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342571108 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006432688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365456851 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.493261973 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.107438677 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.365789497 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59225139 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.801072415 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.347071806 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907029028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03825634 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601354492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404054185 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344801997 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.438730188 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480355964 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.330723048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.236910372 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334289651 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180307761 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.044466998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.343675033 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907567715 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615735705 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.333983108 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.332539691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361200588 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344889683 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558493645 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003556271 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561295391 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347245118 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336516645 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.905923039 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913456363 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367983214 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270626815 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339645931 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586879116 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592373069 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360146988 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.787959207 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.046112767 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859647753 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.308245305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359238472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341501317 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030085562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914533703 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.104614764 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815585817 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.995041452 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343238865 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614363598 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.341898644 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348373039 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616256179 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340793295 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336777272 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350856212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.913353126 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114617637 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344095096 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373836232 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.276754641 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563276479 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349757054 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29030246 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338484938 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.510687591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342016016 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468651275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349748801 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.347943823 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355310086 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.073701587 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611148389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.343593029 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.327074125 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.275596265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351530728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432925719 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576002718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342882298 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011240273 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.687961132 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593741617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341940642 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.320415432 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.342566364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339906739 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056470938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348671551 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352027984 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881677521 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.340630175 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368309842 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343772569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.555825128 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55097735 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352952464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354158568 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339907993 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358218366 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.238934312 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120241003 seconds)
  done (took 1632.386344577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388448666 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.380583584 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.363791683 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.416760185 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.365687856 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460148388 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.368098087 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363639877 seconds)
  done (took 52.361195312 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.340979238 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.497013126 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.36906984 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.340796675 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.350641248 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.342306907 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.791008206 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.360486885 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.351669702 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.351263516 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.34181628 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.351367071 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.978632955 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.349682496 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.352726216 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.33903613 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.351078031 seconds)
  done (took 65.422300677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.339208389 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.932848581 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.444111572 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.34690157 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.371150628 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.362696054 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.145030012 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.395648742 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.341001416 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.650642812 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.01289547 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.368236682 seconds)
  done (took 84.965762648 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.349648197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.348935938 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.35028329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350435637 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350188993 seconds)
  done (took 8.005840555 seconds)
done (took 2057.497842099 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.588315269 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.006130268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.978532844 seconds)
  done (took 5.241057784 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.490139018 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.538295461 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.65778466 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.680784437 seconds)
  done (took 7.624071518 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.626717852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.726298726 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.536695721 seconds)
  done (took 6.147054309 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.735367973 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.344001755 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.359093085 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.344324487 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.348301343 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.348079637 seconds)
  done (took 20.299991817 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34858616 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.350524829 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349501323 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.352136018 seconds)
  done (took 6.659026661 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.324845116 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.037547427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.328985985 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.34349061 seconds)
  done (took 18.292531861 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.093760313 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10662426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090702096 seconds)
  done (took 7.549283472 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.343800943 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.190098214 seconds)
  done (took 9.791941667 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.629731854 seconds)
  done (took 2.888050761 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.479063213 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.673877178 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.383663708 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.259327883 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.385404306 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.119977217 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.947077314 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.543197107 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.232681531 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.452538551 seconds)
  done (took 27.735734717 seconds)
done (took 130.521413342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.209243797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.731159875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.554676643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.120047482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.57495697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.554632567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.545903101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.223555087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.6377332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.583283926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.122794489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.5750858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.49143524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.730601389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.491712624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.732244843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.574013102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.251704623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.77228348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.965761736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.54821129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.720925326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.957192728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.738924452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.574220114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.506436614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.300300531 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.730771532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.942267364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.321722118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.505449864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.136391812 seconds)
  done (took 190.686090031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.346660405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.354105103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.348339429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.363261581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349463823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.349800147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362306818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.363524977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347087198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353526845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.348068252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346829014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.349434751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.363107671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.34871918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364957039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.347868463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365544947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.364340526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.366498181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.349106484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.359902189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.348043045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.350401097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348314945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.362958807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.348553697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.349608503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348879145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.354238082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.348998478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.358747683 seconds)
  done (took 204.593447582 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.349895834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350349952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.365798331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.348721355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349712643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.349264757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.35174634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348466249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.365411764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.349775945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.374271266 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.349639865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.349478135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347611389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.350601981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349987415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.35073477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.36753672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361315815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350129725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.351239913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358283616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.350093307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349470199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.377596186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350915009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.3657716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.351464185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.354213719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.359234994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.349997127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.366370229 seconds)
  done (took 204.62935681 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.553963221 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358711053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.360134696 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.315133965 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.36013157 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.358863125 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.357349888 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.549138774 seconds)
  done (took 14.479302349 seconds)
done (took 615.656959581 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.656583742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.365370831 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.558760205 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.380967667 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.11532565 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.397659912 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.38165183 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.544510741 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.276019279 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.551087698 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.594889008 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.394065718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.736708205 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.378835799 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.631334474 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475010696 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.279585536 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410317204 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.689466508 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.877900234 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.636690492 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.82653711 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.562610566 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.263517337 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.752412492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.820187999 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.097565445 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.27081026 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.395213656 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.698856018 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.015103295 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353408017 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.438907118 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436678726 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.493578915 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473464709 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.323408763 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434341148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.577034607 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.594396061 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.884767289 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.096081657 seconds)
  done (took 92.409915453 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.343970402 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.343772387 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.342969155 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.344036966 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.345964688 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.344308087 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.344201343 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.343391518 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.344121947 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.343905712 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.344112486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.345749371 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.343859829 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.344938477 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.343926863 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.345205377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.344961127 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.347336651 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.344728596 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.344215357 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.346202248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34409728 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.344647367 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.344874953 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.345210734 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.343784292 seconds)
  done (took 36.22804698 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.363833665 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610135007 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.767890197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371594573 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.363595252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.368021695 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.440770054 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368301398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366783094 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.36674279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530618572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.367600427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39849342 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.793862379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.369442037 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.365548665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365835954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.363121099 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.617762104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377202764 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.460736493 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.36687582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.439815327 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.374388323 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.384953446 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366756403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.371131991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.886072408 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.385487646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.534111726 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.142232593 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440900812 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.832967427 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.801193604 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.134883747 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.371901379 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367208125 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.53991322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.36804408 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.366121328 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.442326612 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370116489 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.778820576 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.982545359 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.388140297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.368516222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.904066178 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.559098125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.60672539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379545704 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800148386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372344887 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369396078 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368992461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605178467 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37762143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.367946886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.893565091 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.390879347 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443627106 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.368614919 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.368759132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.62598246 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.370921116 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.616502433 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371350334 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.375594217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.38690259 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.781313116 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.373620038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.005237117 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.387812968 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369683885 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533919487 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.618533714 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.940125555 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.392969681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.631875858 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.84728295 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.459077427 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.376941597 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.872146543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.465781872 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374443429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.37225777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.371962131 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.369473533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.421156313 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.441907562 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.93246487 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.012682117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.922457798 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.467092746 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385342642 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.370740922 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.897959531 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39247684 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.370900328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.77596605 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.00258652 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.389322816 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378001936 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.005025467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.391127588 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.44622108 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.379394346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.787977607 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374871473 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.421084609 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.372028697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.37910387 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393467647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.447615201 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.377430691 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.371956753 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.973321338 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.565314412 seconds)
  done (took 179.79241152 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.36553704 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.363786862 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.365549483 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.364391475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.365738613 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.372165865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.365359782 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.365400761 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.370630833 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.368542272 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.368246577 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367551085 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.367912108 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.375519989 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.399625806 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.376989686 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.97926083 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367022851 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.365289021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.366303879 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.159997274 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.371299171 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.36641243 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.365224539 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.366959507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.365716194 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.367320719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368549505 seconds)
  done (took 153.009812754 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373808454 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922776732 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.390630248 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.500964337 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397964203 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371791405 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.499030669 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432898131 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390533095 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.373203774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370913083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.667760147 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.375535734 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.873850538 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.5591784 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.520753519 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.878809251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391593557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372355491 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.372491594 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.502543538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380272378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666426361 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924768508 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.393093202 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.924443278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359963727 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.375300843 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373535567 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.927112566 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389426827 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669635566 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.449499993 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435529777 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943724123 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.892457854 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894707342 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.521860344 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.378011669 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372919619 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.373331217 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.35979584 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.926945499 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.395070262 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375857805 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.917151969 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394290221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.377047457 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.382236673 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.374918436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433473345 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.451874807 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.689894608 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.933147839 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.468016997 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392965374 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.503036085 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.765885826 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378093781 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.877950464 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.359558438 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935208386 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.395270386 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.359959101 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.375573444 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382248783 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.521303788 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.50744782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.883296216 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393206749 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.879439039 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.537941783 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.379411285 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.376525763 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378816764 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933565331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.897628765 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.538578195 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.511494835 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.568372716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.366614561 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.374786862 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.362693172 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.45212748 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.380291025 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937319777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897851125 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396640658 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.380348082 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.380762002 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.380897301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.548495558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.95655483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.469826955 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.872034074 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.692351593 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.678386544 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.379690683 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435945064 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.398733494 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678468106 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.380734295 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434473562 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.834690563 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.678651222 seconds)
  done (took 163.728787589 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.619386273 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.618623891 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.473055486 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.510102876 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.984490689 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.937272999 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.576319312 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.518281027 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.486095625 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.64214118 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.497234498 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.4729394 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.545071843 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.456266629 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.098459372 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.463490361 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.485207161 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.53366548 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.488010319 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.423543665 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.015464627 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.655095067 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.554459966 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.221722212 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.468827578 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.167852141 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.930142025 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.90216887 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.555533221 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.731997553 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905100359 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.541515716 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.334719004 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.045222039 seconds)
  done (took 66.145104647 seconds)
done (took 692.589166046 seconds)
SAVING RESULT...
DONE!
