cset: moving following pidspec: 23759
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.301669914 seconds)
loading group "string"... done (took 0.574002422 seconds)
loading group "linalg"... done (took 7.255999047 seconds)
loading group "parallel"... done (took 0.170964483 seconds)
loading group "find"... done (took 1.178426899 seconds)
loading group "tuple"... done (took 2.022736076 seconds)
loading group "dates"... done (took 1.291550892 seconds)
loading group "micro"... done (took 0.241085309 seconds)
loading group "io"... done (took 0.980399546 seconds)
loading group "scalar"... done (took 39.866716022 seconds)
loading group "sparse"... done (took 12.670378137 seconds)
loading group "broadcast"... done (took 1.000890628 seconds)
loading group "union"... done (took 13.724451511 seconds)
loading group "simd"... done (took 4.664929639 seconds)
loading group "random"... done (took 9.332914118 seconds)
loading group "problem"... done (took 1.978927504 seconds)
loading group "array"... done (took 22.199827509 seconds)
loading group "misc"... done (took 2.017888588 seconds)
loading group "sort"... done (took 3.400479124 seconds)
loading group "collection"... done (took 19.165964638 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535901451 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13927369 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118135667 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134666126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186401397 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130580585 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126462273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100616845 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960726738 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144947279 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137016461 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499267701 seconds)
done (took 4.960663837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198597896 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086637038 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094599341 seconds)
  done (took 0.861769732 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06530819 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126696321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064891099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083266893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067058073 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080683261 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066411683 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065261139 seconds)
  done (took 1.241465502 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073122208 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068785699 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084494874 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067491765 seconds)
  done (took 0.981298955 seconds)
done (took 4.037419883 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.925991015 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239627375 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190547893 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450306705 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150772899 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189965229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667234242 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313234688 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207089426 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073085853 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121520752 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370820116 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123887533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661071737 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074780591 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106518226 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160973201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413095892 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082000629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082412693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102948762 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127545366 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101671838 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088021358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158755655 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069284142 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149135395 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096077959 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068119622 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258844333 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173294942 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675314982 seconds)
  done (took 10.398025567 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097500564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118873214 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069108791 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140765014 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103624618 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087112891 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072901236 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082518253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093739881 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160486404 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116220078 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106870577 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08157179 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070589898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100511154 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214115245 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108338471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085409678 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086662568 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075835478 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121955869 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083470329 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094946603 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079331956 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151579949 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193298497 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096725655 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111687827 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068880418 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098603233 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1298854 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131345528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065482218 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083839549 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157560324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095384703 seconds)
  done (took 4.534231052 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.07386003 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175059667 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090994833 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15398165 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115900602 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0667912 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129070288 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081563073 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084525208 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246829441 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.086715521 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.45658239 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129320271 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103091225 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068118672 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085719213 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067919467 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.523063278 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143896043 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103993711 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101899347 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074118301 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088285583 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339094995 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083446013 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065800947 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084955457 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058071451 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146864162 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068780982 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.186893341 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087405421 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089145877 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102680843 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194264232 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092663993 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111081868 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120402815 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067076983 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066286183 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162224201 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091393788 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067547256 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088738105 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121815037 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119806724 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083830438 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067754008 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183519061 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066140782 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102007214 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.904232653 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166379704 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092204343 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065294911 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291675825 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085245163 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090455968 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064481812 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262474983 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.176269164 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084775278 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06760458 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0657016 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086465792 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373461626 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067580737 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.650101221 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070632003 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077444981 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085766644 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067868621 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090478881 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073572178 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101679743 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064685795 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066321071 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08583214 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066911829 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066203409 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086515181 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083840025 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205828645 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088020157 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067522087 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080595221 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087460696 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112384847 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070570579 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065471897 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118347192 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069498906 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085134208 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102978177 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086512657 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083533905 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087327424 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129050284 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069979231 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124192637 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068529191 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063770382 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116924708 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086889115 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100779197 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097023974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068974636 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155952794 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064370121 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083616348 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06742305 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065156726 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086084604 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068610589 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096809245 seconds)
  done (took 20.841979772 seconds)
done (took 37.531989145 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.309174288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093480887 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093800576 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076303634 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094322186 seconds)
  done (took 1.424103194 seconds)
done (took 2.149368585 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13302045 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120372553 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06356898 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114653894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064108051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119902587 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116465804 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081427633 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118506065 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064690754 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114041712 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065071855 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063648864 seconds)
  done (took 1.997056534 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081806896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084858576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08584971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08158487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063612598 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098115655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079604565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105376501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080072886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071633723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080537993 seconds)
  done (took 1.640046788 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081284297 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083734995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085358914 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080610509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06417142 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096264291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079744856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102400599 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080792779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071774224 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081556919 seconds)
  done (took 1.638728276 seconds)
done (took 5.993066949 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077616022 seconds)
  done (took 0.801084535 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.73309138 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.695174525 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099603741 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135241567 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214232498 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155637143 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.455262774 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110578703 seconds)
  done (took 10.499851111 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1137881 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086830341 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071023328 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088544697 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070744775 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070565741 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085989024 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069098748 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089043016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07132524 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070399708 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084640976 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072475096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087871789 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069844419 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084388642 seconds)
  done (took 2.079461807 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104671341 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103222442 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091705388 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075725942 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090274089 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073071896 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093619662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074092141 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087140793 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073200921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076469804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090839577 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08772157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065962171 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075122803 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093546344 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071350969 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091198716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075986143 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092966447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076099122 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081812028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072930979 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091232433 seconds)
  done (took 2.844405777 seconds)
done (took 16.950683168 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116840978 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087531653 seconds)
  done (took 0.936201986 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080861042 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098206016 seconds)
  done (took 0.917575429 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083292115 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082136995 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089390612 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094397051 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066272394 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082734187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10360054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066702265 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066099752 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08245363 seconds)
  done (took 1.555436698 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069827689 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094599491 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071364371 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097261649 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074300216 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080746834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074441769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06879403 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095323177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063775522 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087036646 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099696605 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072070529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101470205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074217052 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085930533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071181921 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084869156 seconds)
  done (took 2.204216898 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066523748 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067550838 seconds)
  done (took 0.870253337 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068600452 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063577513 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083475172 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066632175 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08015291 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063175521 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07998325 seconds)
  done (took 1.244821297 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410538831 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108664398 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.248684915 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088874473 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105022018 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278977353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084403108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071101388 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088533665 seconds)
  done (took 2.260122309 seconds)
done (took 10.720625546 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080232983 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084682125 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111176967 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418231091 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092838533 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081707288 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130549382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226956997 seconds)
done (took 1.964543648 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127087726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618367664 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403953486 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21493074 seconds)
  done (took 1.981871595 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380617317 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089819275 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073474537 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067239109 seconds)
  done (took 1.358813071 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066443176 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070352428 seconds)
  done (took 0.887626939 seconds)
done (took 5.096612975 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067400406 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.116720569 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06683844 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063945207 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084475091 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06483422 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064508668 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08548867 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066858578 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064472274 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082990801 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066430064 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066043404 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083180184 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064314307 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063957402 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082806489 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06426397 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064027856 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080641373 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066595774 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0639726 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080211651 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064262288 seconds)
  done (took 2.524051055 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085521787 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083804155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072255877 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071444462 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087448232 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072370348 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088513469 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06680521 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0876772 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068138986 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086650339 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07070676 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068850052 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086771142 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069344104 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08753009 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072524575 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083600898 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068850215 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087739337 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073105664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068028163 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087284217 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072138752 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088896822 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071492604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086278481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066991312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088764906 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070194632 seconds)
  done (took 3.093269486 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071404756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063954182 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081554441 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071886556 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064125325 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083264142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063830669 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065221503 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082377203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063854468 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066324766 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080775918 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065130546 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081990175 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06484338 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068028313 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098406543 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064422597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064323454 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082115112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067238871 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064745292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081143556 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063630779 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081017852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064079474 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06497381 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080801833 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065477656 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06389224 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083940336 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068279558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064462074 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087251672 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068105317 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064159066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085582246 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064889365 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064693685 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080819858 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064015643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064401172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080637223 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071030824 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064958629 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083012314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064160666 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082714371 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065041098 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067422028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081318086 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06477721 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066275838 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082030161 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069122126 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080066613 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065370334 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064056525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082054097 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064332179 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06462069 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080576219 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067039571 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065023553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096928108 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071411906 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064733692 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082404127 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066649941 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083592562 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066421843 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078790692 seconds)
  done (took 5.949200881 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119670745 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093452392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083882918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066129853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062549581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081751554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068725435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081701885 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066534617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086821966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065348923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066251024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082877745 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079780839 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065002611 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083371785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07074342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079752411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064763304 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068108137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081700264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068723811 seconds)
  done (took 2.447962049 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189865167 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088740411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108379456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092823392 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068719203 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092083758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07106711 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087806158 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070935047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086262283 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06925938 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088106204 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069013954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069315822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086289211 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069206848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.197508286 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070266538 seconds)
  done (took 2.436893476 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078601026 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066820204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106582112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067061982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084005625 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06898534 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089695108 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076152907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086510639 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067165625 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09283438 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069135209 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069921517 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084355045 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069617373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084511189 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069509452 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067610204 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092264265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07177531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089156701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07621479 seconds)
  done (took 2.492085454 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081746234 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068825787 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102538995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069782089 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080523463 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065328623 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091289778 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067495943 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089716748 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069021357 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066721912 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082509938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072012759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083750903 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07230759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067793434 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086806249 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067232082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086161036 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063740033 seconds)
  done (took 2.300360239 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087536339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085619268 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068842926 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094038646 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068623279 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068289685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093948127 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068546573 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085553568 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10891538 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06888384 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068671669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09377632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090748885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068790013 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09392864 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077855578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0946867 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068654178 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085502391 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093194812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085681517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077421484 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085385101 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069017482 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068687059 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086313043 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073722695 seconds)
  done (took 3.046938761 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068040493 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067556387 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082239918 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065552774 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065045633 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082046343 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065159641 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064627222 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084088442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065152958 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06690385 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083795928 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067439902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066714218 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084426564 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067278703 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06712515 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081711001 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065012655 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064553388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084823407 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068035909 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067253868 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081806739 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064362682 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067067089 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081739566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065242721 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067061027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082175125 seconds)
  done (took 2.921140737 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076827374 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073421133 seconds)
  done (took 0.918659913 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064896473 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082010926 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082005567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0706498 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08927802 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067713126 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092455962 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071870227 seconds)
  done (took 1.390017312 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082447525 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078091818 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086506279 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080036642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095355145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083748309 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157739917 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086990761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074438652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06513994 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098394141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066626695 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091578135 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067816113 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072916835 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091743878 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065154026 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090457899 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069740643 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066355905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08651537 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078892606 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086845757 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066801751 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068845273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094292666 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079204876 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086726907 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070448759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093217413 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073100257 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061826356 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085261895 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068705494 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065411336 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09397422 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083377956 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088489035 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076655655 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08585592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078692133 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080246942 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072374064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074512699 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09539941 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067838231 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086148399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063385807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065322368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087689663 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063103454 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067487752 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080183754 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074103378 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088082518 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078896593 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083675988 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069564607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070405314 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088708635 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074293351 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086785559 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070136747 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067893972 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092405353 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072445149 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095097317 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063480312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062182691 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083436912 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077632108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109082652 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07426771 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06837458 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086476606 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066050928 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088156961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069174957 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091244303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074598761 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068256545 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091132311 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075740697 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085591919 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070573701 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093537872 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065897181 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070230016 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083548881 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084426993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084806603 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066765746 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066177293 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096369461 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071873468 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085088154 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066239474 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074843457 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080035105 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068695446 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086610384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068843535 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078297177 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091372895 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07374936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094270689 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075120806 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085978513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071121392 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064746802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08708498 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066780453 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092360977 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062546724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071271432 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086750975 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06804389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094577076 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065999838 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068093657 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092795643 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073589759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08346643 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064848507 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071338459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08549054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071416527 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094128076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066591929 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063635365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081379909 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071525582 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067401475 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088816107 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072487358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088644544 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062622678 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065100931 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089911505 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076583044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085973572 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068181335 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091721107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068983224 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067173666 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091702547 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070926003 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084615713 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073379133 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068142866 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081132805 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071356496 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087408866 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066965185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072203412 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088903281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069876923 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086000697 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066316315 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073361208 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086768738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067377606 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085231815 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066711757 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077995558 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087764754 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062911443 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082301866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076380574 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065976904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085761341 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066594133 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087178847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068675015 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065794704 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084852289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069543407 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097712924 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072623507 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068990826 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091307861 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07953352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085930292 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070147965 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067320172 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087577566 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068358741 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094654376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073212278 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09037729 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07011356 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065185042 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091837988 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075462722 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084635122 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065880146 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066476081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089722321 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074391842 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089148206 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069174635 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066261197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086757786 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071835439 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087805145 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067931939 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066827385 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09155482 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067418691 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092416278 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06910845 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096377552 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072023918 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06314321 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089354643 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06657861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092345107 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064034533 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066329861 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084885585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069128927 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067086535 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089116171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062266385 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094029723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075949879 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06857881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08591644 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069014934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092565268 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069714045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072889191 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090113927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074599346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097066383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067948668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07163269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097653839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068261208 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08048582 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073604803 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066339355 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086057021 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067336451 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084059251 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071283107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076589076 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093004922 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062060902 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088780756 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067128375 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067354624 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081618568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073183623 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088749195 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069203418 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074847811 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087820134 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06898743 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089096133 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068342254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069030143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087500311 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071607552 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086637165 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071010157 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067988211 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089947142 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067157316 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065953073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088142133 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068574881 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085782443 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074406081 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067695549 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086851151 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070705435 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086370985 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068657533 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068754751 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085242854 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071317233 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067915774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086269347 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070466253 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081235811 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075527664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067498571 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09445064 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068668021 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082564263 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07314068 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070016403 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091969802 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069472561 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086859694 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069325987 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067454743 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088732033 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074575243 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083574647 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079739304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094791791 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068796757 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070845873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08712962 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070130406 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066597494 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087114726 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069434749 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086484536 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067374142 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072721871 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089631215 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068565942 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087379721 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069506138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068483118 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088214465 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062906274 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067389121 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085603001 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068659878 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097182043 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068827614 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085459199 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067238877 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06941028 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085209406 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06588465 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093790777 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077518926 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06915052 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093776271 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067501958 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087707457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078925517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064769449 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085233782 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066566827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083463616 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07553327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06891505 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096688902 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068209721 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085872198 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065700223 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069141725 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085570567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062791005 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065665304 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090088765 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067134819 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084850252 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068698885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070972832 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088398279 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077869032 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086238572 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069188245 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068113247 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083731657 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067114574 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066734367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089591864 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069271922 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083876163 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066056667 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06787435 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087659494 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069549503 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067786338 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087982484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075804196 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086781777 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070940448 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090544514 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063469572 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071715099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086676816 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068699341 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067590795 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090921134 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071856685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088358781 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077309181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086972542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068737407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068914193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085286463 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068858981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067766835 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086926593 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067479629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087943627 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077255874 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066237239 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089838803 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068689159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08679874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075924297 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069674504 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090539714 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075889685 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086585006 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069640389 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076482662 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089674828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071985319 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088437032 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069920472 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092810956 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067502671 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07462895 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087185594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069338352 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070222309 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084660342 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068124924 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085960189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067738635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074730832 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087567891 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067873397 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08592379 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066501449 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069409521 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091042754 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076134986 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088348523 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072298724 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063940764 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083781366 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070180385 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066056547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088977658 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071980713 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092550008 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070522538 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068842074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086275054 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078158885 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092292343 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071736063 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066008072 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090495169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069375697 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088996072 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070502984 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068993733 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088575643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072556607 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088004752 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068457961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07579788 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090556427 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069464443 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088499975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069808351 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068789665 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082370751 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069807745 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070321107 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092840228 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071145891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087214119 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079534889 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06572164 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087692767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072764848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086373353 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074105059 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063780047 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088876732 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06971846 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087858375 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064272569 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067588474 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084885936 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071419674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067768944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083121689 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080089781 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096364342 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071918095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086075248 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06732564 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063710505 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083032264 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068594788 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069181716 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089359592 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07924146 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086136121 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068560139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063767354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08792729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071731776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090612011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066301972 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064117805 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085895546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071615958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073437888 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085905616 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067989267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091111302 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071208035 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066724937 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090777657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065904004 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090536715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081760886 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088588979 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069328969 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07506919 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096125818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069885483 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081950319 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070041735 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071234083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087840151 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070156213 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08780568 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083922863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08964601 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06876917 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067655657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089605401 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068010718 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076913642 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089184038 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069695497 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092291218 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070818394 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096393988 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072011388 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076069526 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090695582 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071731308 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086445615 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068870042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066216437 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086185775 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069491958 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087764164 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073894089 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075644898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086603656 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079404722 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096641091 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070986746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084201034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068100939 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067530157 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083162107 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069601404 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067067111 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086268617 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066658362 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067928725 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088551723 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074237168 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088870925 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069892278 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068407992 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082179896 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071403481 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089227851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069306518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066380657 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087494237 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069935008 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07223092 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090735173 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066725732 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089265271 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070916208 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069719721 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08327518 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076357882 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085939093 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072394203 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06897446 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087807732 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070337492 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072470136 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093822229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070083498 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089832232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078042224 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089335654 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066651717 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066293982 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092861424 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067106617 seconds)
  done (took 47.016950144 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109366738 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084834245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064070763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083179077 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077325601 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084759896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064012119 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065115994 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084017197 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068034719 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063717083 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083288879 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073175669 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106971804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09566686 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068910759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082488089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065462979 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064088209 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084123871 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073863864 seconds)
  done (took 2.459711983 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088890978 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102995184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07982201 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102152859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073052951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099936476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098629582 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080628579 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101634943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075813973 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101147327 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09810282 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076569242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094208019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075961332 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095604056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08307552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093460979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079971162 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098920864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076422421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098808391 seconds)
  done (took 2.78900372 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069172747 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06817518 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088624464 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06403018 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068231568 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082672987 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072392983 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065605972 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091206846 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075293513 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085776537 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067762862 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069317101 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085761968 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06845721 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066532224 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132859245 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091444989 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068109217 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088734261 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064177935 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071191991 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084271318 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064272877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067149966 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091256955 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069778888 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085515571 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068416062 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066883595 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087484896 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066553037 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069276696 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088045914 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066999717 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066658391 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088023089 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068566918 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082930362 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066375206 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069239207 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083525961 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068900376 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069390861 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085609694 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06645905 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069300835 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087810282 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.0639588 seconds)
  done (took 4.53025119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087000164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143626182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090004742 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105047163 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103565258 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095912575 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071700386 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125378748 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065818016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087596031 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08444958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10379332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067537294 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092906172 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07510328 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087242459 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070173102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08598939 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072861431 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087146646 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073265242 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093491916 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083512372 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101518532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072671874 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086379918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067850539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091658664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081840994 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093144425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073502378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094123052 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084176941 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093912631 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067358207 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090350856 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08516366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088823169 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070753159 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085974001 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070585691 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09238185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075023075 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105724285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069098229 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092550048 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068850671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084934248 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082625375 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089962267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076352997 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103874429 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072346465 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087997944 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073356286 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104086643 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068852651 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08579935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072741057 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101238214 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066620757 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091759101 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083409135 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090636714 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076088416 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102428921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073623924 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092391053 seconds)
  done (took 6.773467819 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07777502 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093322368 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083884133 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103342169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074528081 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095419534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094031393 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076090119 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093113176 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080260266 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09507036 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116139051 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070780655 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077140254 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09492785 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093505006 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075106206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094599597 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075576022 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094338873 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075520387 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102609773 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074475956 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103596682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123835676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070427733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094435544 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075527579 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103466153 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074740796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10630658 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093946514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075498204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104002607 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10693733 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075781451 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086435745 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074628715 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094056835 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074886421 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08942453 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084698838 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093915492 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070351725 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094761173 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075659907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10411659 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106949757 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079396051 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100308107 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075477413 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102919663 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093062044 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07571928 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103850464 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109263795 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104332376 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103377056 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075264094 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103463924 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102916205 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091045564 seconds)
  done (took 6.408807309 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08922465 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097870957 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079175629 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084258608 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067153579 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092459831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067181659 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066184962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097981039 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076699621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100072557 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091359816 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075989005 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099295172 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07276749 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095320333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072490175 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092459919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076959362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092174513 seconds)
  done (took 2.51127198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077888329 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106188567 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069741617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074551876 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091377207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074527594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09079902 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071719862 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088807916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072206333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098814142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080487192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068696439 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094735333 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098126361 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075515174 seconds)
  done (took 2.159194283 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080109083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09931579 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083200509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089554821 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06738532 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065208279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090034147 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064860763 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085442937 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083364138 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089489595 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071532252 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068801414 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087883378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065928717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091018036 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065903208 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065934925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089093142 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082799789 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099923629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06718838 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089253846 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070898293 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068573039 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095096614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068472705 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086956879 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067790999 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089051156 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069981156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095712356 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066393096 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06728703 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087348883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066466741 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088099071 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070161289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071148978 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088668191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068170993 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087827734 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069610002 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069360646 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085858294 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069666962 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084148599 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075586975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066618248 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088755356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068660477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0905756 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070356174 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09857992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072642037 seconds)
  done (took 5.156529256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083050498 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072537808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084863921 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06671221 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091264871 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070825568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071524348 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091065615 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07150333 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086163151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070891899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071715575 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090503469 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072341297 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090095495 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072189536 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064581759 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09011242 seconds)
  done (took 2.242901459 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074514736 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069053429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096431796 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069024376 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088059083 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071825459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065344878 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08833367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067627882 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068747595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089152063 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071624092 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087568173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071545394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068648077 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089241658 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071810865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067286885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089309855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064801165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090551457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067446841 seconds)
  done (took 2.516241672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075379114 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095160953 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168532232 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.11122384 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085662253 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102787266 seconds)
  done (took 1.471683672 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09266001 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103413678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07034042 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089684112 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0980229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070323957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092092178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070316023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101053602 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105047579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071952375 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1004075 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080670996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103864943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097339996 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077965117 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090605878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071703883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068643994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111022357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091724108 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079909781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092130453 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071065343 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091139617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079249374 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101824295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10496883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070945584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099908399 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077221124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09134802 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08012026 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10531174 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071483298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101046313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090771236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090850633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096828618 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079742834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092417111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077154915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10155476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09648608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08115181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091558916 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07679504 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091626239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071870919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117365259 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097851175 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079816089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097969711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080491828 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100922594 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117683425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085040846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100143434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097197172 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085964244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100045337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097680394 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080531245 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105149635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077600088 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100135203 seconds)
  done (took 6.769964984 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086033609 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10938893 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071393255 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105644504 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079652279 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092912533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070950155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091916745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070571405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090731512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133816597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072289362 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100602344 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080132824 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092403055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070444061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09227145 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100106309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071092117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117540402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071086267 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100352704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09986544 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080685179 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105369625 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078108767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09223591 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071098936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091554079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070867814 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097086995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070912779 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100074842 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070031118 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100741104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091486048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072198524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097260022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072943844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097713759 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079929376 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111186674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092104952 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071768502 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105099057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071195913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091703944 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071324212 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091700652 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071399299 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105971466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085575464 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105680516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099939852 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07242525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092386233 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07210927 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092205764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072183686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098141516 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080497619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091787801 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11653651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072584257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091827824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080131015 seconds)
  done (took 6.656381087 seconds)
done (took 129.730059748 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.262616989 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188329829 seconds)
  done (took 1.28553815 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071574427 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097910118 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100821608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131049938 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090907423 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103249606 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101141944 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102354655 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070153427 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090537131 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070558406 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071357964 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154907468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070404232 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070269807 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092628776 seconds)
  done (took 2.329814174 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096989182 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202021439 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083684574 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.089465797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.07270487 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092663055 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068369587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074947527 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094915862 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068859871 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072156173 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090582892 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068489225 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069869918 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093859845 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07271614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088485965 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072530376 seconds)
  done (took 2.412729452 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095918551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112844566 seconds)
  done (took 1.052777938 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206051479 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126056583 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208842691 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428249833 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.251496066 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284369523 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180978197 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180711589 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154130357 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175921055 seconds)
  done (took 3.037760339 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102242249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164265513 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275871553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139010471 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111159355 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087673641 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139381171 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113334263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085109378 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105637085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085923737 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101819265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100719539 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098981987 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077416948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101222622 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103105831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097808308 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07750806 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098883835 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099753726 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089996141 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078797706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096956015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08118968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102316765 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069593787 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068383258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099692091 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077455428 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097190544 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087769432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101994244 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133996082 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106953672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136647511 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081272609 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095100827 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078544284 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074572149 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102480425 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100735581 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087001132 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10095426 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069174206 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079835706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090521904 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070261496 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098104972 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081395064 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097937035 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076436438 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135296304 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10191359 seconds)
  done (took 6.26065566 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761615675 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113782231 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098211858 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.830678849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118158689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087895696 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.726388005 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120004191 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214485619 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.729950447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115815754 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080818025 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210720048 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218105783 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.906296021 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267389266 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.618239311 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108497621 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110619688 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.135832943 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101191004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09905042 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114451915 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41115897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076987118 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095582605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080430164 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102146057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142728168 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086629371 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097816184 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158158605 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228673529 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185595577 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078140366 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072540637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095666517 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15092627 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221515554 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196613091 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164288723 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071392321 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094483345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.083567447 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115216367 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07071859 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143923864 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155238116 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152419254 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098067591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080332941 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10366082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082098642 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16731432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083219139 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293065658 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.272830369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094971666 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082595912 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108976194 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218745069 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107125977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20337968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101432906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191680494 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073439444 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762692207 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15165765 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073363028 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099637641 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08191457 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099939562 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082476901 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150041021 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387846418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084702544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09806212 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07314023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208975271 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086813001 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071920058 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164155397 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077774761 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103960438 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085796509 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1077612 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149485446 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211642799 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083698732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103013614 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077142262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108535422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077148332 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191552087 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199997047 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143367791 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191647162 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104574353 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145359782 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1499326 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101942561 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.152621586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081118217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107026498 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083284424 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198016159 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127651484 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085528639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099638852 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080082269 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130715895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109440023 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081113167 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.15271151 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45871604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155686602 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071268586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110132608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08259103 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143767422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100396675 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221133361 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105266957 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.150589319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080579643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09260667 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082148781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144586344 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105426151 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082151466 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105551484 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079496651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235694832 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.175628778 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104886831 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202592711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165816595 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079477693 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152167017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10458194 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14903907 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102586011 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.082570761 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098772318 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732767062 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10687627 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081355693 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097705964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147651516 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095407297 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085230737 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10771512 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070713279 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750984394 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087395178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104624092 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085739464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100816791 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081228111 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101469052 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076408708 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141273749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209939627 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101868233 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081365365 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106434791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143278481 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076785075 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107737279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086109854 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107914266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082781724 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099594368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085849902 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172375703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144332919 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178633002 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577492078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0745158 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107154908 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186475426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095318247 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247683356 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103303082 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.18169357 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167738124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082928663 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.298734001 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14786136 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169879531 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088627101 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15475657 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092805383 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080001839 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145650528 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096123307 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079330551 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143952057 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10824921 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083616891 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.949921338 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07343797 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208256446 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09291279 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153150459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076480151 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103341289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268308987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07459461 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110253802 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146207554 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078100424 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107668078 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.834735538 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107046424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.084737353 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100773056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177735319 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145260323 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103170456 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08077652 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102271913 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144262172 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189407008 seconds)
  done (took 39.111452893 seconds)
done (took 56.327159903 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237141788 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198381321 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.227962543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152516055 seconds)
  done (took 1.775907738 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.132017789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.131981351 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126554876 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068430493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133886251 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068765303 seconds)
  done (took 1.532444083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319594002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277196929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205012684 seconds)
  done (took 1.672718701 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27098508 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226332235 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449543053 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280742701 seconds)
  done (took 2.221129696 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189750359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115340429 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071028961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109798001 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154888988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.224512416 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123932981 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158027734 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103691286 seconds)
  done (took 2.164492669 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155266969 seconds)
done (took 10.384357139 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112895176 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.246289737 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.285658929 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083869541 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152639075 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.229391459 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108291574 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.234211777 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076326098 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104277651 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.130494646 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098909365 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077936219 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206023952 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234765765 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.247921852 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.22221638 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176625196 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099077964 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.153356041 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097590322 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.103002564 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076179736 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.246429658 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116337487 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131861547 seconds)
    (27/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218894405 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10248669 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077672523 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.168442463 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.179815424 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076680881 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203898965 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.170055103 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075213037 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148805912 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140980496 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100640618 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.224168311 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206222784 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069405724 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137152709 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080343095 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.128714119 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079466087 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099327541 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075229529 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123460838 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117373258 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228668758 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054538898 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168314004 seconds)
    (53/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.152757226 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095928031 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104379284 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072352126 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080252806 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101009739 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055228148 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181381126 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091503546 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138883442 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.151309564 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091737996 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16921525 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212366552 seconds)
    (67/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139324419 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055265403 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065247762 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111375468 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055167991 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102432301 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.110034102 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135912359 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075240309 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.070627666 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106755634 seconds)
    (78/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.111151683 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146831454 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199556242 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182930008 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121209376 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197226036 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10268616 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167335619 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056319137 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119280344 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111459895 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192940412 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055442454 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120280532 seconds)
    (92/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081912818 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074203051 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.094044289 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065635605 seconds)
    (96/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074990433 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107171907 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10117187 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10409917 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161350681 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092571308 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.136064484 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079615889 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100853615 seconds)
    (105/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.113199707 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076139064 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123520162 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170618042 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084972281 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070363338 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15420713 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106573567 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103528246 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.15661315 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069426394 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073542381 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.22221911 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079934751 seconds)
    (119/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101376972 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07548348 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.163013493 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077808412 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174799659 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.296360218 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117496764 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076332083 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18061452 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097924322 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055526722 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076809521 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.118857429 seconds)
    (132/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.115087341 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064047739 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0924806 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076834629 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103840646 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084311588 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112636215 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145721682 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0990027 seconds)
    (141/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075690277 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140169004 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070027733 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175686293 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100787736 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071994382 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091710987 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093564043 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099533178 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.146858154 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164239753 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074360882 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175441136 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054910113 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117941763 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094215929 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118901491 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.144137724 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078145255 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078100209 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05567813 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084490953 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071393369 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05607852 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092105787 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064469092 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066223958 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092130654 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080518467 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055619007 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122818153 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08139074 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.170572073 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055291328 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078204502 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076778184 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066373882 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117149747 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080436498 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056974911 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164466749 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057421956 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054714249 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07776103 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098338262 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.07939904 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10634122 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142425029 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075957777 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07217389 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09354262 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072171069 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170101171 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056029185 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089746125 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101559905 seconds)
    (197/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056445624 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055930991 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.161800593 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077704317 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078751955 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054837534 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056106255 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07504729 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09278471 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075819298 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097325184 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068708178 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.163787584 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077546156 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069788439 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118602701 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064400002 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06838535 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088530226 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069929135 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054496942 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07963664 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069259786 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078536331 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099765324 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093321571 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092793875 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072091807 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142617055 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098569808 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054864678 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.16104321 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054812472 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074725365 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103317578 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06906574 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054505704 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091210445 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070195247 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068839552 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166676214 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054726558 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124683332 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056124083 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054703485 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078565123 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05613771 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103664195 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093425396 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073955546 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06946316 seconds)
    (248/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.088367749 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077756959 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102934978 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055413307 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069274633 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118758279 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055933471 seconds)
    (255/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055965557 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092620374 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07626274 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071056499 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.16083248 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084808698 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165333416 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078637223 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081554605 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0698702 seconds)
    (265/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073347739 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099364686 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071251905 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070393339 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163443175 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065938727 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093006288 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056392657 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058276315 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.171161975 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097384306 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069869933 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070085889 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094795001 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071736141 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070231194 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102314063 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129186113 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054949668 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091993776 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055345956 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068444466 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.164041066 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077838056 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079229103 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173098324 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.108187691 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198367406 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069269404 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05560473 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056057407 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.155341961 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055573559 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099458478 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097520165 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150143172 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070229715 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079500244 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093524109 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055095015 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099708193 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070714998 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077817987 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080747914 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055131935 seconds)
  done (took 34.136455798 seconds)
done (took 35.002253781 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082457416 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093513836 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102442181 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093822184 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105583409 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079581795 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.1002817 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080465686 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105584343 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08383787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080324825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.08262655 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079872603 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102925254 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079342103 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093907288 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105833479 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076738783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101741362 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069172827 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077708964 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092890519 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071369373 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058527454 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104566157 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076206235 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098786342 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078643677 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069606055 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092588899 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07245983 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077503555 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09300432 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083208988 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076172118 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.101211907 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080037193 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102225669 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071597885 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070189376 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.10110868 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069288024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076914432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100562121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076300424 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098225224 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077909941 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081472093 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117747555 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071928103 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101858798 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079543565 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079190195 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.10039565 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073181736 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101409839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074534988 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120229144 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078922519 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072678072 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.10327638 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077487432 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075761604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103810092 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078335573 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103689716 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080825033 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075692659 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.104165773 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075599093 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069640843 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101508941 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072943502 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093101119 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079147993 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080690363 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092249657 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075743705 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076742108 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098674446 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069070522 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071359471 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095105782 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076386723 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071098609 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.081832069 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074054865 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07596824 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092896019 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078551191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099029056 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076435298 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071926728 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103985875 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069425306 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075609871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093802824 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069971324 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072673749 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097219616 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0697044 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072290926 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101927828 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071165917 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075980421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105092646 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070414415 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099643848 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069272193 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070072892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10770972 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079322666 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09369853 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072271771 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069565162 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100899209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069528603 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069537089 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093179499 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070054959 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076516545 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093289939 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071979432 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077115285 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107257262 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069570682 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072981693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095199652 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069892101 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075274703 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093820327 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070239816 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094668624 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065751492 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072499388 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093337433 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076962512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075067851 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10137935 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07129526 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078576762 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098486635 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075731344 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075271555 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092711506 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062658712 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071983862 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095880444 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071495566 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069801747 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095357878 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069501186 seconds)
done (took 13.674235385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070107722 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165974523 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108607072 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124091329 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114425208 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069931166 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080792004 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126858354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072766251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124848675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093003308 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114152634 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105606334 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093874749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070688528 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098780709 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071642889 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085592454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128107399 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091184314 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145314022 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092334249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103774209 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117126472 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079950423 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120509527 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070674835 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074306402 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097475577 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086051301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114765554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073577373 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07107216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116374797 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08775753 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102356107 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070041748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10061355 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070027091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070205883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122338371 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092500835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099333843 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076236998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097337605 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073659255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072352656 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103620104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081209161 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074832814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108150553 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137277855 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073455152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104415504 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069435647 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081290192 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103877533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073094081 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.094627473 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073343885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070173685 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09705671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085709726 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.122794423 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074381387 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103519674 seconds)
  done (took 7.162800472 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087111459 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097247336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111259784 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089017053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094616931 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071000031 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095211471 seconds)
  done (took 1.576361019 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070816058 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092245723 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117784357 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093513997 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11344539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091143478 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104618902 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071152406 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088561289 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097217409 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091960972 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134276944 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072921015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102770092 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094845058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07126004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119090636 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071414482 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098632357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094334616 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073884686 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11620977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073223093 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095104352 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084921543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071234266 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144475616 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075850792 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09709894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074491351 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093534171 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120955931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109553572 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082199031 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095119373 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085626832 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085851319 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093737477 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086599914 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101156771 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084822531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072011292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096731555 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069812531 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076431083 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106076963 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072530199 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071989461 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098774925 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091312565 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096424132 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084827622 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071682926 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099726625 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072992547 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10106711 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08170846 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072562327 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115018923 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072739583 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112390659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087638987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0850876 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11168974 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074316014 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108838061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084715091 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075053623 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097456099 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075489492 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111966606 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069389124 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072950279 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10607987 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072549084 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095234717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118741105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073653668 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105866419 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07167206 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072097928 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096001586 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094783278 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099090488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071789348 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076373688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099097713 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068672193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070643763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099611662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069775713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073448691 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098873695 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072352743 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074354992 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111723583 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071917178 seconds)
  done (took 9.630848006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073021478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073401046 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097712561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072814419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073191288 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096921707 seconds)
  done (took 1.432439984 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096066289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09829692 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086144847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078357494 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137658081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086621371 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110427768 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080382135 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114553107 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084965818 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110828055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087289254 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117372366 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078221167 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110224081 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077775928 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.113560249 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081516617 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08394153 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102855933 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093249223 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102682753 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078600242 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11163921 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075189677 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102116776 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082180591 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109669494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083937563 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080154641 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102708979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075718914 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100906949 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079650728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111033665 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076828218 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101423927 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076507333 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082207539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099588193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086864307 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102773824 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083556481 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100505658 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079576816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101462231 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075989235 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106298261 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085805784 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076296628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100958209 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077704409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09957599 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07629424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076410561 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103829363 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076583212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111256813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078402095 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101132016 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074873009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099532349 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079351921 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074878964 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110253951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07594747 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101601013 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078602993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103165752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077427545 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.100311608 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076016889 seconds)
  done (took 7.558980982 seconds)
done (took 28.284933414 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.665066636 seconds)
  done (took 1.604133302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.708558229 seconds)
  done (took 1.649544499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.091478542 seconds)
  done (took 18.037723139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.469114291 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.544384317 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.779233449 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160650199 seconds)
  done (took 2.897692931 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.901306521 seconds)
  done (took 1.861921424 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224572886 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.211639796 seconds)
  done (took 1.384940395 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.739720033 seconds)
  done (took 1.692588143 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300203078 seconds)
  done (took 2.242517839 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.307637913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140855619 seconds)
  done (took 1.401561631 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.534407648 seconds)
  done (took 1.490116931 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.719964955 seconds)
  done (took 7.673420541 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215485989 seconds)
  done (took 1.178373914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268097568 seconds)
  done (took 1.22570568 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.456647693 seconds)
  done (took 4.411133339 seconds)
done (took 49.695511521 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080757525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083963284 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108878158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081076029 seconds)
  done (took 1.304239971 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082792045 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077184432 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107129597 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077658017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107413876 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077234524 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079299105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107025525 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077684337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103356706 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077306357 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077128471 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.104465704 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079819298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100031818 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080327982 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105491652 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077323013 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081363488 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102104322 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075034943 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103996938 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080201751 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076598008 seconds)
  done (took 3.080027081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080408485 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075931595 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102225037 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07491912 seconds)
  done (took 1.296253763 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081646179 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097540949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119032789 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081564534 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12384664 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116763553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074254718 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074177619 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100554834 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080812707 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073200931 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.128959843 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118371434 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080828931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082870503 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095499306 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07281001 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117657488 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08159344 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082042155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099497667 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081913632 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072277115 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120466056 seconds)
  done (took 3.221279707 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081211907 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106867689 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108899645 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093903038 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121718905 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069478441 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10576675 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096165407 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156609933 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069568232 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099326415 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069598441 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076703806 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.094303488 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081279472 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139559031 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11759959 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0972961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099476906 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070132656 seconds)
  done (took 2.92006361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080357569 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074479972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094395997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073374235 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081032228 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10175191 seconds)
  done (took 1.475173766 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072692975 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072373157 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096353155 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071145834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076065295 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096331377 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070896471 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071855666 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09609604 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071672833 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071758596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094799319 seconds)
  done (took 1.926236085 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464881345 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072779014 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098006803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070129656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075509507 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095757734 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085289806 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072580263 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120725762 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071393443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096195884 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072960512 seconds)
  done (took 2.360109837 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21491665 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105878214 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240528736 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170125919 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138870204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150654788 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132730402 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119039458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203472761 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137756921 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185361253 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173914754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13154312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170758876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09342949 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130796944 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176033854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222754974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134639417 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1837247 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179421893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145783898 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15933406 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131602733 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093028966 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149169228 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102172709 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085831053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212569918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158205253 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167885076 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14384605 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126029408 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192454525 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22899439 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174583079 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168077889 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117072418 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.13025747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.147235187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243501063 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094105906 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18565052 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139364771 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112561029 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1719277 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147242062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153253893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129415213 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093637002 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198711508 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191703172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17186754 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118242217 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11481736 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139006153 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145796298 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131831284 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227695981 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178280258 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159606915 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075043071 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125694329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169422138 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161254298 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14668278 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158730397 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125450872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170046195 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16644942 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143201272 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168644027 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161362655 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117321773 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148536658 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152661442 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149088779 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205025259 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158799652 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101036611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145750993 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10238734 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110893371 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172221831 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079250856 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192714673 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129022942 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.118359564 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116556772 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139824625 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139741089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175109349 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16918985 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126821229 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07005013 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134914321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.135363229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16676632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092647613 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13826301 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140219164 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110298076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155143085 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078384444 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155440461 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077433676 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153813049 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187176755 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081186668 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137872306 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106492404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128973432 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155442543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178183482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120722581 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087446031 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210028021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153698122 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103423622 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158131019 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178286541 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.12838577 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129745554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177782875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22154974 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094520534 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181364637 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135145433 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114624419 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093661237 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157924694 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135616905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.141167776 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08692928 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159887401 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214264958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07954296 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118365905 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166169053 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086830765 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112243573 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140106141 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101413208 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119416459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125809273 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104314772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159689636 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157179077 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131946982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146254684 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130898992 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228699844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094712788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130314563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101405665 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100669952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171805698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176187617 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1106197 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181930255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150380133 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135121681 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123755197 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115035008 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15545311 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084296894 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101169884 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172257422 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145783686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141504178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173985052 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108084177 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186170632 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159337139 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151596619 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153256898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117370599 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139303319 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118891096 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11203751 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143419415 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10378436 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095556723 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113763219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136140869 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096243786 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114817823 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176618065 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147040175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129028453 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110961436 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128933208 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159816394 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108473336 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155572677 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157186986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10064073 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.175477193 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196451796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166567641 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096407693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211176914 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07551541 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105013676 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09604768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149637916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1138567 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089974661 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147246172 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159570117 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161901611 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153884716 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141987405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153578481 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168905818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076590474 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149143831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163293315 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154482866 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.141383397 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118813637 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131043819 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128064221 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136090328 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231118815 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146153288 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155056763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186812636 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128997579 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085721731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131275422 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163267399 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133529364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155598357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126614348 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093994461 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140079647 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086923047 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137943986 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187911124 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115280267 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195068622 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103794286 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161544697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107837201 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144738023 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13757977 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117327455 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094546113 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152601386 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180557067 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127667478 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148710583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170780994 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085061188 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155614443 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215549082 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172199952 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090493156 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137256998 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139729701 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143951657 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150634992 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129777827 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138189923 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167109087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137696926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116294062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093819761 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128635026 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103347473 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.117624887 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127780472 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15359001 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092375639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192295401 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113403558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137485372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149975258 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129304687 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097770467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131157726 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193602829 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153400591 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215138806 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102565146 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157169899 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181567361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106299 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08561479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114010696 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156539994 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088974889 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166349679 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127838236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136065771 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15862917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170488425 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092465285 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101079306 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108425619 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15204327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143831026 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130601817 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138263607 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18320805 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126548062 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085541364 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150689993 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134715244 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100867876 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174010895 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.093509878 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102165844 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108261837 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087888263 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143552802 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182338977 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115712189 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13812201 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146698567 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14614944 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144478495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129542373 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102144565 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144378421 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177802568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160875318 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.112038024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136423403 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154241789 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172772158 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140269519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092733102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207757367 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171475458 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176044678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094808219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145654027 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146981615 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135415313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161207512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114753476 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183334766 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086940526 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201863916 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131861921 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095976209 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152164569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128229196 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110763446 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192684977 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152711121 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089112692 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112692222 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146581216 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156935287 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107134656 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.107119452 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158740068 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078236884 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194981309 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209048615 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112682152 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107037117 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126521105 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113481208 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108806184 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136756412 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119547947 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.116707985 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178946372 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1144004 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168098525 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205950623 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147933104 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152024962 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097431036 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671826983 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109840664 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17153533 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106228589 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210104188 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102742427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150105269 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136568729 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146173319 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172033545 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138458478 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21023709 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170313053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155541905 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111275948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109913216 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139276834 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.123290038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131391308 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1186395 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138023784 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131103302 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154534267 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147456605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086728803 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119289909 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175225861 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133990441 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163065876 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158309634 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091386988 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151037578 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160321747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112743148 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158055856 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210923264 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094831065 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1304175 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086593154 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134359591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234399281 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078400352 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175771842 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152089414 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136339156 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144743649 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.12677067 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167135494 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136034976 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155489332 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097274611 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137185008 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134665979 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116367758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083851048 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132684247 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14555116 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100983603 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137985033 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.119488746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191338053 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07778785 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124044062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108003345 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166094676 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218762661 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093669301 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115496831 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140353077 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10305662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15236637 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155631421 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115271077 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088284063 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116264762 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11656301 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121238331 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130940204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108498801 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143351096 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182149174 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117408425 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258144521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092936226 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132792277 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075229253 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112061057 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10271563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125454427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136713147 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103567441 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236645898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125121568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086799527 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127171254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079340499 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116182605 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117541431 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142815572 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157383663 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125688717 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066778014 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138163012 seconds)
  done (took 68.430263948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148139846 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111109124 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125183113 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180102012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154385236 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245941407 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187703749 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231775859 seconds)
  done (took 2.422309601 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075456567 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124066203 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105897431 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114923553 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071721375 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.097756369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.306135744 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110765199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072282697 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093624964 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149943578 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073904078 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485367343 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070638391 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100817727 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090095568 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072450064 seconds)
  done (took 3.249523757 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43402155 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.654403801 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.474499347 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077997394 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.928237084 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115083597 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.524619923 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16994411 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097103987 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.441864754 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737740105 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136949397 seconds)
  done (took 17.834822907 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080400013 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073681328 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114881435 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088433628 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07719502 seconds)
  done (took 1.484447202 seconds)
done (took 111.950117653 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085880417 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.36884666 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05823286 seconds)
  done (took 1.503330327 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088955932 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088857955 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117322072 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087885438 seconds)
  done (took 1.434668351 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078796362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079341069 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116266743 seconds)
  done (took 1.322581542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.300484399 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140383186 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.12071017 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086843145 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082360274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110173135 seconds)
  done (took 1.324095241 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078267286 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079874598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105262414 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081352741 seconds)
  done (took 1.38621263 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08062551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056886425 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059347883 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087495617 seconds)
  done (took 1.331720111 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09475496 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083434233 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111454667 seconds)
  done (took 1.330787045 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110314325 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117516229 seconds)
  done (took 1.273488328 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086172299 seconds)
  done (took 1.130136759 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098252615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148183059 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168648418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142916758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178279299 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143693653 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09253638 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.122048181 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109857024 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095698564 seconds)
  done (took 2.347615473 seconds)
done (took 16.07332099 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083193074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396299458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367004371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123622849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673290653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362318524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012348747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09950701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141773546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07224128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116108351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653902636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039913626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330552383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02630066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329608398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.660193715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100356667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072368806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073299371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995885282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07282577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100051513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074010396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653097124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403305501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072648537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.353147222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073393274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074460269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387077816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073652551 seconds)
  done (took 16.106107828 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075165199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149712623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080174119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088039192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103130426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074521304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103682041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074262476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153545548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073811898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09047314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101010651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076106867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101287115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093286955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07310058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100881075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073327905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100419422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074029657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091077898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100426004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073619837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073451782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100051301 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084512738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100164759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073725039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072554126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102311192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075559308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073494866 seconds)
  done (took 3.935931179 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120169005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158837113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079086986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135539725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119131531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102740937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176295972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098494414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158236974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073177293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117189787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073494641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133004714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074559468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092336956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100326638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074006007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100261427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074117967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073346116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119904396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073066735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100244672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074638318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073345698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114297671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073998691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099950113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074180313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074586557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103437785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07400234 seconds)
  done (took 4.246900979 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077293968 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079343165 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115219687 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089384529 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075101196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104083424 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077262203 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102018709 seconds)
  done (took 1.77693812 seconds)
done (took 27.108893955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083994087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074652707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105456118 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086458506 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078489624 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110133343 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072555112 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106562309 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080342206 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077194758 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10837647 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07232375 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076778866 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099496719 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079164683 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073205198 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.110798787 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076769141 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110783567 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083868047 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074682827 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108335523 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078943914 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.11058448 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083714452 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08332502 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.114617191 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07800596 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101319117 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076111803 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080597171 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115396226 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07358023 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110973168 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073637613 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072491005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099912479 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07292404 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083139264 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107205258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075139169 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106896114 seconds)
  done (took 4.795663795 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091779536 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095240869 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116843106 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066990839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071895878 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094345255 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092352761 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.092272016 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067116291 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091074013 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.088016512 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062712356 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064179688 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058412887 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089957367 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061572036 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064991296 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060947795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.089857237 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062645404 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064699221 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086092958 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065416389 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064009503 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061233625 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.094596358 seconds)
  done (took 3.076530141 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080403964 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087391483 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122280461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130055713 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138632095 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081303822 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111317014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09082847 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117590384 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073362101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076136111 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12966446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091649862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107146676 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076487006 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087706523 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.116106721 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075250734 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078780032 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122084672 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089507291 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111580269 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094425319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084933807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100743242 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075077719 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106604724 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086671924 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.080102434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110196182 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079435173 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104706859 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075713988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084704782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106518594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074379877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120161151 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082992083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082606755 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103248071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077455608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075254802 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121846725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118055508 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101265019 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079668681 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108320931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082994318 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0832635 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118852724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081528714 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101158374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077024211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073452398 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.102511262 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088078602 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074885633 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103893573 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080812206 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075955507 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114530229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076438434 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116882393 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073370658 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079689857 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102310385 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073537894 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072223202 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12435059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078109823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142157424 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073108122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10260177 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082375587 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080350615 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10685694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073488621 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116399555 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082760933 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076205126 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.111155971 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076207897 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076002567 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118738895 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075369892 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.102834495 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074337006 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078671807 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104448226 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074261719 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086901148 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101789216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076039904 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113650097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073612115 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07412063 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10789882 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077174351 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071740514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114030922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077495244 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101691661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082634269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07351309 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104468976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08239668 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105690679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073061212 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077140156 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108059043 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076150451 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076461476 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103958187 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075213414 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082342067 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107646495 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076374316 seconds)
  done (took 11.857960002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203824801 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195159236 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075294978 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.187124251 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084647 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112652823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.189373205 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104079248 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10284187 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07409079 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073934629 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142338529 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105664787 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.14439781 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.11104232 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073431162 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091658595 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143184445 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.192251543 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.185522745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0936526 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.110716622 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075631008 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074486521 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.104707918 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083699546 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119616155 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085034022 seconds)
  done (took 4.416717664 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087408615 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134340966 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079426294 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094448494 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.125968885 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07371247 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1066119 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074690092 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085973446 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114200232 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073050488 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.107795359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079900324 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.11077544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07420038 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082389846 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.111592741 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074292286 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104724126 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077617413 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079763092 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114956539 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076900376 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.100613413 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.08007878 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072150606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099953456 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091702099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102286966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094553317 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100538036 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079568193 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08305158 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103990087 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072764648 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075108361 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104705772 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075619211 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074749949 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100510446 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072888934 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063490019 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101106838 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086552975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109950599 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065287006 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079333762 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107905754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078960639 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071329209 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104542208 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07585846 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104268818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081186135 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077472088 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.107113662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076779965 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070264353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108399939 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075757781 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069917804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100638086 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0785035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071811173 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110462414 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078266342 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101184182 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075765445 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077071501 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108317736 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075291399 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076331008 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.099945026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075614683 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078398433 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.106462283 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076293373 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071615697 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101977171 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073231514 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060525506 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101751671 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059295275 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076530187 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100674584 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072110763 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075113699 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108077746 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086531272 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102641143 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079384867 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101833905 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073281802 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076247611 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096849452 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076520932 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088185362 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119046098 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073492712 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100425744 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086972579 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078470277 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101484941 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062293278 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081168365 seconds)
  done (took 10.301132422 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095961438 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09874439 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103631339 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088018749 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128729087 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096278912 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110296767 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080251995 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075747231 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119442757 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074236681 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082171659 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.10707618 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08212357 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124810462 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08124919 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07550094 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.111478531 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081270911 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137540067 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087457121 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090941844 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112838797 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073371392 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106285261 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086286982 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099150592 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112400174 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.082097719 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116184549 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08367188 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099029534 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.117393464 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077918839 seconds)
  done (took 4.387040315 seconds)
done (took 39.880739614 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.140989565 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.3462147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.128166482 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.029379659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.163631243 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.140237021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.138337063 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.128901411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.669487867 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.130604626 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.399455495 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.754373312 seconds)
done (took 59.244074157 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.239589539 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.267371824 seconds)
    (2/2) benchmarking "String"...
    done (took 1.402623214 seconds)
  done (took 3.741812352 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.472894465 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.143871871 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.409720731 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.124325833 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.126629154 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.591120007 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.713726587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.462927789 seconds)
  done (took 27.642039717 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.125378138 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.50543822 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.594975331 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.592606695 seconds)
  done (took 17.891733385 seconds)
done (took 59.056266466 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.150080007 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.179775109 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.157078995 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.114512099 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.236867297 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.148302837 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.446484184 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.357789487 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.125400205 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.115948489 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.14221549 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.124234103 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.132552223 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.435091534 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.131385868 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.125417912 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.170421824 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.593505427 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.505458605 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.125785995 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.161811848 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.158759637 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.13395336 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.124758846 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.176501629 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.123449131 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.137359457 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.12916266 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.326423604 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.13344292 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213281661 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.628905146 seconds)
  done (took 189.040196389 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.123744651 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.185069393 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.278131752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.159646396 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.577565408 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.323578082 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.238154585 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.637593882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.140730983 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.135559445 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.384374959 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.129734482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.447538878 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.109445941 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.135484731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.232598859 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.31135329 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.448696146 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.141523405 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.396177123 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.137707403 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.385070534 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.297681465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.341176953 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.169110307 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.138906799 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.141648064 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.142834744 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315687665 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.260316667 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.141821732 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.151601518 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.688424825 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.985094139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.143252218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.141622937 seconds)
  done (took 147.188925506 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.391931312 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.121288536 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.12498579 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.126371431 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.126108007 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.155355628 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.129017326 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.649004008 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.652968685 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.628246164 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.465458939 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185218518 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.328952789 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.127208345 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218842844 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.133482004 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.12758602 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.14410658 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.153635147 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126991936 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.126801921 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.651863645 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.138230299 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.213766291 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.134839347 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.12827538 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.154758637 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.520089975 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.129004523 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.156333989 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.441785419 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.16981592 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.128138416 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.424537444 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.913178162 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.125952746 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235623772 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.129886692 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.157610374 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.131168838 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.391497872 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.127486661 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.130512679 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.132516519 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.709817369 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.128705878 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.648952184 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.132757081 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.001600539 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.128403035 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.12606034 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.654753805 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.539256234 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.122806409 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.126826138 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.128189926 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.125424384 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126581184 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.155641637 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.574395076 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.225271207 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.132966548 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.133251672 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.159084913 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.130785381 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.174701304 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125400251 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.522565596 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.18106853 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.233340104 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.638878871 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.129609285 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219135332 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239943297 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.123009428 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.123866532 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.122734941 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.123656357 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.123521544 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.228003684 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.12705058 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.504674092 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.129160281 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.124791492 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181371255 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.214880951 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.123484004 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.397757895 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.126336386 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.122517962 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.785320624 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214224243 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.123393297 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.123298133 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.123578786 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.502431431 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.631385788 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.274903472 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.127518321 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.553859898 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.123858517 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.123675298 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.515507718 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.619810796 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.672847595 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.124585537 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229033485 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.128177267 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.125845626 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.124587997 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.15279088 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.125108095 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.185086782 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.123397235 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.518134871 seconds)
  done (took 335.716078378 seconds)
done (took 674.41143714 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.811212008 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.762070584 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.890914313 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.771446875 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.754915783 seconds)
  done (took 10.05833677 seconds)
done (took 11.124204399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.297300566 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.296162522 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.180402888 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.298236323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.150700313 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.313736294 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.276572859 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.144431734 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.219724627 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.194054891 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.218111402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.168760452 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149720813 seconds)
  done (took 16.975531561 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435427754 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.471587334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.191026095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435972325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16898102 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430656357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.326236151 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329858403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319326561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.145276903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.140461342 seconds)
  done (took 15.464740316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.43522819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.428048189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.193926404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.432657645 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167220322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430756489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.323863228 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337258105 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.323518277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.145488087 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.138523586 seconds)
  done (took 15.426121181 seconds)
done (took 48.933188749 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.136664731 seconds)
  done (took 2.20714735 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.16733804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327640898 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.151432361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.141184002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.136031233 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.138789427 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.141449388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.136377613 seconds)
  done (took 10.410966247 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.135080588 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.136533628 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.133387956 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.134253082 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.134182026 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131888951 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.132233114 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.131744982 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.134288395 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.135104992 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.135559375 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.131973347 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.133906758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.13519674 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.13243529 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.131878125 seconds)
  done (took 19.210521574 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.134209929 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.132073023 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.133392205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.132047774 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132265584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133986542 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.132875612 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.131902181 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.132607511 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.132070761 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.133733766 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.135167747 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.132662967 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.132931646 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132356623 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.134030643 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.131849837 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.132673751 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.136996704 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.136207257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.132515653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.131339397 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.132867324 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.131760675 seconds)
  done (took 28.267278383 seconds)
done (took 61.163422645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.04473572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.6175323 seconds)
  done (took 8.73287837 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.134072588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.13499076 seconds)
  done (took 3.340967177 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.135109147 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.137720185 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.134175926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.134602575 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.134449123 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135014467 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.134665241 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.134888303 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.134357744 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.136441063 seconds)
  done (took 12.422151686 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.134249089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.134994442 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.132292108 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.134968643 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.134514595 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.133409021 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.13525362 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.135976615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.134707023 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.132764647 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.13582898 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.133304942 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.135476561 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.133789033 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.136018297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.132733381 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.13411499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.133014439 seconds)
  done (took 21.48772346 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.13448428 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.135532549 seconds)
  done (took 3.340729189 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.132451936 seconds)
    (2/7) benchmarking "second"...
    done (took 1.133089071 seconds)
    (3/7) benchmarking "month"...
    done (took 1.132996876 seconds)
    (4/7) benchmarking "year"...
    done (took 1.132834648 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.132869517 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.13292087 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.132621807 seconds)
  done (took 9.00103638 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.136604811 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.311703243 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.390606449 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792433311 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.137210859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.138975436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.00707051 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.14042888 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.142180853 seconds)
  done (took 13.268536823 seconds)
done (took 72.663150417 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.121511886 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.130945921 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.947448815 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.146105996 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.149718004 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.474019363 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.146097087 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.252360117 seconds)
done (took 36.439003969 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.130618362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.848908294 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.868225839 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.129543756 seconds)
  done (took 10.920213605 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.11644501 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.004149445 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.125317012 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.09632159 seconds)
  done (took 17.415086027 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.085157164 seconds)
    (2/2) benchmarking "read"...
    done (took 1.463161794 seconds)
  done (took 4.622786429 seconds)
done (took 40.158800888 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.137664331 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.137973211 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.138531242 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.135364822 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13725195 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.134436741 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.135151861 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.138504284 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.138315532 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.135597838 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.137558868 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.138085648 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.138523081 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137816853 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.135780988 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.13621808 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137943722 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.135547731 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13539045 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135454666 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.138778365 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.135405832 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.135947138 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.135610114 seconds)
  done (took 28.356415196 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.138723092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.136977772 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.138479073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.138884568 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.136538006 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.139216606 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.138851979 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.136001816 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.138443527 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.139497529 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136884871 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.138443957 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.138207926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.136955348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139997895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.137298005 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.138553777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136637293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138829928 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.136562454 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.140077036 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136922159 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.136230025 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.1389022 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.137969341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137433418 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.14029651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.137144183 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139971034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.136549415 seconds)
  done (took 35.216039057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.143635048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.146822151 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.140503694 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.14127765 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.140406602 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.140448058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.139972728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.140066838 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.140106535 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.140136952 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.13987501 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.140413702 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.140215869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.140963158 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.139813226 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.139924008 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.140320608 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.139897742 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.141067221 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.140949435 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.140932023 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.140859729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.141633028 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.141381757 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.141100163 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.140761877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.141017284 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.141154169 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.140828386 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.141636888 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.141923066 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.140767883 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.140847359 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.141769188 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.142211063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.141898612 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.145184407 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.146557089 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.141477622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.142240696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.141622115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.141571311 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.1413356 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.141345069 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.14157164 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.143000409 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.142310788 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.143020819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.142412249 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.141227202 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.142358769 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.142104263 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.141369327 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.141679297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.142065231 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.142635845 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.141634549 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.142164086 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.14166549 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.142818493 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.143362777 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.142313948 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.142906065 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.143010953 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.143214439 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.142737433 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.142420461 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.143042423 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.142991937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.143565484 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.142744945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.142036029 seconds)
  done (took 83.285488114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.142959665 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.141258679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.140246799 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.140470064 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140513218 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.142810322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.141638349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144351269 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140602615 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.142866125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141873517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.14182536 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141845522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.143798064 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143636502 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.14128355 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.143938834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.141118768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.144740897 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.14444012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14429832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.141246307 seconds)
  done (took 26.211061128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144679732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.145218979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.142064423 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.143670317 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.142813071 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145201099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145073734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.144697596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147624587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.142393181 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142644263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144217212 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.142442888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141862666 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.142617412 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.142231358 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144880133 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143421243 seconds)
  done (took 21.667312985 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.142703223 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.142918792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.146248055 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.142530272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.142904672 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.145551486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.142501052 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.145750999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.144857199 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.143010252 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.145331542 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14537512 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.146315224 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143373515 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145907074 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.142858363 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.145957748 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142646159 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146062626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.143240406 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.143437777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.145991494 seconds)
  done (took 26.256067567 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145794301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145385202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.143768014 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.143631472 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.143316048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.14599393 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.1468367 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.143838767 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.145643568 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.146958452 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.144853917 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.145869662 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.143891105 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144214894 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.143866538 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143533064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.147247423 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.144439552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146334484 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.143986789 seconds)
  done (took 23.980694155 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.147009853 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148269897 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.14758267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148280166 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.148044824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.148312969 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148566954 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.14880885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.148185245 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.148217101 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.147777671 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.148375365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.148084612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.148326158 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148452987 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.148131845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149061603 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.148793177 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.149524977 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14899873 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.150133511 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148232634 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14983096 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.148641911 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.149529622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.148816958 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148971049 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.149869704 seconds)
  done (took 33.24349539 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148975923 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.148887289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.145810328 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.145872616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.146023783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.145904241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.145648711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.146863305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.148399145 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147095487 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.14912641 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.148536309 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.148619058 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.148885385 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.149164096 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.14891552 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148816853 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.146853068 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14677308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146549078 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.149322651 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149674022 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.149526063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.147257134 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147196482 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.149560318 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147447573 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.147872046 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14979386 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.147084252 seconds)
  done (took 35.521392553 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.168175592 seconds)
    (2/2) benchmarking "in"...
    done (took 1.169388585 seconds)
  done (took 3.423128769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.147161131 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149569467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.150090723 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148409964 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.147591887 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.150761257 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.149987848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.147966768 seconds)
  done (took 10.276762744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.149918298 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.150268791 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.149960489 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.150338992 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.151082515 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.150911564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.15845922 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.166302685 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.152009762 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.152114379 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.156125509 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.156985013 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.153990651 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.152344294 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.151213878 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.153517005 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.150865925 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.151097613 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151514935 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.151213526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.153275338 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.153648498 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.154476634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.149437836 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.152402737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.16191998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.156069915 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.152436606 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.150916988 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.156577229 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.151579899 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.14965174 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.15253229 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.152133798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.152711467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.152563663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.162253128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168220996 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.159237346 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.153637061 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.152372738 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.150713169 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.153307246 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.153862118 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.154203064 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.152771697 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.153973707 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.149859785 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.152727331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.155434633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.156962076 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151717051 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.151111797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.157524374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.154438643 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160663636 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.168642181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.155386852 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.160732692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.162654101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.165706024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.160836414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.155763664 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.1544685 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.162778515 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.174731387 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160683488 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.1665864 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.15129895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.153973679 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.160839856 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16673654 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.162526659 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.154437806 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.154227368 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.152807865 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154760996 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155055035 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.161802247 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.174204786 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.155420182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.15513489 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.163712294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174083178 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.154670883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.15510853 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.15588927 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.155135727 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.155226143 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165311305 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.170729964 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.15509502 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.153848785 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.155885437 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.156409614 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.155422815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.15522679 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155960839 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.153302551 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.155622359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154532794 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.158698336 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.163271748 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.155640607 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.155517904 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.162766923 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.155734462 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.155704275 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.164161137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.156703517 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156847403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.156639737 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.160207534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.15437228 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.159235703 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.164024661 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.156788571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.15781321 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.157341069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.157949788 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166779403 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.179373095 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.158005188 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.157146624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.161534494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.166354028 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157581643 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.160970698 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.157992643 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15575349 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.155269411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.158629357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.158162505 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.159089817 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158347545 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159229391 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.155779149 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.158213665 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.157564274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.159600101 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.159495729 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.158642125 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.159735378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.15943468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.157510783 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.159257151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.164425358 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.158685315 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.161007262 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.159252406 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.156269632 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.159158111 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.159579599 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.158050578 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.158635044 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158412992 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.157943015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.158884651 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.159841652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.158747265 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.158954628 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.160055823 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161165674 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.158069134 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.162594334 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.158605194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.156368966 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.158542686 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.159232976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.159256301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.159597604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15701887 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.162457899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.165035327 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.159314535 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.159347116 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.162088892 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160276916 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.160502307 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159907395 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.162148868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.165814691 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.159561076 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.165549138 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.160020017 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.160130681 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.160398505 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.159518413 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.159446519 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160532909 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.162659301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.16659967 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.171107567 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167783411 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.16153734 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.162827442 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.161117326 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.162395041 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.163672417 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.160735176 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.160269429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.160876754 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160988931 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161153398 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.162836836 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.161198938 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.160887036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.161500788 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.161561492 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.161990902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.162099457 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.162029718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.162330409 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.1595213 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.161595276 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.162463841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.161957039 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.159488607 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.16018795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162098499 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.160894083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.161519055 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.167712961 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.158625901 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162584041 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162642955 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.162718286 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.161112839 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.162442181 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164582249 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.161682674 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169100489 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.177235235 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.164131103 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169028687 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.17834029 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.161718674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.165101484 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.16265931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.160837038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.165668798 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.170172782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.163042123 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16328482 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.163449831 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.163385257 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164022083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.170123686 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.161773723 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.162659616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.163647865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.16517626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.160595366 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.164685995 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.164659459 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.165358419 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165691767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162991195 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.16414299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165012823 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.163964829 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.164465797 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.164674592 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165780887 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.17036972 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.16956571 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.164845457 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.165618802 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.165727811 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.167880426 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.165023582 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.164679958 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.1644982 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176331918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.172178313 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.170950578 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.166785782 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.164333018 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.169719297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.16548203 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.167185559 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164424342 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.16545533 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.164736537 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.164554522 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.162854482 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.16592175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.166299743 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166219493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.166988224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.167882465 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.165279828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.164083225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.164731469 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.165526012 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.165881226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.165468352 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.166260739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.168287401 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.168581848 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.164940603 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.16615248 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173343881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181636653 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.167527721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.166707551 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.166993748 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.16597552 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.168030009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.166750988 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.168856273 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.173050217 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.1692889 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.174232089 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.168061211 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174176664 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.167295841 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.168904722 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.172860051 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.165377288 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.165992851 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.166520667 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.167776637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17423749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.182354534 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.168852254 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.169386718 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167611749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.168055691 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.168282251 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.167595378 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167315306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.168234279 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176188351 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.184535218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.171064621 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169768483 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.166587321 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.168015802 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.167392322 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.167646202 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171881194 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.168096821 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.168724301 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.167155148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168955147 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.167880392 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.167830184 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.169050436 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.165738399 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.168487318 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175521695 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.184309786 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172226262 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.169605874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.174755373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169057414 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176159294 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.184112448 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.170190818 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.169219403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.169163491 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.169897279 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.169266365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.169894374 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169943503 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.171004816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.171153222 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.169013508 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.171468392 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.169799899 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.169113682 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.169195722 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178571945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190418681 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.170299755 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172871688 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.167535538 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.170861532 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.173133642 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.170916275 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.169158829 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.17130401 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.178606874 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176596101 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.170713979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.170579629 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.170808187 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170336074 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.17028936 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.169993533 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.170261462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.170735192 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.171668638 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.17069574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174553027 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.171375786 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.171232082 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172357756 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.173292071 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.179359205 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.1710662 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.173053975 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171335208 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.171825401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.170980377 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.171713038 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.171671466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171852221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172226856 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.172018869 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17683311 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.176041103 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.174224448 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.170453079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.171979729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.171012671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.172814223 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171828755 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.17130836 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171391548 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.172776871 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.171748088 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.173172394 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.171228782 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.171760628 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.172885055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171712856 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.1738072 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.178033183 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172163751 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.170164458 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.171803459 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172478307 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.171796144 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.172709737 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.179918501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174308525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.181552376 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.179234278 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.175692602 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.172976605 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175516897 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.179311278 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.172793588 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.173429528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.174073875 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.174043297 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.173670431 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.175497953 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173479228 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.180167881 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.173929096 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.173851391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181615522 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.189886423 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173241541 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.175099664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.177506491 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.173437333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.171856634 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.174804129 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.173017428 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181029277 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.191553512 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175523461 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17594589 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.17244008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.175690583 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177372092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174142587 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.175746216 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.172165113 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.176015054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174557484 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174807397 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.172391751 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.174753808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.174213391 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.177594645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.179752055 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.172903286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.176959542 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175297663 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.176879115 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175511512 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175760341 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.172851839 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.172643969 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.175904087 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175448034 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.176522285 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.178080026 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.175309293 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.176357003 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.176233987 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175830716 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178743607 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.184211284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.182239034 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.172993556 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.175468743 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.176685369 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.17904697 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175328688 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.175119145 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176801522 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.177789822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.176201895 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176349182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.176711654 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.179499496 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190684932 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.192452686 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176682514 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.176947603 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180623101 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.17720329 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.17498357 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.177289153 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.179529406 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.179940679 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.182023404 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.17716937 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183420529 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192833494 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.178319904 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.180031737 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179903006 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.18289099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.17880725 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.176959684 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.178603656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.181979586 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.191692134 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177560751 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186746489 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.204472585 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.1941715 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.179121062 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.1778226 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177119873 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.177496051 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.180144336 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.178250292 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.177208795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.177953801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.1780706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.179584565 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183536111 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.17961557 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.179042862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.178812505 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.178192863 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.179814861 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.175682489 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.178769645 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.178412107 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.179444935 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.179703819 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179609874 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.179743685 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.19139261 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.188391747 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.179151024 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.179607784 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.176237941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.182872873 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.182155952 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187615246 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.185735729 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.179433592 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.179673531 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.181465033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180225035 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.177361389 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.180027254 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.17981526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179509642 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.177758587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.191985305 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.187097444 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.184977243 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.180080385 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180099251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.180514353 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179569744 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179470006 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179912118 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.181857847 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.181575151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18289322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.180145522 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.180391205 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.182980385 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.186499103 seconds)
  done (took 697.146346115 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.177946017 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177794119 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.177209859 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.178027825 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178293304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17750893 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.178442187 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.177003585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.17785795 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.178174331 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.178227873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178099544 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.178329574 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.178927931 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.178546171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179555193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178633078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.178323876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.178538969 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179302181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.178895569 seconds)
  done (took 25.858306609 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.181630682 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.178487129 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179764554 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.181785186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17925115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181854981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.178874704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181390842 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.182323795 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179123637 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183075213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182583413 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.179762227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.180342462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180935104 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182799885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.183122304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181014751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.182744512 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.180997435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.181753956 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181095145 seconds)
  done (took 27.100336357 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.182724039 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.183329358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.181889911 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.180995122 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.182925463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.180384981 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.183272875 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.182523007 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.183584569 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.183573588 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.180982251 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.183896831 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.18867919 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.186631198 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.184445161 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.182376137 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.327267801 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.182271129 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.183579305 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.183377483 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.181327475 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.188579042 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.181169596 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.181663806 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.182292427 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.183713452 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.184310213 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.184354664 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.184254061 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.183697856 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.186866958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.18462153 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.182606863 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.184607496 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.182502217 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.183634453 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.1871418 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.185498073 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.181888465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.183961291 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.193320454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.202056593 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.184875682 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.189699152 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.184614693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.183984796 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.187170596 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.191488833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.182156956 seconds)
  done (took 59.304857533 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.185679321 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.185119197 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.182543206 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.185226582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.186233057 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.184923691 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.185724955 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.184929707 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.182353891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.183147766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.185279315 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.183088542 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.183434172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.18536989 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.186201639 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.183238295 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.183654617 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.183182782 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.184766761 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.184397004 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.183968182 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.185993628 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.1862423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.185014335 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.186847701 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.18453084 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.183431208 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.186838731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.185042869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.185123464 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.186639154 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.186599642 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.187396611 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.184320314 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.184449492 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.186884864 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.186558446 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.18358508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.186291454 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.183396411 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.187365623 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.187518653 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.187740563 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.187625165 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.184779012 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.18482188 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.185912739 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.185209317 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.18543987 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.187975051 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.187742181 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.186414071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.188346887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.184273571 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.187285613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.188653193 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.185123357 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.18588409 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.187470147 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.185935807 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.186257943 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.188532263 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.186173298 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.18824989 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.188154444 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.186739528 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.185719124 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.189044116 seconds)
  done (took 81.748874398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.18812265 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.187749287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.188479682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18845816 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.188129416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.18947564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1883901 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.189637417 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.189041185 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.18933325 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.189014684 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.188442465 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.188953862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.189679848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190159713 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.188849079 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.188520717 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.187962968 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.18935249 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188970467 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.189589967 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.189662415 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.188317194 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.18950282 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189811421 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18932319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190820148 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190192156 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189780449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.188764531 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.19028647 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.189475751 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.189847902 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190607458 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190515786 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.19039443 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.190271246 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190070539 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.190461249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190026362 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191043292 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19116899 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190743097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.190471312 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190458813 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.189380024 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190855124 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.191186506 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.191232145 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191872911 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.191161395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191210979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191496738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.191033857 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.190731197 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.191593202 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191624434 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.191398137 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191154521 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.191393479 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191170917 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.191321675 seconds)
  done (took 74.901343567 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191035294 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.192227309 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.188936149 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.188757655 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.191680868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.189028845 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191985168 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.191460974 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192034925 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.192255881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190692451 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189332238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188645633 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191611234 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.189326752 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189711221 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188644607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189158198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192067803 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190440344 seconds)
  done (took 24.933545631 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.189757739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.191774336 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.190107255 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.18970446 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.192959963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.189919279 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.193602445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192304471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190503149 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193335567 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.193750011 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192771444 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190028792 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.190095304 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.193560722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.191470264 seconds)
  done (took 20.190876972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.191128954 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.192792619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.19334076 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.193199528 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.190041112 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.190753057 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.193596055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.190986394 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.189923093 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.193957147 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.193474726 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.194077214 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.192990738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.194018087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.190817778 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.194107056 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.191075271 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.19205686 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.194404101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.193641589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.192709393 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.191908379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.194758856 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.195076104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.191923617 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.19226299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.19216288 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.192488497 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.192705703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.195140491 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.191803671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.191876802 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.192587501 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.192507011 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.195448845 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.193054638 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.195390279 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.19535275 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.194162315 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.194697818 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.196335144 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.192217137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.196534951 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.195883756 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.193619226 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.195937921 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.19266777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.194000449 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.193828188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.193523554 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.195418326 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.196079681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.196265562 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.195977931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.196712291 seconds)
  done (took 66.769950255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196413749 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196577677 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.192527311 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.196621737 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.196923348 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.194464503 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.196795869 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194276958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1936365 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.195639988 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194107406 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.196235876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193317381 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.196481919 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.194403174 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196525149 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.193619729 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19369422 seconds)
  done (took 22.640278016 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.194558104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194924153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.196769503 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.193875905 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.194211351 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197606399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194665085 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.197233278 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19677552 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.19416817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193952738 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.197606063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197432783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.197111487 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194836101 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195145037 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.197405283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196675405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.195509515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194555795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197860918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197022388 seconds)
  done (took 27.438847247 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.196094473 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.196436268 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.212046401 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.233685784 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.223173953 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.195957572 seconds)
  done (took 8.387045386 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195339345 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197962785 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.19619778 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199592881 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198458573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195811577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195690275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196618716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19872946 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196385215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196580246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198500592 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199422111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197178679 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198014588 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197814348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196350954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196734801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197638597 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200026546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196945449 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198858591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196671142 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19647307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196725908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197229822 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200217583 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197299208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196682826 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199694011 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199877459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19696984 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199519037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198543012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200689001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199962822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196749849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200190702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198950242 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196700615 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200760687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200711691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200751946 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197747788 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200328583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197778926 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198240828 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198430308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197567759 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200382949 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200518538 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199855655 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200925141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201480657 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201226066 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201575196 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198974537 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199105566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200119705 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198948835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198446648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20130372 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199463191 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200207158 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201909293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199198225 seconds)
  done (took 80.242921368 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199072197 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201399214 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200068715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200135209 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199172963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199859336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198230154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198776949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198718211 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199804864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203055896 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201078865 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200339627 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199185408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200591884 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200134552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199744867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201186438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200195754 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204380271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200860283 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199460718 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199964713 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200129561 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200335936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203396314 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199673263 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200420371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200652399 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200781368 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200078293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20039352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200180765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201015237 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200662491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200367639 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200182921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200462619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201701137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203215654 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201517936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20377699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201425171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200358554 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200816153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201008929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200525381 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201601662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201593341 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201447546 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201175027 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20135524 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201926588 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201273101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201857077 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200890464 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20133422 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201145881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201746051 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203982507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201046185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201852093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205120611 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202579241 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20177342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202263301 seconds)
  done (took 80.401048357 seconds)
done (took 1625.573828442 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.296188285 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.252410703 seconds)
  done (took 13.684389451 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.364859181 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.31916599 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.202358722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.227431988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.20251856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.223155131 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.216599715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.203133628 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.202991296 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.202772892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.203349189 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.39020256 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.198166336 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.203809381 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.203131186 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.296788263 seconds)
  done (took 41.006034179 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.230868305 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.209620467 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.31417515 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.223967072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.230554809 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.381432172 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.261515925 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.206853207 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.367209297 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.249814784 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.665492347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.231030978 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.208242088 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.244626275 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.224864554 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.380825779 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.441049255 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.673095552 seconds)
  done (took 27.884149952 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.624463784 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.240151544 seconds)
  done (took 9.003488603 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.216770806 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.226700625 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.218755577 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.215830388 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.20730433 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.249121146 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.247378963 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.261169382 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.249433157 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.242457718 seconds)
  done (took 63.48460327 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.226134821 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.209121271 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.20936647 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.206849496 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.211274224 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.203362198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.207434125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.201920397 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.57620991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.329131927 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.225220834 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.214910949 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.209490514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.209267448 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.206558595 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.24252699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.342099823 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.207322193 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.20554251 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.213841616 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.208211755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.306749853 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.247173614 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.210340871 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.325877469 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.600151991 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.214421695 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.215626753 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.324798174 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.208341283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.207704277 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.208956553 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.210070993 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.758455691 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.699494221 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.218926551 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.231349974 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.21879058 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.209439685 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.321744202 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.209414734 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.216552991 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.202930704 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.690385305 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.370534899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.314030141 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.413382409 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.215632903 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.211583508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.268470112 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.214658417 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.21134924 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.238610921 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.951596976 seconds)
  done (took 103.874791699 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.204886137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.690554914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371426304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.222659666 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.975186444 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.875919262 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.207292509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.469789308 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.216154996 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.20448169 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.47884107 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.692607344 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214559371 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.220727958 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857513576 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293725852 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217244946 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.977932427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.202809154 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.206592317 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610663595 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218967386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.221582353 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366588766 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.242512921 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.6499451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.600448466 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.510977186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209798338 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.204882274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.652546386 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.212488333 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.253435334 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.205413272 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.469574109 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.542116641 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.522161769 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.208067808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.205939781 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.208484069 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.219634368 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.646083008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.530111009 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.210749903 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.209988399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.651039075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206048151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.205384578 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.204808363 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.403582364 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.973423256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.204864085 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.610662399 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.205954522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.544463364 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.224445877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.298672022 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677723292 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206032123 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.212669601 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.246435879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.204512701 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205522692 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206456108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.210885457 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.535442111 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.354298801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.209605173 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.536677608 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.648089334 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.209887152 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.729926455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.059111949 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211381124 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.279130631 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.207032263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.795014759 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.68111265 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.220460526 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.206973876 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.520418909 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209961023 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.4769319 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.219521809 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208220857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625287207 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.233978844 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.271390382 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.206780725 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.208536989 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.86056777 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209993387 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.467103419 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.23849048 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207615874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.207641507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.245422739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206894386 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.209169088 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.214221024 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.717361123 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.214715259 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.335779279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227309741 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208817085 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.228496348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.21044619 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.209714077 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422857144 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.652960695 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.213999672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.207650977 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.208100055 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.228787616 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351405006 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.219113008 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.499588123 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.214828079 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20897296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.212867149 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871009375 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.224669565 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.221787486 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.214137691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048300627 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.415692824 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.22700449 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.208727644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.209938706 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.223504706 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.512036224 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.21061325 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.282806137 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.213338125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893029443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.250379264 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.210761971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.627032028 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.209147197 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.116113153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.235161177 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210568297 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509213353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.474944812 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.277016887 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.211711661 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.209763504 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886594183 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.258376498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.357325213 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.228554069 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241020716 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.407866992 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504900462 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211255475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.765766628 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.211154824 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420671058 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.211318921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52355037 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.680985426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.216337857 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.214672083 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896555239 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862726698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.832262566 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.216193821 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.479702624 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.207479434 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.664742439 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.211826492 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.212757187 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.659763633 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.215601756 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.213055857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.212862972 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.213904474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364813188 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.386735517 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.726882314 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.217576467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.655211357 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.234119019 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212458707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.223909525 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.213491616 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.562921221 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.30708665 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.217861753 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.233269649 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.213357484 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.214914216 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.665311469 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.112893276 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.218222896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.366368674 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826587669 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.216465126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.212927906 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.80882414 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.500174454 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.708650927 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.222836881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.507314307 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.224764242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.25154413 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.91478085 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.256389588 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.671052406 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221088146 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.219140088 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795283993 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.217339028 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.580285794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.214088169 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.214258724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.748051935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.217802649 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.215673843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.537705243 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219047361 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458548489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.217818555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.231840961 seconds)
  done (took 1082.051600319 seconds)
done (took 1342.123776109 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.215138121 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.215344283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.203814186 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.2200614 seconds)
  done (took 26.006880494 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.226812448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.221559103 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.222696481 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.222339479 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.224927478 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.221454609 seconds)
  done (took 8.493865852 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.275797683 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.215086367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.219666559 seconds)
  done (took 18.864315353 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.427483772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.454325287 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.57253048 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.324805659 seconds)
  done (took 9.933399771 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.222755298 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.222720336 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.223625053 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.22533886 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.228274721 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.228792475 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.224897836 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.226259055 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.228195116 seconds)
  done (took 12.184349212 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.989968982 seconds)
done (took 81.62397898 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.242581521 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.624584958 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.919515658 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.335534512 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.217414572 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.23491256 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47357024 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.45923097 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.012564328 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.257831444 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.479225822 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.28053879 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.243918288 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.216967971 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.523593096 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.21872543 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.823587684 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.96774978 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.248079583 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.475022595 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.094236478 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.249224413 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.548431616 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.504160301 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.243919419 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.207096441 seconds)
    (27/309) benchmarking ("sort", BigInt, false)...
    done (took 6.218638677 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.333967532 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.244056596 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.78278089 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.070662289 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.352576782 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.524913015 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.22046924 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.246480442 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.213457278 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.292859674 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.261647467 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.815763442 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.221657884 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.551880893 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.202495726 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.253875236 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.599141193 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.346933651 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.33012526 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.674702933 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.224245858 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.489083833 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.754496188 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.502104336 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.43025662 seconds)
    (53/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.017765692 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.603286836 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.250839907 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.276342978 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.340357365 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.247104552 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.848473176 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.650984882 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.631313874 seconds)
    (62/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.993652876 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.422006471 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.94836227 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.555935923 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.239517428 seconds)
    (67/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.008585445 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.035538836 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.845982153 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.537846224 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.952575805 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.642342994 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.088340001 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.953416836 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.250726522 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.386347775 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.925705186 seconds)
    (78/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.568319955 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.429846559 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.221534057 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.691893039 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.660850328 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.321166901 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.819166038 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.95376605 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.624468843 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.577473844 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.616132355 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.070083182 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.543757202 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.069656004 seconds)
    (92/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.230522932 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.286001076 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.306864371 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.591635276 seconds)
    (96/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.502879054 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.369115723 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.221127657 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.225766304 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.330503014 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.581494891 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.448529486 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.221257534 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.422047406 seconds)
    (105/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.404196275 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.248687584 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.271320397 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.222026326 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.362674117 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.853856772 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.327773212 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.210420618 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.24203869 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.25538054 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442437885 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.2744456 seconds)
    (117/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.761468954 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.366523036 seconds)
    (119/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.231860412 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.9437115 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.732517459 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.247681593 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.222522202 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.321237942 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.492032367 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.346926732 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.215905513 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.944415321 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.834371265 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.481603266 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.112638069 seconds)
    (132/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.44595313 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.599438873 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.613568719 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.339975875 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.248127664 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.540597512 seconds)
    (138/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.549970792 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.33472985 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.031251092 seconds)
    (141/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.25020078 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.234852614 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.225817639 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.224410799 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.424597109 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.766803341 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.969333265 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.251892844 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.250935514 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.209131299 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37144931 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.308170908 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.545790416 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.306952213 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.323906576 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.287954501 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.512317626 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.487244737 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.971449034 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.264561681 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.754937167 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.215382408 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.372330837 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.93171985 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.126883682 seconds)
    (166/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.569780411 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.221338398 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.570477754 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345074641 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.230825483 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.81488579 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.246996564 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.227656956 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.635969689 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.067302675 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.239919244 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.214806386 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.638068589 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.063407672 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.215016002 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.774030687 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.214871385 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.606304789 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.776729307 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.256396866 seconds)
    (186/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.81384896 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.303635743 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.618078591 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270246835 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.29057617 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.226082463 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.306519436 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.248041623 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.211117617 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.633871644 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.272949555 seconds)
    (197/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.808132778 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.540985003 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.100818058 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.310963609 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.620355807 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.550304839 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.590708608 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.317453713 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.971108115 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.312225315 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.243595788 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.284875486 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.48443456 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.231372193 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.24792046 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.264083036 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.574808956 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.312493861 seconds)
    (215/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.053620813 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.268042409 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.429343085 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.805928353 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.121239348 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.858134904 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.444615229 seconds)
    (222/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.244132423 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.229600686 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.313679883 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.989543159 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.282402887 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.775833081 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.23207132 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.504252133 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.254932933 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.312652452 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.115454475 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.787720419 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.273514236 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.228246567 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.764761276 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.228583953 seconds)
    (238/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.522536803 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.199387829 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.112469446 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.567651953 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.603735208 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.413601572 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.815729105 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.129757164 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.355743482 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.431538797 seconds)
    (248/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.481406459 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.23288021 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.243260854 seconds)
    (251/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.33153953 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.845944431 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.246557311 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.431044226 seconds)
    (255/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.272499639 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.631232925 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.269324121 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.329345924 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215331616 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.399045361 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.594042025 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.611713808 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215052114 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.878678293 seconds)
    (265/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.236230699 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328146065 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.231375997 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.288950479 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.255345296 seconds)
    (270/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.475184457 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.316999381 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.520539055 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.228347502 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.274958692 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.250084388 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.634042408 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.247475707 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.291093573 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.355021599 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.013665824 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.327039599 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.304764782 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.458001378 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.31409863 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.636646165 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.348134873 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.342663486 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.035369948 seconds)
    (289/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.216307575 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.232136669 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.92778675 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.246370683 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.670954997 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.706164998 seconds)
    (295/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.794781613 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.239932107 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.09432405 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.278263546 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.07131563 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.261904187 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.237759446 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.220076456 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.791553132 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.39554334 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.255974004 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.23165846 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.264787091 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.217573628 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.687402466 seconds)
  done (took 884.21187269 seconds)
done (took 885.366220318 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.266714088 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25923455 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.243365632 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.266605092 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.354672862 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.272462147 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.253832975 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.247059602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.293279012 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.294562345 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.241743033 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.27164901 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.244779863 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.244474946 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.244535298 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257817449 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.253879266 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.248465915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.260704727 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.254756164 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.260938687 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.24244443 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.294890612 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.272024267 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.249150399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.249074254 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.246153406 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.263425593 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.355942535 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.248248796 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.248880511 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.257145412 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258681572 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.248000602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.242124613 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.264593238 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.255643755 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.256731421 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.250088585 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.277378019 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.630055758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.245023962 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.247892934 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.248080011 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.248367356 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.252763722 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.246518511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.255315753 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257304697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.260875913 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.619229894 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.261169727 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.250006004 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.249882964 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.258880523 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.247046925 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.250403463 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262247465 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.265846914 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262887733 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.25031821 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.257100455 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.249652923 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.262725955 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.254200402 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.675443749 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.248063932 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.253512546 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.633520108 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.254206596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.692277439 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.259112322 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.249781597 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.261933803 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.279047926 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.25335719 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.243884077 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.248078598 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.254223676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.24523106 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.258181463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260723868 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.254032541 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.250202715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26188238 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.276462339 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.260018175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.248803577 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.258726866 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.268193393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.256084398 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.25903267 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.253148543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.246115376 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.259926027 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.253618348 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.251067562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.250779638 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.255879586 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.26119182 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.636687217 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265423763 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.246950243 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.247790637 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.24971125 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.263010923 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.637726879 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.250371314 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.273169013 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.298753126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.25201032 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.245137305 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.252111888 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265791296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.259246455 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.25376798 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.2474816 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.247787172 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.629777335 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.264486875 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.251809707 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.247744706 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266009887 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.25285048 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.248810617 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.25996481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.252756736 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263892242 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370847542 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.261956072 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.28248307 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.248851546 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.255695879 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.277883869 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267287738 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.282413289 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.254204385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266039189 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.265981625 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.248007964 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.261665284 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.262954955 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.253387106 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.258925527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.245958785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.284067412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.263053314 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.263909131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.273226039 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.371291755 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.251142112 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.247868441 seconds)
done (took 211.830902506 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.308556741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.24234556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.33308363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.247328982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.347126296 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.346358608 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.245773337 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.245592664 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.244892186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.659502723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.246046778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.246495345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.246197986 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.245336414 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.330952503 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.247962594 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.245658375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.589160413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.248283804 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.318194947 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.243674843 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.245644843 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.248821907 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.629201309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.243263544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.246400339 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.320911617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.248958718 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.625658322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.242133657 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.24689355 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.594020805 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.338232174 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266198808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.259222748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.256025812 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.348298528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.265216994 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.328851308 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.329253518 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.335120508 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.286725253 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.242276084 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.250606361 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.25092777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.250611405 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.246652802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.277118674 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.241579706 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.247570274 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.619638804 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.258344124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.247781931 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.248165689 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.248822459 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.27892192 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.248266861 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.251191053 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.339808425 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.251087945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.311270437 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.666128107 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.62858627 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.250621478 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.24923868 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.248899884 seconds)
  done (took 142.86632417 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.316319006 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.323166336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.359167278 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.250399811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.299752706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.364544686 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.251259279 seconds)
  done (took 10.343415874 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254946698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.250837173 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299305425 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.300298007 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.251713379 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.39906622 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.251620293 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.260998077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.249459253 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.302896669 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.252980335 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.252361834 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.258425975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.251564661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298977549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.26259638 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365759001 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.25250595 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.252419936 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402605772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248318376 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.258002547 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.302262716 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.261597323 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.253723147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.257201191 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821758247 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2519067 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249231515 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.252326497 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24981069 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.290202998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.253305108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.247595041 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250224862 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366836697 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.252884537 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250146839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.253044363 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.248138532 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.253092068 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.253240176 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.252836981 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.250447219 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.252314235 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.275689689 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.253242929 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.254087856 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.253831007 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.254683684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.302338592 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.253519997 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.250977045 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.250249919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.308176963 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26072648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254013584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.250828547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.253992544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.251656991 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403709346 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.300622795 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.25365315 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301017131 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.253288545 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.254372849 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.255304502 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.254745062 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307803091 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.25464104 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30161733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.25180904 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.408196459 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.277365042 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255363448 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.257374258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.256975886 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255667595 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.250470744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.259985206 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.252260747 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.255533931 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.260850878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.2521522 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253026831 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357168084 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36284803 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.252835504 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.266571001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.262044122 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.252459456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.308021978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.254944223 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.252340792 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306946991 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369396661 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307853191 seconds)
  done (took 145.305315412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.259454035 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.262690898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.256676152 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.271713579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.254773488 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.255505016 seconds)
  done (took 8.744075983 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.258164737 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.256676623 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.256389314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.255853 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.256494966 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.257782098 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.257054327 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.256873032 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.259958267 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.25690508 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.258502143 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.259324534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.259175432 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.258026286 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.2573589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.256935406 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.257397992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.253342976 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.257333068 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258006217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361197835 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.257282647 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.257937967 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.257913844 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.262215618 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.25860389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.263920381 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.258057256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.257893956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264734111 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.26050172 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.258800454 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.25966459 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.263034054 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.262205433 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.258487043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262971646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.261640729 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.255534159 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.259962558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.260936617 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.257860364 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.25770743 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.261958411 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25887473 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.262311954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.265046157 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265788287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.259972955 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.260822349 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.261978125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.25895159 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.260411504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.261908088 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.260460275 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262956576 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.264820666 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.259674033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.258076079 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.260851034 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.25904959 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.260005088 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.260110907 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.262944745 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.257312414 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.261343225 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.259698347 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.263155008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258415311 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.259453577 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.262300096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257452046 seconds)
  done (took 92.980127085 seconds)
done (took 401.414456243 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.597204259 seconds)
  done (took 7.785432665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.506425463 seconds)
  done (took 7.695224598 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.597707446 seconds)
  done (took 21.793157712 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.265798368 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.260058175 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.278542385 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.257061213 seconds)
  done (took 26.254042534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.6364166 seconds)
  done (took 7.824818022 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.259599742 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.252059399 seconds)
  done (took 13.702262837 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.653877863 seconds)
  done (took 7.84202377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.833791453 seconds)
  done (took 8.028241148 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.253930903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.262862776 seconds)
  done (took 13.955484387 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.239306271 seconds)
  done (took 7.427526533 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.131483682 seconds)
  done (took 8.322623849 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.266654112 seconds)
  done (took 7.456208426 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.320773071 seconds)
  done (took 7.510361793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.151167584 seconds)
  done (took 9.340026568 seconds)
done (took 156.124457649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.252988164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.260418716 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.253560841 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.253635147 seconds)
  done (took 26.210262281 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.294824508 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.293702036 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.295613506 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.734873773 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.297348324 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.294826606 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.286325019 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.286637019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.306381349 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.297857608 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.296678087 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.296495876 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.294587347 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.28754691 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.298293856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.297051289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.305808095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.296670438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.287729871 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.298657022 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.261387631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.306202421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.299451198 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.262175831 seconds)
  done (took 32.667491802 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.461351971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.332326039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.413506804 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.313143224 seconds)
  done (took 6.71098636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.313460397 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.31627398 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.32663254 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.364555803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.391991363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.32497679 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.284508123 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.283905982 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.270054953 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.316262618 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.391089589 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.330953637 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.397781166 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.262421422 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.450152958 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.262113587 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.262808014 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.314848541 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.367000605 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.396913958 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.261928864 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.312987308 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.316322547 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.331753106 seconds)
  done (took 33.043277987 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.261553856 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.267759485 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.265573901 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.260265309 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.259381568 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.260446039 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.266338797 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.261345627 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.281225766 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.260161875 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.259254809 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.260851517 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.260105772 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.261458477 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.261233149 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.273073609 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.274448964 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.26126034 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.263470101 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.266988632 seconds)
  done (took 26.477513874 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.254187462 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.106694203 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.604988053 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.509558021 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.255645403 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.253888824 seconds)
  done (took 27.175530963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.329820323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.457322083 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.261203026 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.607792667 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.684254048 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.261725124 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.262308223 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.497384724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.791999435 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.803074279 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.315595859 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.32625247 seconds)
  done (took 18.790610948 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.254500782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.259260196 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.260255406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276547119 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.313212811 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.265603314 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.268460596 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.255222721 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.319342017 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.319001277 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.266384657 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.315892082 seconds)
  done (took 36.565712363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344332057 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302744652 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.251144776 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998580457 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975891072 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.469771492 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.03012691 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676618118 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.262313919 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531537087 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257936715 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352861255 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514141133 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27187543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26311725 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.234355684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489636658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750409989 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265445678 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.150014131 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28907082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261425198 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.255187607 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.292626512 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.470941036 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236925828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.519413949 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034502798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539119216 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270090617 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270499414 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260311415 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53433391 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909525249 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355625229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270165939 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.960471668 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.890488162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.250348742 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.166445218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.121916351 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267835391 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27075236 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260645741 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194502394 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268224618 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691252527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.266177083 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.97299217 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.260598462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271143461 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356656751 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.265160239 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251085431 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301871807 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267347353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25839998 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267492981 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829526912 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644778654 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275330016 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.201538164 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642359368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.254514504 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882120654 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363643352 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.265307133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265626404 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196448601 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.239570605 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28200365 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40924777 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.287568814 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911982829 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949939754 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.27765684 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192030914 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810631133 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276133345 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.201685563 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491565418 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041142307 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199106927 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.206692282 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19647433 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978212289 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271570588 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.652652835 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270205007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.682809522 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274216194 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282398414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287404389 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486783532 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.14818621 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263650922 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.213126738 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404037228 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285213352 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684469099 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199616371 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.268247447 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518806671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.475113517 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275077363 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.254401119 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455927526 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265239316 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.282509753 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274040509 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.27895495 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.826691209 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276009945 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651495573 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285061199 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.042541232 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016527089 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276235213 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.370361241 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276908292 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513145861 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.042415144 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424994328 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332969132 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270086382 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265747525 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283691879 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11993526 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.162285794 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.268555819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2785284 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.280879902 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.266402277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21424377 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.264347213 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282189792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.049857712 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489013335 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27386623 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546464668 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201670626 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413137252 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27608145 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.489285309 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.444841956 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.269624355 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528486439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281200589 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271274454 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283346456 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285356431 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363040438 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288403524 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279948099 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528034514 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271026901 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.271200573 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.289171017 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.049847309 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267064755 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.273533613 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.106507595 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837249453 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246800948 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270915257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15530576 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.280929795 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335133436 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274047938 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277431058 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.049625523 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.088799847 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.273686875 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.270571696 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496011556 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277699011 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.278053123 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353362951 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.457362668 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.84420264 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282204401 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.201974721 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.978662874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.961222994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267712016 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457498821 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269326656 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278422882 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279310859 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.790558976 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.836400046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270868069 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.202594101 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.279359606 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279257691 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.273197999 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269394478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.027960852 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.680259248 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279322368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.284861964 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412582947 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.283007829 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203471736 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.7861675 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274621502 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270361455 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.04525892 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303933595 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.192883881 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741687288 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52959848 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.959532393 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281590564 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.300164173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.304248017 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.269596168 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216341487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289563722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.287844338 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284681514 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.281463879 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.261720829 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.712307994 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836538288 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968626645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799517902 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185546302 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.271965367 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175773964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695437826 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205101472 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927339712 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45906595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695250488 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216261872 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462129372 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.461803432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027485295 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285746977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501769639 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178707687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.271659462 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296375511 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482504346 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306460172 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272266855 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204756327 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.55640186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496806625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242441991 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352416856 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698035975 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273526691 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.050386864 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.270420456 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.621638018 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444456707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818945871 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659085966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277663425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288755449 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736324862 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277316354 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.797381859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879366542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276139121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469423119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209940234 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.283392568 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.283848883 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274030675 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.54415572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.271204566 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.527964968 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284846119 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207510446 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28127449 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796779312 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1278675 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.279839469 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27331903 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036925094 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27718442 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558749144 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.27786552 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.032914949 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276453059 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.209213112 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208823664 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.966401492 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275126941 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250032689 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782939548 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.644106774 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266939964 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305863951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121274988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53010008 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.288198913 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850530328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505202444 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.074006916 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297801943 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374821203 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271950641 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.279789638 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.155739987 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511448971 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102723765 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500279886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.277909902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.184664847 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273506342 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487082856 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170721795 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286830659 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519052086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.985744159 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.279625984 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983539418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301057578 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279535039 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291420736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658278401 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282795526 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346638786 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286039928 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.287046853 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287053924 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441304996 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288197434 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28255455 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.290689001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369841279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702512781 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.043247026 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.049553249 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863599201 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997762334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850569214 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288690882 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276127101 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276551814 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210040006 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426172916 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.802911523 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549963909 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406640239 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.727014406 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299937329 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288610412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292107753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493460405 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552822984 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.148133788 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281857886 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969889758 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.436325661 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288071098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.489487086 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790775194 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85186539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395996312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278272117 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.705791167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553819803 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369416152 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277480829 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869929798 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.292080918 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.659144096 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.288757025 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279404248 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445157017 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289290114 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937050859 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.288474994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.438888707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.051566083 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.325506539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538903585 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.75027102 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.289801699 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858183769 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970085759 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548246401 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349576193 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290082919 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.383330462 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425273169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.286614391 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.181379545 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280323733 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123337831 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.98956725 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.289611002 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857590784 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543870884 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.277135385 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.276600603 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308039668 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.289876644 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504033248 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003013322 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50446955 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290135512 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281458192 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.850192451 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857810058 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293932199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2156264 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284677344 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517712112 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516958097 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306239687 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.733838963 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.991942832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837937071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.253302279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301964849 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280716998 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986680193 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86189691 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.040856492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786431829 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943021641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285977236 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559740084 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.285920838 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287509622 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557046449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.285222982 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290198931 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296999153 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.858952386 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043299203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.281839324 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.261873211 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.222694456 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.507372047 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921773071 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217588119 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283687107 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.46373176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283160921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412780441 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294939927 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.283153528 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288507571 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.042309602 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556213606 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.28910269 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.27535684 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.279628287 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294228602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294367239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511258985 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292686478 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.958404396 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.631928069 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536760446 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282459955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.273893705 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.287542342 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28318819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000781286 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253650743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.823157212 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855923705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.286190116 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.29956227 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287422121 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.50032783 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496196883 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291736738 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295593179 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28426494 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30436094 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.188743956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050536675 seconds)
  done (took 1553.808404735 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.29984029 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.295912655 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.329324214 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.298578879 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.333992806 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369857741 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.332365627 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397234975 seconds)
  done (took 51.873733945 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.292521906 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.441042073 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.313877401 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.28847786 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.297057436 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.294962786 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.744551921 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.282671312 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.292800172 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.29295079 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.286593477 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.284643476 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.942429276 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294356827 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.29318362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.28635558 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.298360634 seconds)
  done (took 64.451520332 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.286713158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.82777975 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.389944459 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.289242047 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.183034596 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.303241321 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.02250279 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.334843996 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.287987251 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.516674524 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.942922114 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.324198635 seconds)
  done (took 83.92854788 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293860378 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.292129213 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.293281784 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.292683803 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.292135915 seconds)
  done (took 7.68364045 seconds)
done (took 1970.577649144 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.53195955 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.971188206 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941281489 seconds)
  done (took 5.131783614 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.435787441 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.485346948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.606483521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.612232484 seconds)
  done (took 7.36289638 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.56424866 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.671871223 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.479007938 seconds)
  done (took 5.937934385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.700877047 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.290950527 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.412432683 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.289977464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.294698468 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.294345824 seconds)
  done (took 20.103091009 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.294038639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.296758393 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.294276285 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.29616647 seconds)
  done (took 6.405913845 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.275393993 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.984984865 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.279158435 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.293312166 seconds)
  done (took 18.055815323 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.039901009 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.051687022 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.038378626 seconds)
  done (took 7.353849332 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.290208707 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.137149578 seconds)
  done (took 9.649212232 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.593116761 seconds)
  done (took 2.816814652 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.424617961 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.62028024 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.340311222 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.270420007 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.341675999 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.088447797 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.915687775 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.495087411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.261059056 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.437898497 seconds)
  done (took 27.420056114 seconds)
done (took 123.392425907 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.059912837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.533398487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.534601013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.03127088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.523451503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.495362106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.502574091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.002189849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.542399895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.533581442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.035680459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.521861873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.662495841 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.290934123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.660056033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.538690339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.629864635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.098290312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.720783972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.952253973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.503150999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.672151084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.864462556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.690488992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.540971266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.448037212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.251034321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.539479036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.893754781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.266626593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.47583711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.12817095 seconds)
  done (took 191.36932051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.29160349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291849652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29310258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.29094961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.302539382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291140287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.306164602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291215284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32405019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.292652248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291835781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.291846136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.293466117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292401305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.292851383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.292507408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.292348907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.29169849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.305363665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.311682821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292572858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.320215791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.293211186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.293323825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.306034606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.292601783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.296914261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291880901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293203097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.304850124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.292694878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.292602353 seconds)
  done (took 202.729081725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.294336792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.306854865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.306238372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.297449791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.306755826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.294538701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.296495128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.293367727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.307835938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.292844731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.307526969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.302225573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.293019835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.308104102 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.297315756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308345941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.293806106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.301090449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.293716003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.307536979 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.29523077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.308554467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.293340817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29371575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.294375827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.294052014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.294360583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.295178338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.316136473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.294377901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.296724799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294426121 seconds)
  done (took 202.811836427 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.490823212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.302852018 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.30348285 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.234403029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.302629363 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.302125211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.301294682 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.500623025 seconds)
  done (took 13.966929829 seconds)
done (took 612.101279788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.584345155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.301225661 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.50349028 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325358577 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.074113491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.323742343 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.324751813 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.491583748 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.229880454 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.497436617 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.552754627 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.320839337 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692379416 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.322309823 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.573202173 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419871524 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.206988098 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.329392202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.638236791 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.859293944 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.587458084 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.806871152 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.495062456 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.233419324 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.703894138 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.805579494 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.032148902 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.210311281 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.324320509 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.640127857 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.928599778 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.291529749 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.385164949 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.362267999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.417385151 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.399519991 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.261240109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.364745074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.506640142 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.55341055 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.843962374 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.045494558 seconds)
  done (took 90.001196303 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.293705926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.2924048 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.295068073 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.293589249 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.29468641 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.293191897 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.293753697 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.29214321 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.292825068 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.291585059 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.292940781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.295549458 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.293524445 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.29431309 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.295196615 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.293169103 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.293881267 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.296388438 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.293361467 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.293050264 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.293256076 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.292914453 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.295032655 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.293318218 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.293984344 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.293244553 seconds)
  done (took 34.869302231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.30800167 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.558773878 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.713334128 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312580733 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.306401538 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.3108491 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.382717659 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.308509147 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.310481701 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.309358204 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.474742343 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.311811707 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.349015442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.738436689 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309984917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.308344112 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.308100099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.306361526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.566233755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.316431113 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.385576108 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.30917283 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.383088383 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.317922161 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.311383846 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308000657 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.311994826 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.838503402 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.30954324 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.474856354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.092076421 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.386599074 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.819811398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.727575595 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.095839254 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315340765 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.309453601 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.479801745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.310782356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.308381582 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.384186705 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.308960409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.727737495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.947319333 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.324912535 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.308985698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.857776572 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.479746877 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.559520329 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321883163 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.749374787 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.316750905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.312479564 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.310498114 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.550954859 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.32105274 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.309067926 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.891841708 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.334957949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.386037123 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.316556859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.30907014 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.576068976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.314696276 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.564679688 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.316744053 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.320044218 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.311799115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.728903265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.31838666 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.96600649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.332233788 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.310316711 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.477791685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.566367135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897106366 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.318147976 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.580341003 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840662983 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.391080767 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.319573923 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.827254511 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.389641704 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.319566001 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.315070773 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.313992982 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.312085918 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.356673889 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.384864189 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.890125251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956530971 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.902048348 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.404753146 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.318391238 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.311731382 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.888405808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.329109132 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.312384596 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.723042688 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966089346 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.331706716 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.320284938 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.946062947 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.32960904 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.388129476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.317045619 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.735807452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.317173519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.358643972 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.313921122 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.324856599 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.316021383 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.389596508 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.317444075 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.312868338 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.936129205 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.501951988 seconds)
  done (took 173.303338153 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.310032972 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.306766678 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.310948993 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.307312167 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.306573969 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.317584761 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.308504294 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.306836998 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.311298223 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.306469718 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.307186635 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.308852306 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.309467675 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.313058281 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.317299386 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.315244557 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.916852802 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.307419961 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.306512316 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.305842121 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.101123981 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.315322564 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.307504378 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.307179094 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.308841876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.310391735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.315657521 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.311025349 seconds)
  done (took 151.317848415 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.314674704 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.866585911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.316042662 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.443734472 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.340108869 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.313465098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.441868625 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.376446027 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.315545315 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.313467761 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.313566284 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.610384933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.316137135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.818405008 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.501982488 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.444576881 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.826323395 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.317952204 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.314350082 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.313704571 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.446673174 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.323491968 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.616310401 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.882274976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.32228598 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.879877021 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310297512 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.316872096 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.314807355 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.88166634 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.319314563 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.617679639 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.397052337 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.377637739 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.881319745 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.827058816 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.827668467 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.459849545 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.320665461 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.315695451 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.315308626 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.305113365 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.879421465 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.322747124 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.316272381 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.874193805 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.338156055 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.318242438 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.325921542 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.315476524 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.374325722 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.375641233 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.620035875 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.891971972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.397915092 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.341966224 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.445838882 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.710482066 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.31952981 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.821610826 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.30494788 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.883194195 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.325288837 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.30484501 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.316984937 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.322173742 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.463541477 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.451824244 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.82822881 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.317321529 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.822543296 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.465330729 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.322133391 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.3169645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.319203651 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.885095324 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.830134897 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.464850833 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.453420857 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.512583548 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.307024689 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.316169902 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.306861635 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.392792232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.32107518 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.887900887 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.827239036 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.320133446 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.319330205 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.319174701 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.320028496 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.492441699 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.889103217 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.398996031 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.824687901 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.642643357 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.629303972 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.326713071 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.376529427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.319387407 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.625271867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.325244308 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.374999587 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.771722318 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.626166989 seconds)
  done (took 157.48428174 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.558192565 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.495086472 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.407197459 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.430982207 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.921582722 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.892996817 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.570063684 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.44438923 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.425318992 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.558867878 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.46651368 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.414025601 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.485456017 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.401397913 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.029930826 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.385213455 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.409817065 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.441810626 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.413722488 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.322833574 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.94161143 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.608840445 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.493851939 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.220611934 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.415824003 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.058499018 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.863786877 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.852893709 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.497531886 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.591730904 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.859387608 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.424180877 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.273706575 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.986245341 seconds)
  done (took 63.810841838 seconds)
done (took 672.014219467 seconds)
SAVING RESULT...
DONE!
