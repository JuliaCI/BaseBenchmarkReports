cset: moving following pidspec: 23178
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.322900076 seconds)
loading group "string"... done (took 0.476567294 seconds)
loading group "linalg"... done (took 7.927182587 seconds)
loading group "parallel"... done (took 0.174655186 seconds)
loading group "find"... done (took 1.2759462 seconds)
loading group "tuple"... done (took 1.98036904 seconds)
loading group "dates"... done (took 1.341747928 seconds)
loading group "micro"... done (took 0.247963702 seconds)
loading group "io"... done (took 0.670716937 seconds)
loading group "scalar"... done (took 42.405866053 seconds)
loading group "sparse"... done (took 13.119761283 seconds)
loading group "broadcast"... done (took 1.159271406 seconds)
loading group "union"... done (took 14.482862786 seconds)
loading group "simd"... done (took 5.16914759 seconds)
loading group "random"... done (took 10.349567315 seconds)
loading group "problem"... done (took 2.051572395 seconds)
loading group "array"... done (took 24.278112244 seconds)
loading group "misc"... done (took 1.504813383 seconds)
loading group "sort"... done (took 3.834173437 seconds)
loading group "collection"... done (took 20.650464801 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537136415 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141710871 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152788185 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133253559 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205824466 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155469355 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146600546 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116636295 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926761683 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187826537 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157206028 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518633917 seconds)
done (took 5.080708233 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221191549 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094015129 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105836109 seconds)
  done (took 0.841764018 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079736691 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146031451 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095160855 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.081130472 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096964161 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098324584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081457284 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095338347 seconds)
  done (took 1.346000539 seconds)
done (took 3.146919736 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727901101 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281838761 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203704447 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471663269 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195701403 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218080939 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6814113 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.383288591 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.259140171 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101827709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147225221 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395391951 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138604504 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689006356 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089361457 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125127577 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177253557 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461161258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085089901 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112513707 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117266608 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142871811 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12861414 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093567233 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186833183 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084485467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198673244 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108214379 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080387247 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294016597 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203507001 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687034815 seconds)
  done (took 10.954351822 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1113091 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136358968 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100284127 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141466747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137011479 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101397242 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087187574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099093505 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125669227 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178715059 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136063268 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12368495 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096107411 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101889504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101412313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248278977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124719074 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122339389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086969385 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107685465 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124043747 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115992748 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112811077 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111677839 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167517529 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208483678 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113519657 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126510751 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096763088 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115078711 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144849427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145587153 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09829184 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082691587 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175885193 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126701927 seconds)
  done (took 5.195431882 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193507236 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12457847 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172381414 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168640488 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14363503 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164312498 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115015342 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250489867 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12974944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178745887 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142876993 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104180191 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100141861 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083939509 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09860212 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.603359509 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166054044 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138387194 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099234461 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108223446 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102519743 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367675301 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089395186 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099196098 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084640738 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083767069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16497628 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084382938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.17499558 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10334859 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103351519 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135571125 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196736778 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126852099 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120536482 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098445028 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098242807 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182086998 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08996858 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098401026 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106436481 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138049294 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135185729 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099867859 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097101106 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208525384 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082215865 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11418899 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960581384 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178046503 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140973068 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081026732 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331937233 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118124917 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081757623 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124524322 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079827984 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266443194 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137005749 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08337053 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098074524 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081249588 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100922592 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.418303257 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085048958 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724008822 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083889136 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109246507 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083441625 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097341084 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107099054 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088906046 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116745632 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081406561 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101229178 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081935929 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097972012 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10062471 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093583744 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103129283 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082710529 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096506835 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162544947 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080627758 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116135785 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126560848 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08602433 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098018877 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129618749 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08473165 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102391398 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118391194 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100338392 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110887034 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097886296 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129285146 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093272029 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170487019 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080029045 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094883786 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110616704 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101201286 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094084036 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130881923 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096917461 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100634497 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087609915 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096136408 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07945707 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164681615 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080778975 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097328767 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10209174 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09513541 seconds)
  done (took 22.713347702 seconds)
done (took 39.510166991 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.335011723 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104527714 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104781782 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104428413 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102656301 seconds)
  done (took 1.470333682 seconds)
done (took 2.169567255 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28390332 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17505263 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096065696 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171560161 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094801689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179409831 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163004658 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112635627 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186891547 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094528866 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17043845 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079646184 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095142822 seconds)
  done (took 2.621586331 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094396807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117945303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084633777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113397031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078859854 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11361208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111333736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102925037 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111434414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086784237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094967755 seconds)
  done (took 1.807512294 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094173918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115535401 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08475529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112638757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078227573 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113192941 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094644202 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118555345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112555834 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086919798 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095687686 seconds)
  done (took 1.799671324 seconds)
done (took 6.916002606 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090841176 seconds)
  done (took 0.780484499 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.008843124 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.729201059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115654277 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15552435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.312987664 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205151587 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.558119286 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130809779 seconds)
  done (took 15.120582588 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.147756741 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08865205 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104246707 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088477508 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101592218 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.1011209 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086879161 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102841629 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086511151 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099589731 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101946329 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085402941 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100721785 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086909321 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100032888 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100760854 seconds)
  done (took 2.340947123 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121917788 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120116709 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107690468 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11012202 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10678635 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089469612 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107846709 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106240066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088554649 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105043652 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108596597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092783252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104533542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097300669 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091352937 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109002608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103795919 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091891156 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108406182 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107314408 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093184048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096633217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105123307 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092762925 seconds)
  done (took 3.266832794 seconds)
done (took 22.20461884 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160849582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111110079 seconds)
  done (took 0.971771774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096810378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113543859 seconds)
  done (took 0.913197976 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098919876 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096061546 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123535254 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110686601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082512955 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097364319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12126459 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0828452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097384937 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097733989 seconds)
  done (took 1.714214119 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082510711 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109944503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103655777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09709999 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107276529 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09639385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090536508 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099273186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111804267 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079248084 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102785118 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115384788 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087594796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11713706 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105534454 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10144314 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08868523 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098888842 seconds)
  done (took 2.502130078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080387026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098653595 seconds)
  done (took 0.887934447 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081249187 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094310638 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083451872 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097633664 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095251258 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078651469 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095040453 seconds)
  done (took 1.334036997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479060599 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13736536 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257731705 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102815997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123392124 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31101602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099567342 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104494094 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087424009 seconds)
  done (took 2.45168463 seconds)
done (took 11.483213449 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093623339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11774292 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115248293 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470966783 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124552737 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082713202 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160791552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25298 seconds)
done (took 2.131876548 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149250463 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323727338 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115922829 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068400647 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098057141 seconds)
  done (took 1.323856631 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080295195 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100517695 seconds)
  done (took 0.896027507 seconds)
done (took 3.081698695 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080591065 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097571217 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080040853 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096938731 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079907309 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095136108 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130614455 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082034837 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099192403 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082193108 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09892113 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082057669 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096637528 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079192727 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095394289 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079194116 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09777146 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082460679 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095373472 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07993712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095535142 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082901576 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09478325 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079669896 seconds)
  done (took 2.912272185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101047923 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099949365 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103880881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089198972 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102813437 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103871936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088997702 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098564733 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088220707 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099581225 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102089183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086772421 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101435762 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.1026433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084367026 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102245114 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087697776 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097875279 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100476384 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087086546 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103588533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081992678 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10219387 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103039673 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086749774 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10290706 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100793635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082480776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103634756 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08638899 seconds)
  done (took 3.601817916 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086670657 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093768288 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081030545 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102376253 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079767907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097775831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079963401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096770255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080857152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095835637 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080997004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095840298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079802452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097875091 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097264553 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083673197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109007308 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081215988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096031432 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080779236 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099710089 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080217781 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096996569 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080135889 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095587794 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079456942 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096025141 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095857734 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08111668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09537676 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083100569 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099464069 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0806587 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102230536 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083973948 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095388854 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084877874 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095558604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081789289 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095495065 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079974066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095580548 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079785987 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102161132 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095343256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082470304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09650166 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082184951 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097076141 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084206404 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095670709 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080211564 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098044948 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080875877 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099600835 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079603332 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097503544 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095004516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081799237 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096449659 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080167854 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096391099 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083196633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.096557096 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096055679 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1034933 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080279313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098650169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081293855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098109696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097917756 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095460611 seconds)
  done (took 7.230416993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084799156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106701922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083137538 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097904949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078918224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097095661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099923807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08101355 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097683832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087110265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096899282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098374524 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0830958 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109751459 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082195833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098146019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088190277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095328165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096455449 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084129586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096622252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084777328 seconds)
  done (took 2.753845059 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212014306 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106135419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143307736 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109281972 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085657314 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107461165 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104092898 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090520337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10399515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086210612 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103512303 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104801691 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085418627 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101957513 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102210994 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087983478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103623586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103820369 seconds)
  done (took 2.669060068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094728642 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099850933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.121844698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084457626 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100495056 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086541338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104992754 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110353569 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086338938 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099495121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111085303 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08642296 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10260908 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08391389 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102338233 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084730512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102853477 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099792418 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093628913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106763892 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105798094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094069728 seconds)
  done (took 2.887886879 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098699225 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101258038 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11991209 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087201538 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096178823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082892357 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106544439 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083522413 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108641873 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101735166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083232792 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09887114 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090574713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100448502 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105516796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08371557 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101638461 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084838729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100900445 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095438127 seconds)
  done (took 2.664297239 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104635026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102062614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100860181 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095343645 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10102513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101315046 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094857949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10089572 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101805336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110151502 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101104762 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101263179 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096017361 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106175214 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100731283 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094529462 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110897872 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110747219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100469734 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085360354 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126988532 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.214174414 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094330404 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101402389 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101817603 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085946676 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101048083 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107022777 seconds)
  done (took 3.684857224 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082906659 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100234979 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082132674 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097782833 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080958061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097997133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081664725 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096676553 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082904984 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097318341 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083588873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100431775 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083598635 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09973137 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083793316 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099847207 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086390218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09736806 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081813966 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097528632 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083503423 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099902662 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099877534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081917045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097355712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083582937 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097237137 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081401634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099271788 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080963048 seconds)
  done (took 3.453878477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092311923 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107140068 seconds)
  done (took 0.937647689 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079711758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116596741 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081112166 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104464696 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106011866 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084317762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109229483 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089130851 seconds)
  done (took 1.50679698 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096639091 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112446965 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085742757 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114240559 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111212404 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098203027 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163309303 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101694779 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090161084 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09893695 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115369796 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083304441 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106533955 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083955889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106728351 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0900648 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098491467 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107635182 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086740053 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098853719 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086385812 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111932426 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102436993 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080924574 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102370575 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094877708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110053526 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102671658 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088576994 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109736041 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090265424 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094520857 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084855975 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10160022 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099788126 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093428626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114965542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087568362 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109627193 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10222004 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09684211 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095963838 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106310409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091298966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111930647 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08512047 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103295206 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079527324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098937277 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086234953 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09685007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100905368 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079037022 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108208548 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088583066 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114276719 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100170935 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086576099 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104233768 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088143329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107465106 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08671423 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10415455 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101180051 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092185902 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104595995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092199641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096769865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078713661 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099755741 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109662565 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108173697 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109922254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085880888 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102685222 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098934367 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087468079 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103293564 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091234042 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109047547 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102071113 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092064889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108731194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083841739 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104762239 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110186227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082737185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103276433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082310677 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116488962 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100344771 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082884888 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098445559 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093646838 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104716903 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084833962 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10029747 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111646546 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078790204 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102844674 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086834952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103015429 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110839413 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091129159 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108820054 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092149614 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109748841 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101655111 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088539037 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098071226 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086249675 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104097884 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091315135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095443134 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104115209 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08686623 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102927499 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09232818 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099582025 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084987266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1102584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107892459 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083278001 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098737433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087728372 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101455999 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105911409 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09252497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100104584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08042973 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098119336 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089061932 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101930816 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.1071958 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091533806 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104682548 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08032609 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099732698 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090416573 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109990732 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102691975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085411654 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10668172 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084984675 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100578507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107179751 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086975937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101021316 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089068633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103545443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080392763 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106115148 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104687301 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083845658 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104750209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089864821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103989344 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086380308 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101152949 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108078167 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086417954 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101064022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08538372 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100066711 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09486836 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104720729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097106325 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082912379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111198363 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083677054 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102323967 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084638621 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105011048 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10255584 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083840071 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102055712 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086508152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115715224 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107762822 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086599681 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10822716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094124342 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10165996 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086825497 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102110778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104400124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086560394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109263957 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090954851 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10847819 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105386149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081825677 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1083647 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092930957 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101776185 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082849617 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102016408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106258111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09328329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106219596 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086569283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101887571 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10268128 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089175368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104699335 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085549451 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101113791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108065953 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084682392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109345498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086980171 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111562298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105610286 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081013668 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107058335 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084186578 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108336251 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081573438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101007932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084697192 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102993992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101919818 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088904726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095857831 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092148814 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11132872 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086087765 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101655515 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10356753 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095216555 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104330797 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08914307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106393373 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090923473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116783551 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10233123 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088465798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113031475 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085662432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097645458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108262582 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084200853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102995344 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085666098 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100775096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088477238 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113109143 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108042942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080085574 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104606862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084510655 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101221731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081046451 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109439949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105836149 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087240008 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111356185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087186087 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104455569 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105933899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085540052 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104316636 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087574789 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106283776 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087363365 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105750367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101498589 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088586932 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101303463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083706299 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103771811 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086270579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103457318 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108445715 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088845688 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103345049 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089236526 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104195502 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086548414 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10332462 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085736335 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10707779 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10373213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086536464 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105536705 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081777203 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11028354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085947803 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111039068 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104318907 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082808533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109556761 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088362099 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109343497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105177677 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088544666 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105090307 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085980431 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105766049 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09418823 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102272704 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112351531 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091947701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103647802 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088414115 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10388285 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087884324 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102852582 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104970702 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08783139 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103933334 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08610992 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109210102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08878808 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102924457 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105135114 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087532734 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102511867 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087790987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097500281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085465255 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103003581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086971011 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111341482 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105215461 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089184424 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102319956 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08721627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102837616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082626019 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111711728 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11367789 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087832038 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111045237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101966366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087819971 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112550712 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080125856 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102349843 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08472381 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101470164 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110708388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087827111 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.1120458 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085704434 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103187605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083411521 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104773305 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085147319 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098172535 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101502099 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089655353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105756387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08475004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105227149 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089778822 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105500106 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111287583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086720195 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105624043 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086737767 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101256111 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084659047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102507521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089219795 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105531978 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100997466 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084260099 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103853946 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097377294 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104352017 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085766222 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105356895 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092986745 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104828113 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106883858 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090968182 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098973468 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089309912 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103715137 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085870931 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104013119 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108092336 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090525204 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105838087 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093049393 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103736197 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086584328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104964663 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102686716 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087018339 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104780947 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087534122 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103700551 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087943779 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112899406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102924472 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089817395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103985725 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086438009 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109502087 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087641086 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107259115 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112951316 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090201711 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105864959 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093391153 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108974692 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108602244 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088402301 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105355571 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092294547 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103650854 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113088102 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087086195 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105754226 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087540121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10234089 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086189907 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104599219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08525084 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109790387 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106589038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085412533 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103396938 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085113757 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105097459 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090929109 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111661341 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106886954 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088931073 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099825519 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084085736 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107003633 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084538773 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106073034 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107227529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093592495 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106855887 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0866463 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103888547 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094205423 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111310305 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109291538 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084511719 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109575358 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088678995 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107583286 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087153085 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104660549 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105739931 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092045074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106378502 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086171921 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113094898 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10934981 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088369722 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107384394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087152552 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105275003 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082293848 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106309092 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088106158 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111941292 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107476856 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086988024 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114347777 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086463212 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10560555 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110448218 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086425082 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111796652 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081930417 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105735657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088592672 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106615512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100358487 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085615422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102666272 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088639258 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104471729 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082206824 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114513087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112345707 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089929502 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105021461 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085168874 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101147046 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082660785 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104467532 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089645331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107977169 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114326883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085988738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105591709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082579236 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105935092 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089968399 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110182279 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083503138 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101449923 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10465744 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090013259 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111887069 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085439924 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105451966 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090033039 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.1084393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103392754 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092411322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102100789 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091401487 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116846355 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107514584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088054354 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11102605 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095002487 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10788459 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083797269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107665835 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108726242 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08768013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107478166 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088660429 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120690738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110267666 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0866754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10527703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08990529 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107022346 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094663101 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108552692 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107233114 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092284936 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10784071 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097407939 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10902135 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112520457 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089522151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109140768 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086115881 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106292195 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085560873 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105401931 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089820204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108692918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112235206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096744921 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106252722 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116149859 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095069089 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111379143 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083859665 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10590364 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087407665 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101761345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088162272 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105500642 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105286015 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08616599 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106509648 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088498673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112183412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088906834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108097547 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106795225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082423164 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107883892 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091025836 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106989294 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08462279 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107266327 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088090215 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112998115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114548551 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089083568 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109105576 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088949336 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107415801 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083581334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11336975 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086846093 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109978636 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106631532 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088393823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10871823 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09107349 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113171034 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108508184 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089898836 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119084687 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091056732 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105726205 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084342163 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112576706 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105641622 seconds)
  done (took 59.353032047 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149390077 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085201909 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102291051 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083106603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117852978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104467242 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083297267 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104736656 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084727786 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10574606 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082581136 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10259138 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11287229 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128717203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098146717 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107432834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102838497 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084024987 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102674018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085029457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11272823 seconds)
  done (took 2.927023438 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1054572 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120840637 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118637447 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123995832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093690197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119966008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119634487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118844355 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103680371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115401453 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122805119 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120378785 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09522827 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114245467 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114440921 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09826598 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122772401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113322129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120178044 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099840272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117718307 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119977701 seconds)
  done (took 3.287070684 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085433038 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105492323 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089105565 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101509301 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087131009 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102437368 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092384002 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105145421 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110967276 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086592389 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105460199 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0862038 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107994884 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082808588 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107240555 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085424682 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158385575 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112139339 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107838325 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08955807 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102259775 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089739817 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102805315 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083005599 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106399939 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091485897 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108617087 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.10508769 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087670522 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.106242324 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087655888 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104727248 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088414864 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108744546 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086979029 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106509898 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087563109 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107684595 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082263168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105707993 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107980172 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083256307 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107658004 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089059666 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.105885105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086385386 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108943402 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087701738 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102581282 seconds)
  done (took 5.628411299 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106462343 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167542702 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089745371 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148511982 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126160623 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117413444 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091777022 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126701423 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107205806 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087283488 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12814704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124878187 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107979335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093315292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111912327 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107683365 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090664551 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10724351 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113348486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087776962 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112904805 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114800389 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104586617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121457557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112411779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086954458 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107648875 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113286904 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.121931792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093677916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114069901 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115548851 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104659784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110110825 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106640733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090851603 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126982472 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108530167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090784073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106092446 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110843825 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093826828 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115266853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1263107 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089701744 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113075771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108417817 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085638688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122172799 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111630521 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098026073 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124125294 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113749484 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108343142 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093605794 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125850065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108709402 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087115676 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111828193 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121237912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086496591 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113374982 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123674078 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09124331 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116886116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125422224 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112622302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09318038 seconds)
  done (took 8.393590578 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094810144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115832917 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125776402 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125516541 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09566453 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11546863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11540421 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11543547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096290884 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121575172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116561257 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140124004 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090596179 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11959729 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116342774 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096293259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116907753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115997273 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115780814 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097037788 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116662312 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125635281 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114977308 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106678718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147593867 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111172726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115329321 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09646192 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125620832 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117218783 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129031236 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115665791 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095904244 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125313008 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129721804 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115660166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088021746 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11511796 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116376649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095885126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111292872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126050192 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115825869 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089896424 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115988644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117196374 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107055855 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12770806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121015908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122455291 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116187104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106811501 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115579522 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116788827 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125844751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152981493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126305615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106231239 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116340376 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126741822 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126536989 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134736252 seconds)
  done (took 7.97887971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109494634 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119959115 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122544107 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104699255 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087280418 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11367738 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087044846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107551032 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118563413 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099691741 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122011319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114284171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116713371 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102599794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112844727 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117806168 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113150327 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094822757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118770544 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113144658 seconds)
  done (took 2.998130619 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093864553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127250109 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090142432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117038886 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.112443584 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096551953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111613372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111779264 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090298476 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112609751 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120728253 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100815407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109797155 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116667511 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100584725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115833689 seconds)
  done (took 2.531838477 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098608853 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12221435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12526707 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088473312 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107739504 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106680743 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089649445 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105596071 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085058653 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126777165 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110128939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091934465 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109393752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087380739 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105894005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093325669 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106698744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.107291979 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089417907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125856073 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121574899 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088644209 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110433715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090893017 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109916966 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116246652 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089078326 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107738905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087869918 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108733708 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109538712 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097591198 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106203752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087834496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108717684 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107369054 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089586701 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109517955 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093285586 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109732138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087148969 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109976255 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109532713 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.090743873 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106040387 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09117251 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106121238 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116132846 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08846494 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110333027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089674898 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1124195 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111347071 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101083462 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113573459 seconds)
  done (took 6.483985347 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100968311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113661622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084041117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10861181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092652477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112461029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113770283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092831527 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111406344 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087400966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111180106 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114894304 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092123495 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114028108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091072173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114511311 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084432931 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111494276 seconds)
  done (took 2.660495066 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091480255 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10898967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097204725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110536397 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089310313 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113341579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104913404 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088255909 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108384205 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089229408 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110290922 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090931123 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109613655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092576755 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110652069 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110587668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.092303232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109720952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089639352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105977679 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0927923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109061451 seconds)
  done (took 3.036230521 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119567071 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.13011648 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097247569 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235121618 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108222058 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137252848 seconds)
  done (took 1.639701895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111492182 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124532504 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111324608 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111403327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120972454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113274425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093064003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112621139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123696756 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126726494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092550288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123223354 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123018093 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123127334 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099809428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119925814 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113027799 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092508185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111081966 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1350236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112163276 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102294984 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113218762 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112097704 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092832783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122151511 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123975111 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128741908 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092315427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123343758 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118631278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112827931 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102594599 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126776188 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114716489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124174451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092781708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134420265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119702118 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122899187 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093710323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119598659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123709797 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118934799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103355484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113491656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118904401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092607064 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112734832 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141595158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120645037 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122505315 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09875237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123472679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123459206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142003838 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128260653 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123267221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099176338 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128039917 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123653131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120082467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123189426 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128185402 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099811393 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123826637 seconds)
  done (took 8.45787408 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104576658 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130366675 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114030417 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129086246 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103042704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113533159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112972025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09312391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113711521 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112715439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158823115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092567956 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123606975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123350177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112659742 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092622093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114197372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1231951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090786039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140120589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113537611 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123669059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122323193 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12321482 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108328464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12104467 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113486081 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093577086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113200866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113792876 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119369063 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093896635 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123990089 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111535294 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10289503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114101997 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114651786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119627764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094145845 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119551765 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123876624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135402465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092610524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113491585 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128306179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112944011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092839774 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111936989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092378841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111356863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128771967 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128904902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128274882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102518695 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114412408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114396691 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092768193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113424993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11400251 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121095766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103900849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114129555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141763109 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114175196 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092324408 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123176892 seconds)
  done (took 8.342571479 seconds)
done (took 158.735644148 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098465618 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141199854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101564934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176164281 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108164021 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12569486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139353572 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097443306 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.112718005 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090408055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112696359 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091985743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178653401 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107388324 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091050982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114097376 seconds)
  done (took 2.70285908 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201189801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.265240943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107099615 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.1104949 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117372048 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093399063 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110883342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096484911 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.115396423 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090304747 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11340333 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091386445 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.111520106 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091593387 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115126292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.114583296 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.090275483 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.114563841 seconds)
  done (took 2.97549544 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11361482 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152364846 seconds)
  done (took 1.092346768 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119578269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187039942 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305184408 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.162014584 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125443471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132221328 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16219522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137289572 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206061008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129209067 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128759424 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102538559 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146118027 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122389369 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120124727 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102795941 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149715885 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.119287115 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099597926 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122509555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144315003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091225489 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121721088 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098186734 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188191726 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12676157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111364808 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09079709 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12337124 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120400532 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0970287 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132092416 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.126022625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164628374 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.129206812 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166718708 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124335991 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095630797 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119473299 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117564814 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104452456 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125338512 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131260447 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10232808 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114581036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123528051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090567542 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.111792586 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098739367 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12573636 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120398985 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097440284 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.185302212 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103948618 seconds)
  done (took 7.826787845 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.811905266 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159395604 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095638742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.908757315 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144336762 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109059562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.804950045 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140994205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249338988 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.800115256 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113233523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129479246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239946424 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250030991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.041733889 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3249322 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.686092728 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132321556 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145630538 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162296615 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102378454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143250641 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135583699 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439025653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122741155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096193367 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1224976 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127077579 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170732688 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096669625 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120678727 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189093771 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283626791 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.191724202 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121168415 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116580118 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094449221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180341045 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284512267 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228804304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189917075 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114326461 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09490223 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126640943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137029005 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091600881 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172900271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.206210866 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183995037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120717554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104409493 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12518689 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126246293 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174649029 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128988956 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335454021 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330889557 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094979494 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125723171 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132909569 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257460376 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130220031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239825647 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144617617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225590157 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094575039 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854396172 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180241469 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117642133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102723656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122637779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121818191 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10463809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174333312 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.414586638 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128866476 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119671194 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094957704 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236917661 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096391267 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116366386 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172268596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122470076 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124839071 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107104698 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127917319 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179451073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269028922 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106900255 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125421263 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121926253 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107025576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122061119 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22752761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231623338 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173184882 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.248406763 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106009069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197834378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1787825 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126863641 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182583173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124794982 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132670785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105613119 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230458778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154504825 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.131564822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099607563 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124128689 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155835057 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121780259 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102304041 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.202914324 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.468947477 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.201076671 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092238312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122420773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10244648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193459395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101609733 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280024559 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127582675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178256578 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124303657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092751706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125169169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.174199045 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129561449 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126277016 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10579424 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125339933 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248464574 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230789322 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130971505 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233651453 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19125466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123888343 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182818427 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125329874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178559536 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126392311 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127149326 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100347611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849253657 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131914013 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102528705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122418682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197002332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11878928 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108394442 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.118491516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092430787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859531998 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121512588 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107344711 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.132598541 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124897725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125029625 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100575765 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12238626 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172955081 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245878019 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127862564 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101329761 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.118631124 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17197232 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123142546 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.096164043 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.118741172 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.097170993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125550479 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121814988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109926968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202331329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179096988 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235309093 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.603226929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095265237 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.120023633 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242406212 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096310609 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305069446 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126064623 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238116407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174512427 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.129018287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326796423 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176497828 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195909835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099744745 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205428632 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093399413 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123889041 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175830705 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119220528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1013411 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.194832754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130727071 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107926179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9942378 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114212486 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242281444 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092459275 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.204778607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100879027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127674687 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311115054 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097430255 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134284977 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198040152 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098700771 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119775054 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.859092213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.119987205 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105313913 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124518594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235219223 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174081022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1243716 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124733898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103985092 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.196686114 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224580931 seconds)
  done (took 46.067863733 seconds)
done (took 61.488471538 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278336115 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220693587 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268847923 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177111216 seconds)
  done (took 1.873773485 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171348928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154142387 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124940161 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11246936 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153928378 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090909604 seconds)
  done (took 1.664418386 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.346915903 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266288657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24093445 seconds)
  done (took 1.715393389 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248082678 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270626223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332040632 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42195835 seconds)
  done (took 2.229162753 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202705131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137167794 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118221267 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109794438 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203460652 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242422464 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147422431 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173638732 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1284578 seconds)
  done (took 2.364533997 seconds)
done (took 10.706407251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.296948572 seconds)
    (2/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.260651519 seconds)
    (3/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133143063 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.20398561 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.256832363 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.176761059 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.238863214 seconds)
    (8/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.258031124 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.186994454 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.15559572 seconds)
    (11/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.131016088 seconds)
    (12/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.157432607 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.119850637 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197643049 seconds)
    (15/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107209462 seconds)
    (16/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10964477 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105840769 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143475291 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097287168 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122401706 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.155033916 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254824491 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097412621 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129208986 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17831571 seconds)
    (26/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.15142513 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190363865 seconds)
    (28/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205152315 seconds)
    (29/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.132023835 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191207197 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118990267 seconds)
    (32/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.144936193 seconds)
    (33/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241781281 seconds)
    (34/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.209445415 seconds)
    (35/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093497833 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.229255282 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.232466907 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14279484 seconds)
    (39/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242805447 seconds)
    (40/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103917005 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.251526756 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124781151 seconds)
    (43/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.175582588 seconds)
    (44/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134642366 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.134447524 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185746778 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072431974 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147599373 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.181927479 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091357624 seconds)
    (51/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.160461193 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123486309 seconds)
    (53/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100623446 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.185024787 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099358275 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180004677 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123333491 seconds)
    (58/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.137984786 seconds)
    (59/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.105122049 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118560216 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.112735719 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190113762 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098734241 seconds)
    (64/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.144032747 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109639057 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096299357 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094055943 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095855286 seconds)
    (69/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.116168595 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193013401 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.142191958 seconds)
    (72/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.163886092 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09934885 seconds)
    (74/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.197252788 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092178174 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.169099921 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.129962447 seconds)
    (78/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075883955 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.20850588 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071027815 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.124903264 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093307861 seconds)
    (83/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128279442 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.115916449 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102246312 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140265421 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075244628 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178868383 seconds)
    (89/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.128620094 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072722359 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091544855 seconds)
    (92/286) benchmarking ("sort", BigInt, false)...
    done (took 0.252171676 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167312575 seconds)
    (94/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.10558045 seconds)
    (95/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072029083 seconds)
    (96/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082320334 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.096424275 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098116472 seconds)
    (99/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11749324 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09340279 seconds)
    (101/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.126115877 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165192407 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117955282 seconds)
    (104/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.179334589 seconds)
    (105/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206587756 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182263732 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100646561 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.095800762 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.119756388 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194145625 seconds)
    (111/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071591575 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201638782 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115433385 seconds)
    (114/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096886227 seconds)
    (115/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.127885636 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126691553 seconds)
    (117/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099982056 seconds)
    (118/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.128139736 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071598279 seconds)
    (120/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.165286094 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099531158 seconds)
    (122/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096007762 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.12132389 seconds)
    (124/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.127750702 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.072261676 seconds)
    (126/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115872039 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.188960913 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.102707459 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116178085 seconds)
    (130/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072706429 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12350144 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.140351807 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123043831 seconds)
    (134/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.180497507 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091898377 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096315769 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098173077 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.149055912 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07196179 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123384408 seconds)
    (141/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098774903 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121842069 seconds)
    (143/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.135406388 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124503827 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104116229 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131632347 seconds)
    (147/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119114995 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092165409 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.123884842 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15680466 seconds)
    (151/286) benchmarking ("sort", Float32, false)...
    done (took 0.180627892 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.139219776 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072923014 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09721073 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073343438 seconds)
    (156/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101846946 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131406588 seconds)
    (158/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072920125 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.095400503 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071569952 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.095092606 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101936778 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.193098175 seconds)
    (164/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167603521 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102358561 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.095867856 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157263245 seconds)
    (168/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095801279 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091863532 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122947512 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093151754 seconds)
    (172/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.095965051 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.1040319 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.199651805 seconds)
    (175/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072457809 seconds)
    (176/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19815307 seconds)
    (177/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095851202 seconds)
    (178/286) benchmarking ("sort", Float64, true)...
    done (took 0.24180161 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093058021 seconds)
    (180/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123483732 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166793611 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183403573 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.123536126 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09439157 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.125371222 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092460542 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125027902 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092944243 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127541166 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071766466 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.122633194 seconds)
    (192/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091956883 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163419637 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.146618443 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093249659 seconds)
    (196/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134646753 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072802057 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.233117 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116316563 seconds)
    (200/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098944751 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.124074196 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082221284 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.071563439 seconds)
    (204/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096386025 seconds)
    (205/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094827398 seconds)
    (206/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117418994 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103215593 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127267217 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12501298 seconds)
    (210/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087902208 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107888929 seconds)
    (212/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.105550105 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.105662657 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122318384 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.295570465 seconds)
    (216/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170496306 seconds)
    (217/286) benchmarking ("sort", Float64, false)...
    done (took 0.181548558 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091514402 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116517656 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073009979 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143714618 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.14333415 seconds)
    (223/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.080880498 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0941093 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09579162 seconds)
    (226/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.071746105 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097189199 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092420851 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122987131 seconds)
    (230/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116889853 seconds)
    (231/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173045435 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116029755 seconds)
    (233/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.081261472 seconds)
    (234/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07463993 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098216872 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071380367 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.136300028 seconds)
    (238/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.08061677 seconds)
    (239/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082965634 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115070408 seconds)
    (241/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157112564 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093041883 seconds)
    (243/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145419516 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0993462 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125762899 seconds)
    (246/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096875978 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12937779 seconds)
    (248/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117455831 seconds)
    (249/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.124099471 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 0.2312178 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11706619 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09944512 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072083605 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117932912 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073985972 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118152448 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116420476 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100745943 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122976368 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091148466 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071581789 seconds)
    (262/286) benchmarking ("sort", Float32, true)...
    done (took 0.240502029 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116348888 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.081434752 seconds)
    (265/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115293842 seconds)
    (266/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073931449 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127508201 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092858321 seconds)
    (269/286) benchmarking ("sort", Int8, false)...
    done (took 0.197473965 seconds)
    (270/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09734734 seconds)
    (271/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071947778 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.073203451 seconds)
    (273/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141236628 seconds)
    (274/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09658905 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100226222 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.123751788 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071709701 seconds)
    (278/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095301766 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116600378 seconds)
    (280/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119290226 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118580809 seconds)
    (282/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09662492 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098702406 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116436695 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092443605 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118572681 seconds)
  done (took 37.928322847 seconds)
done (took 38.794533422 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100092159 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151478076 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103098324 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143487306 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131068941 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0968872 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125322854 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.128852043 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10678504 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132128248 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105177051 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098917574 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103341912 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126890915 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.126742439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122886386 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131024969 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.100235273 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.124894948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116708352 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.100661639 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117383021 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094498902 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074835223 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.128915672 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124623541 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098391963 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127856708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092059833 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.117208867 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.098746259 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124157782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092306076 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130959405 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.123873637 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.10027097 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.127103609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102733755 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118789633 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092409782 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.124617838 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092469941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.12418487 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.124834033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098249894 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123463771 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100918846 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130044199 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147449357 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098723761 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.1258219 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10452722 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128128164 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.10016092 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121552611 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101781952 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.122209897 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146964009 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101137115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122756596 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100757238 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125355439 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098454108 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.12609831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126360052 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10418496 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129233131 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097996504 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127415834 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098474867 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.116523838 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126187066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095298632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117014358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101922014 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12715145 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091468234 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.122608813 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098864491 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.121934741 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091901122 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120945624 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094728162 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123229246 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096271461 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099006989 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097603047 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.122574886 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092319635 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12585898 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099179774 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.123760904 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118486362 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104128559 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116626983 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098407704 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11705343 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092772972 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119409684 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09759813 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.117272636 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096293348 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125996166 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095379644 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123873487 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130346642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092462464 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.123745712 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092644875 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116600338 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108698723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.128159809 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094324582 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12403845 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.093183362 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124460606 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093626349 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117557475 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116584338 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09289855 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123799094 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093318304 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120592816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099852701 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132019287 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093002834 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.121514482 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09654468 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.116783663 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098809234 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.117562819 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.093137018 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.119070549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083441817 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122692161 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093012171 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1253691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097642119 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.125976882 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118911579 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102509401 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.123034922 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099054083 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124360581 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092419662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104402604 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099288007 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1212974 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094949301 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11813678 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094995177 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.117629017 seconds)
done (took 17.918265658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087198834 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190477779 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.159396973 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150157789 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114701462 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119168912 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130345989 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126230464 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120386916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150292034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.116984306 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139355371 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.154711996 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093395773 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117892204 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09696971 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119025053 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135094195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128647927 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140977948 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171398498 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117931942 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152802755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118262461 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128014315 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121532359 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.119054476 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122528799 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096976692 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134844561 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114335905 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122426371 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094008004 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.14081199 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13611075 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101437686 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118328517 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100691776 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118293365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09372583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148371137 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141258886 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124061117 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10036266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122892217 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096606674 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120385825 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104215316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13006659 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.098894215 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133566768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.164923086 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122585897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103778472 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117036123 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.129830742 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103982396 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120756605 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.094714674 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12104514 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094411865 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121748831 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109210986 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15003987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122239685 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129081913 seconds)
  done (took 9.052815883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10507878 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142548897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.137191501 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112944753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120131521 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09422615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119550442 seconds)
  done (took 1.754142338 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089316079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138645811 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118024397 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143527154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140040819 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119473 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130377005 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095258353 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140419518 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121305176 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115991244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158635288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097103538 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12832267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146311133 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094518165 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145279268 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094943118 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123180452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144512737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098159524 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.14189809 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097615112 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119923147 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135366792 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095287861 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169621721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125566796 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097201831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124194228 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092622391 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.160234995 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135570803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.107780496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120656835 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110957368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135270411 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093785497 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133084283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.126836225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109682896 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121713393 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096711332 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118058553 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101193085 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.130868836 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118747753 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121114551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098119242 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14063916 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122346009 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109895227 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120513854 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099337151 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121338392 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102927545 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130270159 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120967999 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11589264 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122852778 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112840512 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137440624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135224755 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112751943 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123368368 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109494218 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13479318 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099119464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121870998 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098791555 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138148139 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119466862 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.096732509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.131470739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097446707 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145410632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145647263 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097241134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13204747 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096487059 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121555831 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095704971 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.144987377 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124866552 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095463102 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125311364 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099085388 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119118572 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093573081 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124566791 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093541707 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122381083 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098460036 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121727288 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099993068 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137295367 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122772638 seconds)
  done (took 12.484079709 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091073321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116844427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099132561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122029014 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097420703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121982063 seconds)
  done (took 1.583523264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117061378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122061269 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.136464223 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.102997567 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16361464 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136809984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112010317 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130412557 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141387874 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109502073 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136831401 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112637529 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144500933 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.128380244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111642772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127885331 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13754093 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107424066 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13398258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129299839 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118351908 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128367391 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103709144 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.140373401 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125530788 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102564083 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133892706 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137636043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109654994 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130801794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129348478 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.100110876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129372159 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.105134503 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137656881 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129584354 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102139682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.126173141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133504506 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100534278 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137974989 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103426338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133640436 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126826965 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105736034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129267732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126944699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107708299 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13580529 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126540751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101474387 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.128039097 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100261751 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127068505 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.128839844 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105167851 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.130015245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139883403 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.104214088 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.131197848 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.10025549 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125719651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131764322 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.10011935 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.137445698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126444185 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104072464 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128757276 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103663481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128603313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126783158 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100699983 seconds)
  done (took 9.749822067 seconds)
done (took 35.543760287 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694739465 seconds)
  done (took 1.628230811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815273311 seconds)
  done (took 1.752608532 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.038247204 seconds)
  done (took 18.002633949 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.484029987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592247619 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00759536 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17974622 seconds)
  done (took 3.198466826 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94433537 seconds)
  done (took 1.905173541 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282965865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243423127 seconds)
  done (took 1.469005665 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.758612481 seconds)
  done (took 1.71326412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.420140506 seconds)
  done (took 2.362705372 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322024644 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191188236 seconds)
  done (took 1.467913345 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558007474 seconds)
  done (took 1.510111967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.706212925 seconds)
  done (took 11.665692141 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267707957 seconds)
  done (took 1.232588124 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304709012 seconds)
  done (took 1.260318326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.521994126 seconds)
  done (took 4.481563682 seconds)
done (took 54.597373444 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099198209 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127437671 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102924919 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124127311 seconds)
  done (took 1.405246214 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101422866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121171635 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103765996 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125513871 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.13363056 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103617332 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.131190886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10828916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127113357 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130534667 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102659188 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127568523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105843702 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.129846345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100898039 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.131647616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133711827 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102920113 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.132347801 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103378651 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126645078 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131335404 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106485358 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12824222 seconds)
  done (took 3.811240513 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100061696 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119972699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101885119 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.126117509 seconds)
  done (took 1.413194159 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100083401 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131818808 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112046857 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131760694 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138073908 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11249781 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124826565 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099113693 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127318372 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106904556 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.122936192 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148701112 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113802547 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.132299275 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108803807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120977087 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123532194 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114394086 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.132491529 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10790854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12575743 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105700298 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12309125 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141242102 seconds)
  done (took 3.871385231 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171669421 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127843715 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145861506 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.102459165 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167999291 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149290285 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095218909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.149798005 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094726283 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.138705289 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.126825184 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.139478918 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135997937 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121121426 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096104823 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121128993 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108457129 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135000597 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.097772857 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.134781276 seconds)
  done (took 3.525958848 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098314448 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118248997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089241123 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117263382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099031284 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120546203 seconds)
  done (took 1.609919031 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091069141 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115364001 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093095279 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115729523 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100200549 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.120946567 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.094963836 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.123320523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096774177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123158155 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096839008 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121304449 seconds)
  done (took 2.258219643 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.495216129 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121856714 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118851533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089289683 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122742803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094030837 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135838003 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099149303 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.150901934 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123176898 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096569464 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.124808168 seconds)
  done (took 2.741060227 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220653059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132055888 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278275437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.353296107 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158513398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167059412 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.31120299 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160633996 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195554041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158238314 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206788227 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187617495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160194432 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226541701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120452752 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153155591 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198180613 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261578827 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159129528 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248023893 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177775723 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178110546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190200133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158622463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120181005 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19673034 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102217352 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13900905 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195759532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183078437 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221089406 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171293096 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155620177 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210516796 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240974014 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198891017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29016619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14146396 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174184439 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.177896557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240369837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146154031 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238950803 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163319063 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112988835 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230990725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166673565 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182178803 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.156006695 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147242687 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207521063 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203865252 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.222639629 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146015022 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309525013 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156012493 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16098277 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199276086 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242222133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208482906 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198525337 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.127641837 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1984012 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22534026 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192529839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162536476 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185585712 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155867538 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182538384 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19911035 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200835775 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18032415 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191717689 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145109205 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178531504 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181592226 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178790685 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271392582 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193209495 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.130217187 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177918807 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157757242 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13999772 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174475721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133327331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249772051 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123766738 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.172410983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248438947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167067511 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167289832 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197508332 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184786841 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158089298 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091010181 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161918377 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164612602 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181650259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148753631 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165836918 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15983101 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.112235925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206432976 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104985819 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193711666 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124164138 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176351102 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194937462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134635142 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17055088 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158752457 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132558829 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213055358 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207510043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150551814 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143021482 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219079875 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192205233 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151389464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187556154 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208669654 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153610212 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158436099 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236363964 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228926787 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148403143 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21098568 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157594586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143632423 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140609712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192853068 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164778114 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171451466 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114335982 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.219888006 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209862874 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132870189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119247172 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235432126 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142230079 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11331381 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155559662 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156714036 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.146630454 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152003959 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126820443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212494587 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188077193 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16221921 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173835549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155606763 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214978206 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147410659 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.160411338 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158280214 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101268166 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.225120539 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208143138 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140473029 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216648736 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178191914 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23619879 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178397966 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144108914 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18521108 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111419779 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128097631 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203046356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174866569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167314906 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.229676233 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206031334 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180295983 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.217926239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173999561 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182465343 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.175085339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161899535 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119657245 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170527036 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165937719 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130861644 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149382325 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114549067 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157603859 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152144125 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141928835 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203974351 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178118677 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226559734 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169477493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158366326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191297971 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109484325 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207981862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185357436 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154599605 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206754243 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203036808 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223854813 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125493045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237346594 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101724158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134361757 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15069803 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177112977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143349101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11658703 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171755454 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218733251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183911395 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1812123 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244320871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180664579 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198715659 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102240199 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17607633 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187215179 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212877072 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1603616 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139144406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151986032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18812706 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159210929 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216586865 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17547429 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209624302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209857759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160209111 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113427618 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158472238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180645332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162349181 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208890352 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127417661 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145356507 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16360503 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139418308 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169876006 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187349693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171710165 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187389812 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158599291 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194517185 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137148849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172970222 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171435217 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172942764 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.117343319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177135932 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204379646 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152274746 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169859688 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192020647 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140416155 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317528222 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204055782 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22129227 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111973555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157665879 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169997371 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172179959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171989928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185546682 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16699739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195891106 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167000437 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143342549 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145208865 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155929372 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132363997 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13836215 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149832761 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185258416 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146345887 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189441224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157189661 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167622831 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181496658 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15839627 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123876571 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160422006 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255447423 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19452832 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198966153 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160224262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182756351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245868185 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106759918 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1419113 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142115738 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18796239 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145382096 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201518339 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.199030135 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237577354 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189581433 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178995962 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146921246 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128531116 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13852865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206097342 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214227806 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152701421 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151875146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206354907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145891886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113611781 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174502635 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321760016 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121248353 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2187548 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.085905866 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294565556 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131756075 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134248796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16972466 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191226537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145282381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.161589357 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173325155 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156398671 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172899854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158646519 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20241484 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246792634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209410046 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21599462 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.112348601 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16533958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176496995 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193792322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16483469 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146891047 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196427528 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203979005 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.230539634 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151315536 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177067792 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177313962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168103651 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198338128 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143799826 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21707775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1427654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228321833 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16256686 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120192534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183687074 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.224864677 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14673439 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181909383 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184899581 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140613472 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138064314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164182913 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18499802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15618906 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106454164 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180448929 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127408549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196771012 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26734391 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139589342 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160080119 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145579041 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110136152 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15668053 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166209955 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144991686 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17202956 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196135468 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143034539 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195063494 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240057528 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178763006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174815077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154638235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696616479 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11190703 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232444817 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128519918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191564396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157733013 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18128849 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166583831 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175291676 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233880506 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167176086 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.241866465 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203327314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.188069982 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141034278 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168340361 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156476847 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.154200825 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16279209 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176881017 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168593801 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127012931 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.217270708 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165489237 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11499365 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14942324 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207886228 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158115217 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188953667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188914768 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146033692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181427029 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226354953 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114597055 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.212306566 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194037263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150549747 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15748958 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.114218148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.161206023 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27533764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133031228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192321267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196084309 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169141194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177429797 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156172011 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229680491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167542036 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197793695 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153028843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165744459 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166382016 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118885581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.138896073 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164765661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174153912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.158937697 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17085073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149005166 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224463301 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101882881 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14754966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296847032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177564721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247080354 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141996716 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113773626 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163111817 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153520175 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185313722 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216518353 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.117641432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142581438 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.14243768 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136580001 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144397955 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162279011 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196085768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166845143 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217762885 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.145932456 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.289607499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121296302 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163812926 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123528745 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.11233925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155221687 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145136082 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157283347 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199806528 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272748088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.154302827 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.138774325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151797942 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105099608 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143513118 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171473644 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169514422 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189307638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15202012 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0881523 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164805626 seconds)
  done (took 85.274982961 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164532035 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131864365 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14924788 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203025867 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178172321 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294026437 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211260016 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255899319 seconds)
  done (took 2.661373191 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095226343 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147743389 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.164634341 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.144471442 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.099740637 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.127279576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348480627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.141856393 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.121525944 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.129286573 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.180318799 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095395291 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.565293042 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099643939 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.129194084 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.116907588 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094770877 seconds)
  done (took 3.866932001 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.251589775 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.478279525 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.060752351 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196897304 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179789054 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120119187 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69127352 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118973025 seconds)
  done (took 12.173069747 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117136915 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146687459 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.134333256 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.163667002 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1515558 seconds)
  done (took 1.792292532 seconds)
done (took 127.357905032 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098938184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130902291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107027486 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.138999471 seconds)
  done (took 1.538484156 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095240762 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078744019 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109876205 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082483581 seconds)
  done (took 1.441225741 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.202118415 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.17770885 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401915239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079988264 seconds)
  done (took 1.589845325 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116450095 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133164622 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111420947 seconds)
  done (took 1.448874449 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107144434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13109148 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110110843 seconds)
  done (took 1.430992267 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10685568 seconds)
  done (took 1.190121802 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.1094049 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145101948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118056607 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.144022821 seconds)
  done (took 1.599668782 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099038877 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127739083 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113140451 seconds)
  done (took 1.423128346 seconds)
done (took 13.117308585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104507577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421008155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420967399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113089374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724774042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389366354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.087167513 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157049214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175369214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102272313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149670334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680355413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041785276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.38343741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999339418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379785998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709980476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100401201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127106573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099072138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.064162379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101528616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131401657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101242445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.708821437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429710669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095635722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371064977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092785158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124300246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408586142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095520381 seconds)
  done (took 17.16133446 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095552199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175392996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133047926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09869096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124949406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096135249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124736412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095247413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179092521 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13193616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119709225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13105937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132472674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095774976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142135121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099809213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128883926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098234853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123627764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122561689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112322789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125803527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095589267 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122119489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10088369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141350133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130980839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100723189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128593551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097753575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126431216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102436291 seconds)
  done (took 4.923345071 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14106228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185585597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136680254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135186794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176916561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130350998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.206790065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159696115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194274032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103604482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149064872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101010628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163712608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1326598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121573397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.128352896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096173802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122300305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121986411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095733492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141588602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100463884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126261499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100227479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127849333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138193076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096950454 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12226822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093984894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125938701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131510943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095589477 seconds)
  done (took 5.296347131 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098226912 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127204935 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10986595 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14364223 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102523583 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126364872 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101275891 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124196647 seconds)
  done (took 2.027713217 seconds)
done (took 30.49190537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112030747 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135580627 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.115454141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.143401865 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.112509205 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139964366 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100854732 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136248741 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.140681397 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.109900058 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147217847 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100862688 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.130490594 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100110364 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141968015 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105913819 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.141524928 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.140098878 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.114072756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143201027 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.102380539 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.142441287 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111550582 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.142657333 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.143342254 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.11449676 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.147859856 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108321468 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131418932 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102976253 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129945831 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11074305 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13124015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.141390946 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103316422 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132917775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101518811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129279495 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106195654 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.140820484 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10837181 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.138392619 seconds)
  done (took 6.315964572 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106967665 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148434288 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111913862 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089506542 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12259005 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081435611 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13776699 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087893844 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.117338305 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11026439 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108968868 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078496327 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082108114 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102616677 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077626072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076899304 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108580464 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075502163 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076791697 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10595293 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07951439 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.101207507 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080703081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079291855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104101541 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081668 seconds)
  done (took 3.632124101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101094473 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135546012 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11519058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183957972 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161831418 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101804042 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133556513 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141540082 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110201503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122272422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096886869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150097747 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111412452 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129293252 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122671136 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109550712 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136600737 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09463293 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129779108 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119103421 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138603413 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132531495 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113576942 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133591941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092964071 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124875981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097718992 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135952605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133816596 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10420557 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126593551 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097173449 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124444691 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106928502 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127577494 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12441959 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.114276081 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133141005 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102223937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122991005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101342044 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122885986 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144086341 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.140903201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128160205 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101825224 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126224447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137748091 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094286215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140421429 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103453217 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121674173 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097073747 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121457398 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094117002 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137052935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101390371 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125130477 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132033909 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100098558 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135610418 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098143458 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139715415 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098267214 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130308698 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095129016 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122732713 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121111355 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115675784 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124205572 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162425828 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100334246 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124027604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104079449 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131047475 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101283246 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122641276 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110258863 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132473591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131787296 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.104114455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125436345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096710805 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140217426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09665775 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124267997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094543957 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12867026 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097372988 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12374859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137469691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097910846 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125142908 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113126462 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122717308 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095365532 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128648814 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127775209 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093713709 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135431569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100775696 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123986254 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104865703 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122813076 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126223878 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105017093 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127010197 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093249437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127038807 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102021458 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124237213 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095744744 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126369881 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099235099 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134596634 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130305462 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100678854 seconds)
  done (took 15.025527367 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.237354087 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214885232 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190710138 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295048342 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13791972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116688905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220905672 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164312634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130166055 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.171936673 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.180047776 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183169853 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14294759 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.226689504 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170642045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093697277 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142666721 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165828652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217097676 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.261509005 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.148951195 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134095712 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162056009 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.131934623 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139417496 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.138754703 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111348443 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137330573 seconds)
  done (took 5.882788302 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109364001 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156127579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.107171936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145002435 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151007497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.101355935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128305792 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.124653433 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108229861 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137802569 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095004578 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129932159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.134974738 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104362232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123547963 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104381708 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13251027 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096045693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127130439 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099039327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132989437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133311849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103834397 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122315342 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103721624 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1224298 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088328927 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142870998 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123211119 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115656231 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12253997 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103657368 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136234955 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12345914 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094054391 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.125142015 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096065705 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.125785059 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096217372 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122678846 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094044755 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.107841321 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.093126576 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136990549 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100484909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109877154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100551784 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129245236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095831117 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121375934 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125824255 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102177413 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12657662 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102585143 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126409228 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09633727 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.126759923 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086329812 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129835682 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097680763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114192465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.099341221 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128242157 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.088831264 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132051352 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099853668 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122602707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097517971 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129190906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101077609 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126700813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101067512 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122978673 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126632483 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097920379 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129775559 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097990606 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121383573 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094450445 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125384703 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076252289 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122947583 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075484711 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098096402 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122095636 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121949663 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097205433 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129524606 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110214519 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124403369 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131745675 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096088225 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123230004 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098488583 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112076433 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097371204 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140455547 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1160901 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124575467 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122355348 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109313037 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125722623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093850332 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.1062399 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10344874 seconds)
  done (took 13.116182678 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131382557 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153001765 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126023856 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113800832 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158290618 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158478011 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101655839 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131801616 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096384101 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143122364 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096971306 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132592654 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097479901 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138638578 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164052067 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106767303 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126277521 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109815958 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128037932 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171869227 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.119473749 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141862962 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141694375 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100801737 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130800604 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.117974763 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167174099 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.145022524 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11490662 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.150041197 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.115969598 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163126052 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146260784 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.107159952 seconds)
  done (took 5.577611587 seconds)
done (took 50.641585386 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215025578 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414528 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191336398 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.053839946 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.23534525 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2211019 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203733302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185353362 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.229935644 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192940534 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.425598197 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.720764366 seconds)
done (took 58.402754407 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.23785638 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347768785 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482679062 seconds)
  done (took 3.94302673 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.744110104 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.161155128 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453804764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201238737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194581861 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484467131 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.888281763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.569088983 seconds)
  done (took 28.066932823 seconds)
done (took 42.10605748 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.208298302 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.206804424 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232149199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166662609 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.326063117 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.225731836 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.521660306 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.245660176 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222059025 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.174048997 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209670938 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197938187 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.197267924 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.495957777 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198031273 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19356474 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.209037738 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.714814172 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600728109 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191545981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.200267698 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.204049454 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.215235835 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201001978 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2478641 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192936494 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189256311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.193409677 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.796752947 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199065694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.200784345 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.701569152 seconds)
  done (took 190.393977217 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194720585 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.214242974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.332553038 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.228323781 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.685826349 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397306384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345235676 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.774592679 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209424767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.226161895 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.343239714 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191480787 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.390814759 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165096435 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22616097 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.279605024 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.456594031 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.422343497 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229973855 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.351944186 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214905666 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.201837486 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.134852366 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.328826466 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201181567 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.248455051 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.199605252 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22462979 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390471387 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.38521128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.256512858 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.230377484 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819806726 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052368366 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221283331 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226000075 seconds)
  done (took 149.115899842 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197280717 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197204902 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19257076 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232900417 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197966027 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782565482 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785555384 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.706783152 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.245036685 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.600651672 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460365683 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190214818 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297000087 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204427339 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191769851 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208488481 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235010513 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193720961 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192762507 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781958093 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212884227 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.202748332 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365423553 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209650111 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22764459 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590761887 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19475908 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229631115 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529213688 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243695485 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191980698 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.601875796 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.954626979 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310441655 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19414025 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233127134 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199810856 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48214335 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198655281 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20049378 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205162256 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898110494 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199952231 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785062838 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203205189 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156343516 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191419589 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197323516 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.443577112 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.914000001 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21706623 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200885297 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205619093 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202307361 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203351258 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198538033 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233858883 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.434878293 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298363817 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213813467 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198961093 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2313728 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202743855 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.227639819 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20302395 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.360096999 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271515121 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304034244 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785779142 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199605936 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303012631 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317401248 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194078854 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199106769 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199793685 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203664454 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314658018 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195455211 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617819013 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369591591 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214489311 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203240741 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.612680152 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303300289 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198949719 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627487193 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204527129 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200299436 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953761327 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296295413 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198838381 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204389347 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202396842 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623365003 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786062313 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.46896269 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203828625 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.408692706 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20474216 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201117478 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.638841082 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753000134 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197248949 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.909084943 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204359203 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319090297 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37573185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215691919 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205860113 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.610985487 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206825461 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265164235 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199470597 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606796563 seconds)
  done (took 365.322920675 seconds)
done (took 705.950925639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.791685176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.780733553 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911950519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778454721 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.743458126 seconds)
  done (took 10.130499155 seconds)
done (took 11.257666384 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.399743553 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.40006716 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267268931 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.401960437 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239605154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41726121 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377028191 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222809712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.308617196 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289322477 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309873845 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25821395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239670234 seconds)
  done (took 18.255898161 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530305256 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520258763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270201918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517703336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245013149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540863714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406931394 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428022354 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417455004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233409688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218743653 seconds)
  done (took 16.454970766 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540405465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531064279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273288678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535401594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247550702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53945962 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416593004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422530781 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412330272 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234541325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218029978 seconds)
  done (took 16.496120915 seconds)
done (took 52.33601528 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214533702 seconds)
  done (took 2.338666947 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250696967 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412227319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233473967 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222653774 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209969678 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.214671287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218804439 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21614705 seconds)
  done (took 11.105140839 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217319556 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217398787 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217064856 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215710355 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210833976 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212761758 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217939406 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216723714 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212644745 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212515243 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215569618 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213649705 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213490397 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216396201 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214605028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21437102 seconds)
  done (took 20.566537526 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213793088 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210344783 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214359916 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214014239 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212929383 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214433033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216416336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216086122 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215517182 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214325046 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214362909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21536591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214848647 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216555237 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215522001 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217137764 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214252248 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215228918 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217547476 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215700166 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217789716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.215379554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218045083 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220128791 seconds)
  done (took 30.299056451 seconds)
done (took 65.435725604 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.844997418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.803049319 seconds)
  done (took 6.776376481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218936639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21864392 seconds)
  done (took 3.570673974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215556596 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219720559 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218622337 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21660494 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217743363 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217178407 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220666865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21741223 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21662053 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218137438 seconds)
  done (took 13.308373672 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217040502 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218009767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217805384 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220637902 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218859135 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215292203 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216788865 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216549289 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217886443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214841645 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219744306 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216200931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220620369 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214723287 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219354762 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214260255 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216522111 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216603094 seconds)
  done (took 23.042391461 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217777767 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219096669 seconds)
  done (took 3.56775469 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214650289 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216542686 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216803362 seconds)
    (4/7) benchmarking "year"...
    done (took 1.21880744 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216808963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218549446 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216761557 seconds)
  done (took 9.65066661 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219428744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398221829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.494222813 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790591798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220866223 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226534388 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.094525554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224155417 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2270242 seconds)
  done (took 14.0303332 seconds)
done (took 75.079555447 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.268969467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.227089696 seconds)
  (3/8) benchmarking "parseint"...
  done (took 4.025274184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23091391 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241955302 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554877941 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.232928022 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.342655671 seconds)
done (took 38.259998152 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.231821355 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195664712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.99729436 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21265429 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.30370195 seconds)
  done (took 18.84106416 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274382889 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549105728 seconds)
  done (took 4.95734386 seconds)
done (took 31.16379864 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219923886 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222842202 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.218638939 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222389929 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.220634474 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217219078 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217179568 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222895837 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22155831 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222777813 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22191489 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.22258228 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222899584 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21839807 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219517038 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215859718 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.224431322 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218972449 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218818776 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220894983 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218280817 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221404749 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217245305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216131808 seconds)
  done (took 30.416300764 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219614939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217923358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222345933 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220993261 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218546323 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223094251 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221608548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218746279 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220317326 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223112098 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21991684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218239234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223869985 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22210318 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224163397 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220942442 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225308292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219767999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219949099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220951864 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223375085 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216940931 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220545609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222081891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221400421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221060562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225082285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223289341 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222064511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218709532 seconds)
  done (took 37.77273124 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224756935 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229680531 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224079457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223792287 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223387923 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223605175 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223617948 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223717762 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224898073 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222100179 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226505628 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223721284 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225414766 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224841466 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224888178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224523275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227367698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.222405836 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224582397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219990267 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224189077 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225243729 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224569356 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227148492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223476509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228229307 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225502977 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225542316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225450403 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225876974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226514654 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228003375 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221052015 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223136252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224618572 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223861388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230233244 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230132762 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228262331 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224058242 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226289763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226834651 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227324248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223747117 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225881464 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225247055 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227361012 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226750465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223358675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22403779 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227678348 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231107298 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22676516 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227529682 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228476351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228915365 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.229036203 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226873967 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227182355 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230280549 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228223747 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228847351 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229827438 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225197377 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228709221 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228596438 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228973274 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229239033 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231389743 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229669502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230676537 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.229104807 seconds)
  done (took 89.430623857 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229026584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22737454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22911635 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227682797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227956106 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231321978 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228740931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228557182 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229265738 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231724025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232992304 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229414989 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229728239 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232698978 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232011023 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229844008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230903258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230187259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232809963 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232797607 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232407814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229258281 seconds)
  done (took 28.207728295 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228744711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235308688 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229661157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22985454 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228095836 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227541725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226024399 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231082621 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231565765 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227950539 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227822062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231432725 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229452281 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229149959 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229189794 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227282263 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232820304 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230366719 seconds)
  done (took 23.275389363 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228726171 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231971291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232706797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23375208 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229867238 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229725414 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228165627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232999904 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233122109 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229818168 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232897644 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233763664 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232740742 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226073734 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230835373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22544079 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232652993 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225711928 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232667844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23145859 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227753102 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232477485 seconds)
  done (took 28.219364936 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229803026 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22558852 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229094827 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222738166 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230160212 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233479078 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.2309565 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227499204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231492704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232391079 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230014622 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232326139 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228743532 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228270361 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230541757 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229534902 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233858171 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227660602 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231484133 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230688311 seconds)
  done (took 25.743237436 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230430273 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233828907 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232634715 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231175036 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231862472 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232412955 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235059236 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232405942 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231739367 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231650422 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232733418 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234222492 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228724019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231822762 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232886055 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232068312 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236347928 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232335359 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236014433 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233110235 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235938276 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231825615 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231780516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234937282 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234418526 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232601524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236122057 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233674464 seconds)
  done (took 35.673682045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232307704 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23186377 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231935515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.231993009 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231855883 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22954579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23508817 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234719895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232116469 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231705547 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236327623 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236370694 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234324628 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239120532 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235033831 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236489291 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235078129 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232112795 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233310964 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23534571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233831814 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235206366 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234830262 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230072972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233446293 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234216202 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230711681 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236631139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235696097 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233977863 seconds)
  done (took 38.163104475 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251870879 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254050357 seconds)
  done (took 3.657337672 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232841562 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237028614 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235406867 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234384745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233382778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234436721 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235408139 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234801611 seconds)
  done (took 11.026162223 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234928878 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235307346 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233274031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234970934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235666199 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235598725 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24316135 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258137815 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237879805 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237443486 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242426856 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242691904 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240827127 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236989273 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235046321 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237963898 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237677035 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238589484 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237538338 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236256409 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238304488 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241179562 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241814214 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233836189 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238772125 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246375532 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.262302917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240299776 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237598425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238474091 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238121273 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235564312 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237203167 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235657319 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.233060058 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235147539 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242984427 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259887812 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242699304 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256518187 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236446295 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231129095 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241184321 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235645386 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235573726 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236452988 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233376177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236396421 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.234914214 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.241969744 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239473668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232929338 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235332999 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236818867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236599946 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242683947 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254096875 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240297194 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245956632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.246359526 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268519219 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260814586 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239449708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238426181 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245467391 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257448256 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246070472 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254945367 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234729974 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23361992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245312142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269771776 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.258850868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239486758 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237167637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.235116096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238361184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235621461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242622046 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.26078637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241852805 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238779371 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254137604 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263337313 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238582896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23788722 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237334967 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239667591 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239403967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25111651 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25983977 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238116516 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237264126 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240295708 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241267298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238905795 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23476726 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239860961 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237022622 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239060046 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240315728 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240815917 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247925736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238136974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239929479 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.241408249 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260133448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23866412 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24511798 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239890399 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243470209 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243160449 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246090034 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236775825 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243682466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248838669 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241272943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239522594 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246445784 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238043773 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254797449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266516931 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243918102 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240912498 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248237071 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252780274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242693924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24521658 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244992709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241701605 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242141668 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244492003 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244399818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2401355 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244927568 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243644637 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243253792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241648478 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243746769 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240962871 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246011958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243750735 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24581752 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246288015 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245413761 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242562024 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249059879 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261646305 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242628841 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243897756 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242431489 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244328626 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2451251 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244673349 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245150416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243647408 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242615153 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247710252 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243800331 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245571468 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244391357 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245425215 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247098392 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24237884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244956952 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24367462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239395285 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242694401 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245792347 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244174756 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241427275 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242015495 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24404614 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253125487 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24070339 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245360742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244610586 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240843143 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243613605 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242382341 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242713017 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249140762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245836931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245395262 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263184891 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243786528 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242079678 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.243413537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240570504 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242940621 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.245514281 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247867512 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255381553 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26811332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246305863 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247274248 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246006186 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.246629398 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246484495 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245294816 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239664559 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245338855 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242166881 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243071153 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243144446 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.243980259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241483441 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24409304 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243777445 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243245599 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244632873 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245387186 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243106583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242225543 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244202275 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243209721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244742626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24361744 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246760287 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.2434474 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245211181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244292284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248576513 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.241396368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248242338 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24585105 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244248497 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243064169 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24424952 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245945346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247865967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251159207 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26589662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245546007 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251128238 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265285181 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243594827 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248450218 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248663137 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241928732 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249272889 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252073434 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244936767 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.246686403 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246337287 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244355181 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245061053 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251984381 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264299089 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246126804 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.246067399 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244583104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243850025 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246678045 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246243896 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246302358 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250150121 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246963659 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246445077 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249001816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24811191 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247075005 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24715354 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250353899 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254416994 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251482032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248211312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247946594 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247427806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249913995 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245978835 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.247008649 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24644208 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260623188 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.272746345 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253769677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268660453 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248121271 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253901877 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.267725127 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250336604 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249390446 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249548871 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247957979 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247489353 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245460011 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248904979 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248538055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248526537 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249600116 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252294189 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248133209 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249471132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.250315573 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250978544 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250154123 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250520233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249734036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25173104 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250169313 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.250926604 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24922785 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25548069 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26968204 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249281109 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249344707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248942982 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249000297 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250579689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250141546 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253858575 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257409679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253659881 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257720768 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251290551 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259275494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.251220551 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253019862 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25976355 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246977001 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248400222 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250258641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.251069153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256946782 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.269251895 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251691959 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256254313 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252008157 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.253324757 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249714737 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251726322 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251530726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252285136 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258738509 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272965482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255549813 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254242097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.249276896 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254857595 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251536372 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249842092 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253183549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256088146 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.250969335 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251662636 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251947543 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.252375954 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.252971095 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252357888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24819598 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25232795 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25829699 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273414212 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256519352 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251714148 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259196867 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273828096 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259986124 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.273333622 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252707453 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253568247 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252653164 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253584978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251686934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25339048 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253706501 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254733313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257427486 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253903128 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255181079 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253842716 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253977111 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253280444 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263967583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277265293 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254989754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257444749 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250926751 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255527067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259611889 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254781115 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253777484 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257198918 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26458682 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26265143 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253879264 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254966725 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255076562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2554269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254571108 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25537596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25448117 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255417102 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.255011885 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254631652 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257896539 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257257145 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254861913 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256921941 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25655598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265053413 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.275862458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.256118071 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255135043 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.257620553 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256194722 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255077278 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256723785 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255684825 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255427039 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257414637 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263926871 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261827634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258719369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25573771 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256687133 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256065537 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256148371 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256687055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.257811692 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258011925 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257214615 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256812888 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.257233987 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255613726 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256905384 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256607099 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256788471 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260228345 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263378725 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257452615 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254998069 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257289272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257476317 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256437583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258298282 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263252222 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280241548 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267721228 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265933709 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.262039156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258500109 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261317311 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264978835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256455353 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258416376 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258884007 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257812347 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259292611 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262217407 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259564897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264018808 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279783943 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.258722328 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264944797 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281739348 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260806457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.2607282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.263312612 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.257844991 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257046938 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259701968 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259214454 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266355913 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280828975 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261925525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261496582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.258695167 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261338892 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264146862 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259479665 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260830138 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256223376 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.25955809 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260420842 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260634667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.259636272 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260341796 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258797668 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264033371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266838949 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256749977 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262050279 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260204458 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259686992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260238362 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260964697 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257258617 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.256943872 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.259946933 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260809192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.261428706 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26368132 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260351255 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.26290141 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261632264 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26216546 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264671784 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270889547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268231802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257587132 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.261348827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260981078 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26397939 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262708687 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262515387 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262447346 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262457243 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262487648 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262335547 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261096817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265486811 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276911382 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284957933 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261646128 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262941291 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264757662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.263253401 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260783025 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263753874 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.263185896 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267060176 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27175026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263432157 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268837149 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28299353 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264264625 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267380892 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266832523 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269799221 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266128018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264774325 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264858099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269764166 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278765438 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263862764 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274196846 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295060421 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283275497 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264031768 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266060337 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264353372 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265634593 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26564636 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265734795 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265820918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264531969 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265044678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265440983 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269372164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265346375 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26603047 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265697212 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264369513 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265504542 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261658988 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265943524 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264092995 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.266194196 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.264993623 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265473325 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265302392 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278579871 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.291138865 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265077573 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266295208 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262429201 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268212167 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268976505 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276411303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271765837 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266908028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266692577 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266792776 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266566972 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266200126 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265884814 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266225841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267770526 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.265543514 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280276086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292579536 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272070908 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267012331 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267644773 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268111295 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267576688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267211537 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269451158 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268885678 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.270205159 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272409094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2663366 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268348138 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27120986 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274985453 seconds)
  done (took 748.042451605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265896808 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265520358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263466378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264962468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264653022 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264938579 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264477376 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266489463 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266291123 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264523064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266368164 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266158222 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266657076 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266516784 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265546877 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265637625 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267332912 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268432894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267335559 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268655712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266667536 seconds)
  done (took 27.767983337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269680204 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266853806 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267141909 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269654928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267776543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269290105 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268710515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270039937 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270512311 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267216917 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269633207 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26972712 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267606017 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268235141 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268053196 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269877139 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270392505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271014322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.270828929 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269223027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271589112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268365353 seconds)
  done (took 29.104298205 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27277316 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2716271 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272049755 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268570866 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271728279 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268263105 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.271644844 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27147048 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271933284 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.272200057 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.271620165 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.275458305 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.279600052 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.276268241 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272764933 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.273067544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.416978123 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272689421 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.27322214 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273810292 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.270063544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.27802605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.288082259 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.270109832 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.272253193 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274704411 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273851258 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.271993617 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273051232 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273782553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277898053 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272211388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27209675 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274335282 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.275063141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273931723 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276665474 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.274539143 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271525411 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270817605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28338592 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29551833 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275660406 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279844255 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.293582807 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.273798229 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279257566 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281579316 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.271351213 seconds)
  done (took 63.802343266 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275990669 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274168992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270906131 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274220326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.272120496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275278448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279474332 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27458859 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.272843069 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272456885 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.275730364 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272879096 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272986073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276029541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275806672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272891219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275807319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277005149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274517792 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271143731 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274923231 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278732605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.27657622 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.276060647 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.279098672 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273387581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273192609 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.27632962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27409448 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274966724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.275758136 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277609601 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278027473 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.274857696 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273441596 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277077214 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276375876 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273602921 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278953107 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275083695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.276393388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276353352 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276781547 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.277719134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274648671 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.276026763 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27363678 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274275986 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277095628 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276206466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274957521 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275721541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276886529 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274880459 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277183875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.277761719 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275793861 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.275229743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278268808 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274053373 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275278082 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277666894 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275080747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.279451503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.277838626 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276235934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276226496 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278349412 seconds)
  done (took 87.929998806 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278684013 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277485662 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278689129 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279960878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279297347 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279783523 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279708398 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279328868 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280789058 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27964902 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27936114 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280462891 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279922017 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280660276 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279950575 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278457845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280344252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280672979 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280826653 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280337962 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281176293 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280914565 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.280367859 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279371377 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279615039 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281100566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2820524 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282732632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280242695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28035583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281544448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.2808136 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280736685 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280967242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281173414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280491058 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280641856 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280794938 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281024201 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281266074 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281704852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280243478 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281437466 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280734895 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282038868 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282573365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282422281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282763133 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281324234 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281713212 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.282248407 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281330637 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281837071 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281418991 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283496561 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280723446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282657688 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28203248 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282290228 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282847829 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281851307 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281920571 seconds)
  done (took 80.605498682 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281467803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282752542 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280060709 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279241651 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28320648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281538322 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283419943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281964812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282524568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282310481 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28379291 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279527388 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280128138 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283396013 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281197638 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280586418 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280803708 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280416613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282775541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280859709 seconds)
  done (took 26.824845887 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281505566 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283105067 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280638512 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282357913 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284302838 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281767052 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284717674 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28449978 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284028081 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283195572 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283672377 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285023226 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281387523 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281756212 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284649557 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28352328 seconds)
  done (took 21.725794348 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28240631 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.285902641 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285577738 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284638458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282518308 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281605095 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285148976 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.283639917 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281655975 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285340673 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.286538763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285236372 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284725085 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285716433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28330733 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285471337 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282662954 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282960135 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285588742 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286283386 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.284036111 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28314255 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285963438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285295929 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282207808 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284290497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283104879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.284240095 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283267237 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286367662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283922918 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283330017 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285221672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285019705 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286817065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284318173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288232555 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287315476 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286543089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286908433 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286754058 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285075291 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.2881873 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287350006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284719073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286495492 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283513044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284370965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284342767 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285471777 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288729537 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287938855 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288003553 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288471654 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286441446 seconds)
  done (took 71.880028033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288225205 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287705416 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284804905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288573233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289671899 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286828541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289222809 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285931252 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2859155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.287647381 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285973907 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289529461 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286739973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290502158 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287776299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288799067 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286383752 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286649489 seconds)
  done (took 24.377466006 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28934876 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287664413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289137893 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289471668 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289345733 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290584001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285238006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289135348 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290174186 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287540043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287108689 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289880554 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289637002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291031253 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28821232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284615557 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288508566 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291171236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285765634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288013531 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290448657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290300715 seconds)
  done (took 29.553171807 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29145343 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289200005 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.289549323 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.306388908 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.309042687 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.311798764 seconds)
  done (took 8.9990493 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295974872 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290174013 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290305871 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288923487 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285225665 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28449521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288203288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286578994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289793882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28731118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287040331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29191332 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290830822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288875791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292558744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291020362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284799051 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286232874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286757979 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29173095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289567679 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292602283 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288653297 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292634409 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291398412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291286491 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290761617 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289196962 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288423183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29229131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292762316 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291634352 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294699574 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286252544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293562142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29335064 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289293511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295190809 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293446671 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292575694 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293080144 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290743768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294370664 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292297615 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292250276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290397728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288613982 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289048519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289718847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292228179 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294980208 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290474417 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292753549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295238772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293293784 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296880969 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295201022 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291295532 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294217061 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292095319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289704938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292430663 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292215739 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29182905 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29216683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294600848 seconds)
  done (took 86.439145131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291863018 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292014826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290206402 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294421988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29269722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290853052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292634008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29343067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292935073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293633481 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293486412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293210622 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292920697 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290559859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291637034 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292118326 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293127061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292822629 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289571774 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296920406 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292301843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29483737 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291921377 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289909164 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291899221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293761752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292868464 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293727771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292785976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292300522 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289322831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292173034 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295514388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294285123 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294727944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293612367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292284107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296028649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292721677 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295714066 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296112767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297089522 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293805814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294550327 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296896243 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296148569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292471906 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294527908 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295724683 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295541248 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294623205 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298568442 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298258188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29396427 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291770565 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294966381 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294470352 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292934286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295042131 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295431762 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297636055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296083818 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297950402 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292478518 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295954391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293983614 seconds)
  done (took 86.594199905 seconds)
done (took 1746.367702278 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46030982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416721913 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298588223 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.314353212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302572537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.301993368 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.314588339 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298088182 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298367117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29757584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296134132 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488317191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.342808395 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296272516 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294481977 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393352026 seconds)
  done (took 42.624568345 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.325971905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3082578 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423882017 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324728326 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322644703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496385331 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.362149876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306445736 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.48328662 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343302664 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.959573916 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32526096 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308995306 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.483664999 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322585006 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496066432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574454873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.973594545 seconds)
  done (took 30.350769222 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793028802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.309513475 seconds)
  done (took 9.312589554 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325456907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305021641 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302385241 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302471061 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296950428 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313043972 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302854099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.300752081 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.28381089 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442278942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.310775162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.311337279 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321320307 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303684154 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29900339 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341316316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460584739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302955418 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301688504 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309043423 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303520656 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406696236 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347112131 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304532465 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.43817482 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.303752119 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311781752 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310972037 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.455632736 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304480932 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302425448 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302217053 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304210255 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248516063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.873391327 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.295541363 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.346322855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.314673397 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299612639 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451700558 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30563584 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310571696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309171335 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842162198 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43349487 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436009275 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.673983437 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32464985 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303673476 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36766991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307626088 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.308446039 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351941912 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.117641122 seconds)
  done (took 111.268495095 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305157786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.705562666 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467657196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323223836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.113259309 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051676884 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321312195 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616224514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375884379 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301674784 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.60142795 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848598653 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317089043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.356376781 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.908295746 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302749688 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302277419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.242622914 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321932914 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.302025927 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820777116 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307383936 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.323123738 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.475016058 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337375473 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.776017799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.795053273 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.858402477 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.32233147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299249076 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790086536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312109107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.347955588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.296631289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.573007915 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67098711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662335564 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327511631 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306686501 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297448215 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311288192 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763309303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.666798173 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314471097 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.296565622 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78632709 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315722677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.304386265 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.297095602 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507098128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.024665816 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300064962 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.796614321 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301351401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.665195177 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327235523 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373407336 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795748578 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318595403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.452642477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336569152 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299832797 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307673559 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3047484 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296915119 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662007511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.387225572 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300971466 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655783465 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793886025 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313808683 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857978911 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.170773993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319469262 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.405171873 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310500504 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.011040247 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801157104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337573027 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297211806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642539369 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319736771 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.58242775 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316041595 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297880353 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820003831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.306494796 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.340228219 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.303755901 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.315871393 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.075223389 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304459029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589767503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370257937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299512724 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.298414087 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.338505108 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299367396 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301439385 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.298117068 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835977878 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.322449821 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.280497236 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3209697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308857035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303009369 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303474847 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301062816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526338622 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.73489759 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318636763 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301094667 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.298305258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.322701129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.474067199 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303011416 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.61712042 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315103387 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298535235 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310748654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026681207 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319714205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302024707 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.303838157 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216453512 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512191019 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317714368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.302695621 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302504748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328807967 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.573226233 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320762437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.368371093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301727244 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027421871 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350500586 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342046051 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.693131406 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308495636 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288828486 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323083924 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301727164 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594526559 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.5715787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.930308503 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.320283353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.299308653 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.004277762 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.338414406 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452258062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32282223 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.303003598 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501941383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445956583 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303486486 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965751402 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302319409 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522963342 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307892956 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606387064 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808299936 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320552769 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30739974 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.027891706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.007119403 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.150726083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303269493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584885758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.275219666 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.784442516 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.301487367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302945517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.899094927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304424939 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308950373 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.308878236 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.302585102 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358612808 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477934265 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.529824461 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305684333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765470612 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.364451108 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301743415 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315709324 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.304282293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653084679 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372501826 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.318225271 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.339896431 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.306080949 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309831877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78618969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.263858544 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.311134513 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458093066 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948943905 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.319565085 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305211153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.894826516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.719590505 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.86632202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375034209 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626585596 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.326913433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345297619 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066126565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325299116 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.829627029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322606453 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.304825652 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921187069 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.321515872 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662148267 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305605225 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.30694059 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873522375 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319087354 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.307117943 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.579547195 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329888149 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561346374 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.304307559 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.340817641 seconds)
  done (took 1106.584880069 seconds)
done (took 1301.34837668 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306665438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308013838 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.293851631 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311558438 seconds)
  done (took 26.438821678 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32455297 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314436598 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314579719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312731975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.318456861 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313568259 seconds)
  done (took 9.122901786 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.33944297 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312107548 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315455811 seconds)
  done (took 19.189923078 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528795877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.626039034 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.65523736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.538623369 seconds)
  done (took 10.574530901 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315546093 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315802273 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31571716 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318137483 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329767434 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.329735101 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.3170246 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319131301 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329195461 seconds)
  done (took 13.108653584 seconds)
done (took 79.655304774 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.941801569 seconds)
    (2/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.363287793 seconds)
    (3/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.339015755 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.413219464 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.293017316 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.75605033 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.549133451 seconds)
    (8/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.648622158 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.251836457 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.670001717 seconds)
    (11/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412328585 seconds)
    (12/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.670519817 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.568172109 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.92531408 seconds)
    (15/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.436587946 seconds)
    (16/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.837519305 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353909496 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.970617663 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.566976911 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352090656 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.03104736 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.214890759 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351507053 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.638436952 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220729596 seconds)
    (26/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.544758649 seconds)
    (27/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314936803 seconds)
    (28/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.311784443 seconds)
    (29/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.399249977 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.302599867 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381681436 seconds)
    (32/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.178819291 seconds)
    (33/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.328823167 seconds)
    (34/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.525547821 seconds)
    (35/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.475364956 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.128237549 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.328670423 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344231461 seconds)
    (39/286) benchmarking ("sort", BigInt, true)...
    done (took 6.314436857 seconds)
    (40/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44168108 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303496104 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.444863363 seconds)
    (43/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.314006858 seconds)
    (44/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.878324988 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.329617683 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.098250809 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.294128431 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.367367808 seconds)
    (49/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.788259498 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.045109203 seconds)
    (51/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.950950807 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.350744644 seconds)
    (53/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414123481 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.335926734 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424105942 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.608250479 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577546798 seconds)
    (58/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.971964681 seconds)
    (59/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.746058719 seconds)
    (60/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.366038122 seconds)
    (61/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.298058288 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.34730153 seconds)
    (63/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.357451343 seconds)
    (64/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.395045541 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.036357832 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.30612534 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.375089558 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.906918229 seconds)
    (69/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386018619 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.300190938 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.282589885 seconds)
    (72/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.697782924 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356743196 seconds)
    (74/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.14988777 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230390302 seconds)
    (76/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.312870677 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.370410157 seconds)
    (78/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297671318 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.295820284 seconds)
    (80/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.334265271 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403162411 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.31497307 seconds)
    (83/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.339747913 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.590114705 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.32527968 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.337641609 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.291805557 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.562191366 seconds)
    (89/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328608836 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.292550757 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.745830581 seconds)
    (92/286) benchmarking ("sort", BigInt, false)...
    done (took 6.334919602 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133395396 seconds)
    (94/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.118918813 seconds)
    (95/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.934397614 seconds)
    (96/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.198304491 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.318230796 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.874276556 seconds)
    (99/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440385506 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.355119691 seconds)
    (101/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411607435 seconds)
    (102/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.29326877 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.689996953 seconds)
    (104/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.308531048 seconds)
    (105/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413162853 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.311950859 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533761703 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.296229152 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.201721641 seconds)
    (110/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.309870961 seconds)
    (111/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.838523022 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.297393636 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.08252139 seconds)
    (114/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.385200388 seconds)
    (115/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.315855065 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.228612041 seconds)
    (117/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342938376 seconds)
    (118/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342928708 seconds)
    (119/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.310848171 seconds)
    (120/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.587210245 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.135513427 seconds)
    (122/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.891885839 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.858199501 seconds)
    (124/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.331382583 seconds)
    (125/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.296368917 seconds)
    (126/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.880420311 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.845386205 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355493249 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.26549375 seconds)
    (130/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.194753052 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602034786 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.308979452 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236205589 seconds)
    (134/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.303233021 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.247808735 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210127841 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.148533984 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.967452708 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.553968274 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589524104 seconds)
    (141/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343324287 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.424648778 seconds)
    (143/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.102839281 seconds)
    (144/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426281199 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.319575644 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.757178246 seconds)
    (147/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.385260472 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.153192113 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34815289 seconds)
    (150/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.301844964 seconds)
    (151/286) benchmarking ("sort", Float32, false)...
    done (took 5.354844593 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.930898445 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305295599 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.107216672 seconds)
    (155/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314652147 seconds)
    (156/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.3350596 seconds)
    (157/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.740944682 seconds)
    (158/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.383282909 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.300200966 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.183084435 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.305453113 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.346645244 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.410503187 seconds)
    (164/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.413036079 seconds)
    (165/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380675852 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.30658905 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.587150721 seconds)
    (168/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.964448549 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.737613395 seconds)
    (170/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.362677079 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.320078571 seconds)
    (172/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.519324595 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.339565334 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.315863453 seconds)
    (175/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.371364441 seconds)
    (176/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.441142751 seconds)
    (177/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.301679211 seconds)
    (178/286) benchmarking ("sort", Float64, true)...
    done (took 6.320982628 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.287255295 seconds)
    (180/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402831891 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.337033113 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.614932672 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353301108 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428478071 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.403777812 seconds)
    (186/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537928206 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344577056 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283361997 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.366949187 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.302299244 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334436918 seconds)
    (192/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406883337 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.303615258 seconds)
    (194/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336541684 seconds)
    (195/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.337369186 seconds)
    (196/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.049201934 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.317465761 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 5.465162362 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.3941194 seconds)
    (200/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346470965 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348862209 seconds)
    (202/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.192243696 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.743002799 seconds)
    (204/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.939062922 seconds)
    (205/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.42184068 seconds)
    (206/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.320416492 seconds)
    (207/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.329822973 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.975005013 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.523870697 seconds)
    (210/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.809342409 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.93118584 seconds)
    (212/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.746184276 seconds)
    (213/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.414408587 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347051093 seconds)
    (215/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.303055266 seconds)
    (216/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.31082837 seconds)
    (217/286) benchmarking ("sort", Float64, false)...
    done (took 5.717698851 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.361904228 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.984167664 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.342111869 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.025405315 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.908232294 seconds)
    (223/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.908480245 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.34568828 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.85207899 seconds)
    (226/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724903567 seconds)
    (227/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.32289241 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.929253131 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.823583064 seconds)
    (230/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351040917 seconds)
    (231/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.319151009 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.80287837 seconds)
    (233/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.679949852 seconds)
    (234/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.308794089 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.881217208 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.287107628 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.717786106 seconds)
    (238/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.715969874 seconds)
    (239/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.9507161 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.564191743 seconds)
    (241/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.711650922 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.342083511 seconds)
    (243/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.84691383 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.357567587 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352445714 seconds)
    (246/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.324104709 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.781382101 seconds)
    (248/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.420658832 seconds)
    (249/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.516562415 seconds)
    (250/286) benchmarking ("sort", Int8, true)...
    done (took 6.341711265 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.756322159 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470832761 seconds)
    (253/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.323634323 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326319874 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.360403652 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754785527 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.353373942 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42474358 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35420403 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410158185 seconds)
    (261/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.856917432 seconds)
    (262/286) benchmarking ("sort", Float32, true)...
    done (took 6.333581514 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.441539622 seconds)
    (264/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.688208888 seconds)
    (265/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.431039822 seconds)
    (266/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.305993127 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.231481779 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.191383191 seconds)
    (269/286) benchmarking ("sort", Int8, false)...
    done (took 4.359528243 seconds)
    (270/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.31539827 seconds)
    (271/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.583757083 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.523894395 seconds)
    (273/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.017165314 seconds)
    (274/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.315160902 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.412057141 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.367205384 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.469766416 seconds)
    (278/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.471216306 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.326734181 seconds)
    (280/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414816691 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330544173 seconds)
    (282/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.315933637 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.356758426 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126696588 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340407323 seconds)
    (286/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.462397949 seconds)
  done (took 942.16931219 seconds)
done (took 943.393621144 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360695861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360974673 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339669425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361898422 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.455030096 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361208116 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350323066 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.340569856 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386157321 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.386961337 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344170632 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359109621 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.348748183 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.344911128 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.340850429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362801961 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.441103888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.347506076 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364506144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348574181 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.36546119 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345649415 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390791511 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.362131801 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347200834 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.345015411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.351346861 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366814928 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.460670193 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347169868 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34295541 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.357694409 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440222586 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341210138 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336490614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.366793736 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.359675347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351282221 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.345260672 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3804782 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.869320568 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.36496826 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349762041 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341438978 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.342364126 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.346822298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3484919 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.345803163 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361894938 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363883188 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.854351733 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.377342178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.352712238 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.34065809 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351659905 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346889645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343359016 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366579607 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370097892 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363011495 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.427750525 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349143811 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.346600178 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36657858 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.355638443 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.889343254 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355957111 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346969104 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.866317329 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.368010685 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.887128129 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.373454845 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344460086 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.36550999 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379635844 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.435943209 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340326406 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.344702176 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355881083 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349614079 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.354790881 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365008184 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349329579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347971559 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369762841 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.365181119 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356776007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.352044802 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.354659363 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372319842 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356234837 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.364567156 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.347444981 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.340232636 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355846087 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.352070742 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354378438 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35601523 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347999779 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.355627965 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.863733828 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389672667 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.342202135 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.344358484 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.34496106 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.365032366 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.861729815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369637731 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.368728131 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394617274 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.348126145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.429322512 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353875624 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371146074 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353627805 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.350676248 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342806923 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.433626559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.858574639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381126191 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350021082 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350889061 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371118317 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.349740832 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345555353 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.44551369 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347676549 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368768959 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.478413747 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357095437 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386787197 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.351107959 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351307563 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.371533247 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372137169 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387182814 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352333976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372143459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367010628 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343300498 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365267533 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.359222655 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351249684 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355710368 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344837379 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371226357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367210461 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366410408 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.371324535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47750406 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346273553 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.437245307 seconds)
done (took 228.727825453 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407241685 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342894853 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.431357271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345872397 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442991449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.448361817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343160249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342997808 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342467978 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.721668866 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344985957 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342996951 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.338446909 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345597283 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429408217 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34768405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.341762558 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687970757 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.348249342 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418020669 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.344843676 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342017218 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348203895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.72704222 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339445928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.344733324 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41752078 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.346332293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.69598504 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.349088613 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.346006846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691841383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438182401 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.365639103 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359801379 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354835965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447022796 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365215394 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428322485 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429619206 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.427788457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386192678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346263636 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.348799505 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352385444 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349194564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347024747 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37906426 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.339202512 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349963712 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.687644884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.360520247 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.3548772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348910165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347292157 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370836473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347040571 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350304437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435782937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351259281 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412803568 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.730545304 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.727818523 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352839819 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.345674544 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34702804 seconds)
  done (took 149.342635036 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415700966 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420519074 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463593496 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369677168 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401068712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468867403 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368648542 seconds)
  done (took 11.158647098 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357231864 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351833267 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400848447 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400774845 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353670946 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527233103 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354555885 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363661452 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.3493805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.403655356 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352139712 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353888126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359555214 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343969236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398402951 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361043309 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467401391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351531488 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350031801 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513069181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349241505 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354940341 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405506625 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36125989 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354000785 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356000605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.216419879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352024467 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35281324 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352021165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352581215 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.430138715 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351883069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.34990505 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351142653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470581775 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355893815 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350945349 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353927592 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.349511747 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.355164764 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354519377 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356313614 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349761424 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356365676 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380421592 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356304275 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35730165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355754307 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359536328 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409032015 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356460858 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352817939 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357431745 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411849149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363743577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358390547 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354705267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353633383 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351520983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515654508 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402086757 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352901065 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405620117 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35326807 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353795502 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355157217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353271637 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409159313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355525446 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402311534 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354276917 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543210286 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374868765 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355542915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357907304 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358751718 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356241968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.355588432 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362010235 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.355775751 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357026204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.36082207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35318466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355916981 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.522942044 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469031779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353614133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368172799 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364858247 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352630496 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.410492764 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356910702 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357723955 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409139196 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472321966 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.412677757 seconds)
  done (took 155.701496155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362414891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.366174727 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357860631 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378236246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.3754235 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356340811 seconds)
  done (took 9.454671805 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358482825 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359340976 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358839538 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358010976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355755123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360445687 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358129649 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358312727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363090553 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358530831 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.36034768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363827516 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361379066 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358977434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35864637 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358234373 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.360532113 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355184559 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361600662 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359214951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453918053 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358099862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360992728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361255185 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362988322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358960855 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370299989 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358279729 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.36016661 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369614831 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377371594 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.35974977 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360314335 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365338992 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.365899393 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359860965 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367535328 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.364590025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354985879 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360240362 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.362965959 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364870414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359031706 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367129961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363392676 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365611583 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368134802 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369712191 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.36049519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.366182685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366350161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362248003 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367304046 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.365868877 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36502181 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383860083 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374481378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365234557 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365176984 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363978529 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362238208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.364646309 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363339401 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367125331 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370592889 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370466128 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364466735 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367804463 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362910346 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363893118 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.367575683 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357947663 seconds)
  done (took 100.509870137 seconds)
done (took 427.418876532 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.452162488 seconds)
  done (took 7.71773347 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.528208312 seconds)
  done (took 7.79487229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.189948839 seconds)
  done (took 23.463956195 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.356155069 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.459138599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38295852 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.364917533 seconds)
  done (took 26.827289629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.937372322 seconds)
  done (took 8.202175874 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.359901799 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369629229 seconds)
  done (took 13.998833951 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.467370648 seconds)
  done (took 7.73229006 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.430361371 seconds)
  done (took 7.70345375 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375623277 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.383251251 seconds)
  done (took 14.039844078 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.356672848 seconds)
  done (took 7.624380711 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.798675827 seconds)
  done (took 13.067046754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.372239263 seconds)
  done (took 7.647035303 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.421753888 seconds)
  done (took 7.687477432 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.850725617 seconds)
  done (took 10.116632492 seconds)
done (took 164.891228129 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.359863292 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.35951275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359749527 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.357955707 seconds)
  done (took 26.702503148 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.400226769 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.40094619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402767087 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414180482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406174631 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.401713254 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.396058503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403219487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.411996407 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402476112 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405590628 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403466584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403220412 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.395169894 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404155541 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404760682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.412857767 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404545894 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396569097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403837378 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.369950245 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.415474546 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405465724 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367224151 seconds)
  done (took 34.899064763 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888749235 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43831042 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522926517 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.4192839 seconds)
  done (took 7.538030058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421948788 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.423063743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434922151 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474590701 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500749977 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431741568 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39362352 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386945718 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375915252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425368596 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498209747 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.440479463 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509576375 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.368960711 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572559908 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.367648693 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.369898904 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420759874 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473038114 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.490758641 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367570738 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.422173628 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.42175966 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442181148 seconds)
  done (took 35.704167956 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370147544 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390460939 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36933486 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366568345 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.378114083 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368922392 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371905285 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375985891 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368833694 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375131454 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366959472 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.382606557 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.372087237 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.371237102 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375734596 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371038695 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375609261 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.371963537 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.371249115 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.376215832 seconds)
  done (took 28.738450572 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363300823 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.217223466 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711668062 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.621202616 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.364186742 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.361810075 seconds)
  done (took 27.914836487 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443497417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605911967 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368498194 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.767935393 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.86983494 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.395333151 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371058901 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636471542 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.986523203 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.974927439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437692048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448047697 seconds)
  done (took 20.580763065 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.367616532 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.371945634 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.382835443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380444871 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430855877 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392581009 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37770706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.365949406 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437000288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45527631 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396731555 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431448001 seconds)
  done (took 38.067144498 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451431589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41829455 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.460263941 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404580261 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0878755 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576985584 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465042737 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169769751 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394608502 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637648028 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366348755 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479330451 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626892519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37843255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37328881 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379582415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618898741 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877352138 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368895777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.661790442 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400297509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372506137 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.774915707 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62884189 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604548238 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351023151 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624157783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142137062 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673493251 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38716554 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381469134 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367293922 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639939944 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076952146 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48921218 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603180926 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396762238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918669341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353743845 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.661766568 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377499176 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395972545 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377265787 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367776585 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302015184 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377917941 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170499926 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401440858 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.081649292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367564891 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646710077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470990505 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373337245 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.940292951 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416936884 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393416068 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373454499 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463748418 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971570409 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991465524 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377169333 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.311639156 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370066342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.716284466 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021397954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393328938 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.374698102 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373103064 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305506 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.658886957 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394059297 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507400943 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395666892 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032902241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10790042 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39884617 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309122366 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942713946 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379222111 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.312341891 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599946472 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147512522 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30893974 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.319828206 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304676206 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113120487 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379775915 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.840232089 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392915017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183936893 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63519625 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415435744 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398159415 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596305812 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.253798448 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370807727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.371468911 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489577542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393556195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157270065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33317928 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374799955 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630292214 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583949395 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380462855 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410497798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934961283 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413975238 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.393684984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380818371 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617487898 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.01811943 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407906785 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971372817 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398956296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148935206 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146594925 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391960447 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.383293041 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373842879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689860423 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.162560483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255501602 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440493539 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377236764 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377148462 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.743709919 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233890457 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.269008826 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.595582743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401017845 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.390061018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.37546521 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33821481 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383537706 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387684043 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.158055106 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599016454 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377118999 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656841479 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308557728 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512781622 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394916976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599280099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.671114448 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.404377564 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63775883 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378903312 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38088435 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39355935 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393037809 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475374937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397686959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.38803869 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640746732 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37938584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.379625244 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.735749729 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.161523105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379851195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380189027 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380522485 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999710044 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365822716 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384154272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270740088 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392887588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444471012 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384299123 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61349398 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.766616313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395071544 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.406785415 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.379467594 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608827773 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389277735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.686116777 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464802769 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.909806625 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030899739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406390737 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31287261 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.085725077 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071175593 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377684717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567828444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377587961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615943569 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417133593 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394399474 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998991714 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395457742 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.734030993 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.389683437 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391557679 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382111244 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379920873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.771123897 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910514497 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388856033 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396310153 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5215359 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393526188 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31521998 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896492589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386644445 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378205595 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.155060355 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415302836 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.734035113 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332574097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666454834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381426204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687597268 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.834355956 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418461252 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388748313 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382232888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41125483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390764677 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40456089 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.392321884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.697698801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.837548232 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951769593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14665809 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954184723 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800691446 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407626268 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282051964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182247769 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341966999 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04145917 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636239487 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211962836 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365428898 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925028318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.690551958 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234024494 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669797745 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620870995 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.779079301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.426021239 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673575516 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603142298 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418098307 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394311274 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319882318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.900679067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969789927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418744299 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467528565 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195720128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412445618 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.166620046 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.423909505 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.232132197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845089495 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957598138 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782760537 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38439932 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395065361 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250224713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41061051 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911168573 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034375232 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403171625 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.927313078 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351762077 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623369488 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421339861 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.3845313 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.148359353 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.418709913 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.645595698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666186022 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325128292 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386872076 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950152918 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.259182272 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390313008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388829762 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158266626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406031709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699302982 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396439042 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.806377416 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412027724 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320538543 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319548192 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.079924875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392474739 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364281272 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894676976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.405975231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386144511 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392087657 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244642083 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646192557 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397945007 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022989455 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637860494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388369516 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411206902 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391140997 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387861643 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.378983215 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.73735541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630421187 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466518003 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640713698 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.486630687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.293176265 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469051124 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608602168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287609499 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390292541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677446649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.121867556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.399343746 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183947396 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437325788 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40399767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414858939 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389594272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431836486 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477586444 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629001545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.425659224 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.401209163 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844600559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417657677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414893526 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.405217528 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487021526 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.026354306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.799785024 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18148797 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024633345 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179635168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03500247 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684354278 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398111222 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38950395 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322743405 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536817422 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917765848 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663082934 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510798925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.386199699 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412487454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388363482 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413500856 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606384993 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664576283 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26600336 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398600737 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059012586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.289865072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398562325 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602372288 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902563445 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96870907 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774340141 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40568323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190694195 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689168566 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.483254861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392707617 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987752407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.395967159 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.224955037 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403494878 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391641652 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546956342 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670820782 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108238703 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.425610643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55368518 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163995048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.741551649 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656997931 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.926904116 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640851359 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038715166 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167791419 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662813218 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459874485 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630818116 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535808132 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538950115 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.395170617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291389949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39565302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245042368 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.099333983 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.401722254 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029250129 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681451755 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396950487 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.398855512 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415836093 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.403165106 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619569579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173856082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626663111 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405325311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396574821 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.967417306 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034489181 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702338785 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33640175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.398553364 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66081417 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655940013 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419762474 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849875639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.109892177 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980074763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372474705 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412871055 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41364562 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168769013 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037031197 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.787215765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942145616 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063615757 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405638243 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674838144 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400431216 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398259072 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676482076 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.398125652 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406347998 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642609379 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059137496 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236700276 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.404951411 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.929069779 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.33776355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622643577 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406726772 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34025872 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403070691 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.860984165 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426115554 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517875685 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4073198 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.403079702 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400904516 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.137669326 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676163232 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401839867 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.381325889 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.388635829 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407405213 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495211045 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041345542 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429520062 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.074289448 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74906976 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654837743 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412168589 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.381556037 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403110292 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398965874 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126551312 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375230435 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39802084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004218216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415611256 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.413762364 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401601815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.617144816 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609701396 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418517632 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646885302 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436536992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420250843 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.308281916 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171231764 seconds)
  done (took 1693.839418744 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428367422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.436822417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.446311144 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470516513 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459262718 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451894875 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.479765836 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.485117348 seconds)
  done (took 52.961273581 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.410317958 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.56506504 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.438699212 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41116686 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.415401648 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403872553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.906351545 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.437657994 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.4130769 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.407173719 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.402011202 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.401175214 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.110675326 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.431293355 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.409781063 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.386438465 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.406035744 seconds)
  done (took 66.670203859 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.95531331 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.664996421 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.878034003 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.416121261 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.441200718 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.40123706 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.741839944 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.417388761 seconds)
  done (took 55.22534343 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.420127532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419087753 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418651318 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416769173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.419854157 seconds)
  done (took 8.403335638 seconds)
done (took 2098.514296352 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40372903 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.406363846 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406580473 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406085541 seconds)
  done (took 6.93021342 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.381309785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.128199641 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.388374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40535825 seconds)
  done (took 18.611975579 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.434790193 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.413983781 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.142979291 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.050134925 seconds)
  done (took 5.50183351 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.149171439 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.16203558 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.148003682 seconds)
  done (took 7.766369475 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.400071193 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.406370451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.405726195 seconds)
  done (took 20.518594819 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.702557952 seconds)
  done (took 3.012600812 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545830469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.598233134 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.790938528 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.742082405 seconds)
  done (took 7.986460713 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.788666633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.774024904 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.590464086 seconds)
  done (took 6.462376884 seconds)
done (took 90.945549018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.46488271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424275439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.602991834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.434107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630034219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.602674652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950792885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.401923899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.154580716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.94173051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.437426656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.633947713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.690168469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420677442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.689739201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425122313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.62930109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.506538542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.163154763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.325922039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.9581097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.072004585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.266935062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.089749341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.631642497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.553648078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.652467497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424884157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.340950694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.671915476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.55489413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408237848 seconds)
  done (took 196.463400113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.401027333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410826311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.400578578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39897123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415153451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.401961436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.40155186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417716103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411986621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400672847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400368423 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400617435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.403277102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419007719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402625624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425326952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406537923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.40034165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.401541848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414108865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403132666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432466375 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.407138377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.403701253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403577905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417143216 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.403129608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404117115 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405467733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403164557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.403583601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421051906 seconds)
  done (took 206.353855413 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403154604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403590064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40345496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.419244128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402658047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.403491004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421202322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402659017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419024194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.403389423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402336341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403258488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405480639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419903798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420498214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421884216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.402476349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404428327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.430719987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.416322067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.405908198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402524411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42169778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404594132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403307411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.409137851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410967697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404928854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405368252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.404613787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429801348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406149342 seconds)
  done (took 206.431363673 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.608183523 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.413197639 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.412059024 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368470422 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.415184108 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411208918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409979145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602948466 seconds)
  done (took 14.955866791 seconds)
done (took 625.513688808 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.803260446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.510172405 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.61538679 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432599185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.307263316 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456222878 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432865647 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.614596269 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.361791735 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.61675519 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.739625247 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447740483 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.889140012 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431435545 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.70437478 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545753645 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344936572 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.450356836 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.766815769 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027415451 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.706205525 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.016806202 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648957717 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.389139466 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.913910775 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975424108 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.255190726 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.313940062 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451690746 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.772505164 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.137026456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.540334189 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.486456333 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503123233 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.563350379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549632833 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.505100774 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50693916 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.645253651 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.726426403 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.007528492 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.177735035 seconds)
  done (took 96.606246494 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397239887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.399931182 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398182166 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.400140047 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.399702505 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.398267833 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400852475 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.400802441 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398729457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.400778171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.399701741 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.398607705 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397932843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.400602155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.400368347 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.398794787 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.400860001 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.400837274 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.398598284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.398960829 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.401256123 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.399979821 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.401005621 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.398789066 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399777147 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.402018242 seconds)
  done (took 37.709782606 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417207791 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.679728348 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.86115189 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433034689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419382944 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423778587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.502166224 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419065902 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424774231 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422714683 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.577877721 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420865292 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455409774 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.889111751 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429934618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419722768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42117132 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421120017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.687782039 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431643491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.527782557 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.427819955 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.505015177 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439208679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.44663842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420219654 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422821966 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.996711174 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447441089 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.581333807 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.279494852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510040565 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.977122413 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.892609427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.283869278 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.430540952 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420356255 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.592414021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42558689 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.423288874 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.506623131 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424265105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.867703808 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.123084556 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.447887903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.421861592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018070185 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61489242 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.699711602 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438785831 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895829826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430450694 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422185128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.423719863 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691738632 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438566322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.423124544 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.052350902 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452103638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.506345564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.431600188 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.421979378 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701517211 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428565918 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.681357294 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.42842723 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43094701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.443297046 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.867321947 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432729497 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13964461 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447019301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42315269 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.579003176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.680194416 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.052281698 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.450522866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699790323 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982938331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524728473 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.428654619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.987734028 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.528254665 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42538129 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426619828 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424576872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.426163862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480437167 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.506497138 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.078692777 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143208574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.071874415 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.530819696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440002952 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428161077 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.051698271 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.448258059 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.426496291 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865599092 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.142846763 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.44991524 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.43322318 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139023793 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.449845165 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.512262279 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435504079 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.873180482 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.432899597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476428193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.42586147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432049526 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446296365 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.512203828 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435838258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42646523 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.111280824 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618167965 seconds)
  done (took 188.35062298 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.427832933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436155637 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.432906893 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418618002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418401452 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426490435 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.423403289 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.419641921 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425923324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.420358003 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.422658996 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.421773047 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.420106073 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.420764713 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430867828 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425866447 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036217946 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.421414326 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419003777 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.418337514 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.235214525 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429761379 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42597777 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.421872002 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.422247149 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.422715889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.429156116 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429378725 seconds)
  done (took 154.629821211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.431290721 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.031956935 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446980855 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.567946546 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.448069577 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425659704 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.570143307 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497670506 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.44813621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427445731 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427560478 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.750785275 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.430851643 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.011014302 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.640905538 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590823877 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011555785 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454962319 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.428088417 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425954625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.569576269 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433546256 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.751790084 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.032950193 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448803123 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034332803 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.413222203 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.431500133 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429824025 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.034919367 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.444737689 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751002952 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.51133261 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.4944873 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.051939177 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.998119765 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995778014 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585236094 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.42882406 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.4281094 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426425085 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.413798903 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.035749423 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449011103 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42934149 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024604224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449084166 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.432252476 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437032914 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429742185 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.492704278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510294785 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.773972289 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041905781 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.532244576 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451957282 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.570648913 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.832939657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433607709 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.011631838 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422807052 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.041168851 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.4506851 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.415622752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430229217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435887569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.596327594 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.578337685 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.016200503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458339552 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.01455335 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.619146828 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.438490914 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431878209 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435027841 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.040785092 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034911874 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.617258962 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.583810453 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.649790691 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421907426 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432097114 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.417423149 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.51502637 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.437600932 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.043898179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.003678137 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451716694 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434255997 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434886122 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434071622 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624866013 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.067985855 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.535343997 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.975254773 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.777932891 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.759961793 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435026231 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.496449343 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458754 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.762388847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435307155 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.496584424 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.907658389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.762973476 seconds)
  done (took 171.4841143 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.689482627 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.740684009 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.539990288 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.597812618 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.055808587 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.018427336 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.804905928 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.575396156 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.551893544 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.715577445 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.659662422 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52116465 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.658170964 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515944774 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.224335698 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532368841 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555006214 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.596877895 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597827581 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.523576066 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.144484324 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.728473043 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.6270215 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.424110229 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528678946 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224395998 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.014739021 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995207574 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.624809227 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.824501347 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.024139202 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.605474005 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.435417139 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.153463096 seconds)
  done (took 69.365500984 seconds)
done (took 719.458492324 seconds)
SAVING RESULT...
DONE!
